1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "homenetmon.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "homenetmon.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "homenetmon.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "homenetmon.selectorLabels" . }},app.kubernetes.io/component=application" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Get the admin password by running:
   kubectl get secret --namespace {{ .Release.Namespace }} {{ include "homenetmon.fullname" . }}-secrets -o jsonpath="{.data.SECRET_KEY}" | base64 --decode ; echo

3. HomeNetMon Configuration:
   - Network Range: {{ .Values.config.networkRange }}
   - Ping Interval: {{ .Values.config.pingInterval }} seconds
   - Discovery Interval: {{ .Values.config.discoveryInterval }} seconds
   - Max Monitored Devices: {{ .Values.config.maxMonitoredDevices }}

4. Features Enabled:
   {{- if .Values.config.enablePushNotifications }}
   ‚úì Push Notifications
   {{- end }}
   {{- if .Values.config.enableRemoteAccess }}
   ‚úì Remote Access
   {{- end }}
   {{- if .Values.config.enableAnalytics }}
   ‚úì Analytics
   {{- end }}
   {{- if .Values.config.enableMultiTenancy }}
   ‚úì Multi-Tenancy
   {{- end }}

5. Monitoring:
   {{- if .Values.monitoring.enabled }}
   ‚úì Prometheus metrics available at /metrics
   {{- if .Values.monitoring.serviceMonitor.enabled }}
   ‚úì ServiceMonitor configured for scraping
   {{- end }}
   {{- if .Values.monitoring.grafanaDashboard.enabled }}
   ‚úì Grafana dashboard available
   {{- end }}
   {{- end }}

6. Storage:
   {{- if .Values.persistence.enabled }}
   ‚úì Data persistence: {{ .Values.persistence.size }} ({{ .Values.persistence.accessMode }})
   {{- end }}
   {{- if .Values.logPersistence.enabled }}
   ‚úì Log persistence: {{ .Values.logPersistence.size }} ({{ .Values.logPersistence.accessMode }})
   {{- end }}

7. High Availability:
   {{- if .Values.autoscaling.enabled }}
   ‚úì Horizontal Pod Autoscaler: {{ .Values.autoscaling.minReplicas }}-{{ .Values.autoscaling.maxReplicas }} replicas
   {{- end }}
   {{- if .Values.podDisruptionBudget.enabled }}
   ‚úì Pod Disruption Budget: {{ .Values.podDisruptionBudget.minAvailable }} minimum available
   {{- end }}

8. Security:
   {{- if .Values.networkPolicy.enabled }}
   ‚úì Network policies configured
   {{- end }}
   ‚úì RBAC configured with minimal permissions
   ‚úì Non-root container execution
   ‚úì Security context constraints applied

9. Useful Commands:
   # View logs
   kubectl logs --namespace {{ .Release.Namespace }} -l "{{ include "homenetmon.selectorLabels" . }}" -f

   # Scale deployment
   kubectl scale --namespace {{ .Release.Namespace }} deployment {{ include "homenetmon.fullname" . }} --replicas=5

   # Update configuration
   kubectl patch configmap --namespace {{ .Release.Namespace }} {{ include "homenetmon.fullname" . }}-config -p '{"data":{"LOG_LEVEL":"DEBUG"}}'

   # View events
   kubectl get events --namespace {{ .Release.Namespace }} --sort-by='.lastTimestamp'

   # Check pod status
   kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "homenetmon.selectorLabels" . }}"

{{- if .Values.development.enabled }}

‚ö†Ô∏è  DEVELOPMENT MODE ENABLED ‚ö†Ô∏è
This deployment is configured for development purposes.
Do not use in production environments.

{{- end }}

For more information about HomeNetMon, visit:
üåê Homepage: https://github.com/homenetmon/homenetmon
üìñ Documentation: https://docs.homenetmon.io
üêõ Issues: https://github.com/homenetmon/homenetmon/issues
üí¨ Community: https://discord.gg/homenetmon