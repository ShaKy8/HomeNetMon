apiVersion: apps/v1
kind: Deployment
metadata:
  name: homenetmon-app
  namespace: homenetmon
  labels:
    app.kubernetes.io/name: homenetmon
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: homenetmon
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: homenetmon
      app.kubernetes.io/component: application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homenetmon
        app.kubernetes.io/component: application
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: homenetmon
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: homenetmon
        image: homenetmon/homenetmon:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
        env:
        # Configuration from ConfigMap
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: FLASK_ENV
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: REDIS_URL
        - name: NETWORK_RANGE
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: NETWORK_RANGE
        - name: PING_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: PING_INTERVAL
        - name: MONITORING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: MONITORING_ENABLED
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: LOG_LEVEL
        - name: WORKER_PROCESSES
          valueFrom:
            configMapKeyRef:
              name: homenetmon-config
              key: WORKER_PROCESSES
        
        # Secrets
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: homenetmon-secrets
              key: SECRET_KEY
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: homenetmon-secrets
              key: JWT_SECRET_KEY
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: homenetmon-secrets
              key: DATABASE_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: homenetmon-secrets
              key: REDIS_PASSWORD
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: homenetmon-secrets
              key: SMTP_PASSWORD
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: homenetmon-secrets
              key: SMTP_USERNAME
        
        # Kubernetes metadata
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
              
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: config-storage
          mountPath: /app/config
        - name: tmp
          mountPath: /tmp
          
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
            
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          
        startupProbe:
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
          
      # Sidecar container for nginx reverse proxy
      - name: nginx
        image: nginx:1.24-alpine
        ports:
        - containerPort: 80
          name: nginx-http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: static-files
          mountPath: /app/static
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: homenetmon-data
      - name: logs
        persistentVolumeClaim:
          claimName: homenetmon-logs
      - name: config-storage
        persistentVolumeClaim:
          claimName: homenetmon-config-storage
      - name: nginx-config
        configMap:
          name: homenetmon-nginx-config
      - name: static-files
        emptyDir: {}
      - name: tmp
        emptyDir: {}
        
      imagePullSecrets:
      - name: homenetmon-registry
      
      nodeSelector:
        kubernetes.io/os: linux
        
      tolerations:
      - key: "homenetmon.io/dedicated"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - homenetmon
              topologyKey: kubernetes.io/hostname