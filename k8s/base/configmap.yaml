apiVersion: v1
kind: ConfigMap
metadata:
  name: homenetmon-config
  namespace: homenetmon
  labels:
    app.kubernetes.io/name: homenetmon
    app.kubernetes.io/component: config
data:
  # Application Configuration
  FLASK_ENV: "production"
  DATABASE_URL: "sqlite:////app/data/homenetmon.db"
  REDIS_URL: "redis://homenetmon-redis:6379"
  
  # Network Configuration
  NETWORK_RANGE: "192.168.1.0/24"
  PING_INTERVAL: "60"
  DISCOVERY_INTERVAL: "300"
  
  # Monitoring Configuration
  MONITORING_ENABLED: "true"
  REAL_TIME_UPDATES: "true"
  MAX_MONITORED_DEVICES: "1000"
  
  # API Configuration
  API_RATE_LIMIT: "1000"
  API_BURST_LIMIT: "100"
  ENABLE_API_COMPRESSION: "true"
  
  # Feature Flags
  ENABLE_PUSH_NOTIFICATIONS: "true"
  ENABLE_REMOTE_ACCESS: "true"
  ENABLE_MULTI_TENANCY: "false"
  ENABLE_ANALYTICS: "true"
  
  # Logging Configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  LOG_RETENTION_DAYS: "30"
  
  # Security Configuration
  SECURE_HEADERS: "true"
  CSRF_PROTECTION: "true"
  RATE_LIMITING: "true"
  
  # Performance Configuration
  WORKER_PROCESSES: "4"
  WORKER_CONNECTIONS: "1000"
  KEEPALIVE_TIMEOUT: "65"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homenetmon-nginx-config
  namespace: homenetmon
  labels:
    app.kubernetes.io/name: homenetmon
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    upstream app {
        least_conn;
        server homenetmon-app:5000 max_fails=3 fail_timeout=30s;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=5r/s;
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;
        
        # Static files
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # WebSocket endpoints
        location /socket.io/ {
            proxy_pass http://app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Main application
        location / {
            limit_req zone=web burst=10 nodelay;
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check
        location /health {
            access_log off;
            proxy_pass http://app;
        }
    }