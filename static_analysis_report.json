{
  "analysis_info": {
    "timestamp": "2025-09-21T07:59:49.344636",
    "project_root": "/home/kyle/ClaudeCode/HomeNetMon",
    "total_issues": 7483,
    "analysis_duration": 4.353602
  },
  "summary": {
    "critical": 8,
    "high": 39,
    "medium": 2192,
    "low": 5244,
    "info": 0
  },
  "detailed_results": [
    {
      "timestamp": "2025-09-21T07:59:49.345009",
      "test_type": "dependency",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/requirements.txt",
      "line": 51,
      "severity": "MEDIUM",
      "message": "Potentially vulnerable dependency",
      "details": "Consider updating to latest stable version",
      "code_snippet": "pytest-flask==1.3.0"
    },
    {
      "timestamp": "2025-09-21T07:59:49.345728",
      "test_type": "config",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 215,
      "severity": "MEDIUM",
      "message": "Configuration issue: Hardcoded secret key",
      "details": "Review configuration for production deployment",
      "code_snippet": "secret_key = 'dev-secret-key-change-in-production'"
    },
    {
      "timestamp": "2025-09-21T07:59:49.349460",
      "test_type": "config",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/.env",
      "line": 16,
      "severity": "MEDIUM",
      "message": "Configuration issue: Debug mode enabled",
      "details": "Review configuration for production deployment",
      "code_snippet": "DEBUG=true"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363137",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 2,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "from sqlalchemy import Column, Integer, String, DateTime, Boolean, Text, JSON, ForeignKey, Float, Enum as SQLEnum, Index, UniqueConstraint"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363278",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def tenant_id(cls):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363289",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def tenant(cls):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363340",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 108,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363345",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 112,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_active(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363350",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 116,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_trial(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363356",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 120,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trial_expired(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363362",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 126,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def full_domain(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363401",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 186,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363406",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 190,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def price_dollars(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363431",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 231,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363438",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 235,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_active(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363444",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 241,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def days_until_renewal(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 303,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363487",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 307,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def full_name(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363511",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363533",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 380,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363538",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 384,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def amount_dollars(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363543",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 388,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_overdue(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363567",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 428,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363595",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 474,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363616",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 507,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.363640",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 546,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364541",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.ext.declarative import declared_attr"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364549",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.dialects.postgresql import UUID"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364554",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_sqlalchemy import SQLAlchemy"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364560",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364564",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364568",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364574",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.364678",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 150,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import func"
    },
    {
      "timestamp": "2025-09-21T07:59:49.369129",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_models.py",
      "line": 148,
      "severity": "MEDIUM",
      "message": "Function 'get_usage' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.372619",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 13,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Testing Flask JSON behavior:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372631",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 14,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372638",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 17,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n1. DELETE with Content-Type: application/json but no body:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372645",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 21,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Status: {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372649",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 22,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Response: {response.text}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372653",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 24,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372658",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n2. DELETE with no headers:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372663",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 29,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Status: {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372666",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 30,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Response: {response.text}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372671",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 32,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372912",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_json_behavior():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.372965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:49.373218",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_json_behavior.py",
      "line": 8,
      "severity": "MEDIUM",
      "message": "Function 'test_json_behavior' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.514431",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 30,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Reclassifying {len(devices)} devices...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.514458",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 46,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Updated {device.ip_address} ({device.display_name}): {old_type} -> {new_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.514466",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 50,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Successfully updated {updated_count} device classifications\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.514472",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 52,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"No device classifications needed updating\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.514482",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 60,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nDevice Type Summary:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.514487",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 62,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {device_type}: {count} devices\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.514944",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reclassify_all_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.515034",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.515037",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.515043",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Flask"
    },
    {
      "timestamp": "2025-09-21T07:59:49.515047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:49.515050",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.scanner import NetworkScanner"
    },
    {
      "timestamp": "2025-09-21T07:59:49.515526",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reclassify_devices.py",
      "line": 16,
      "severity": "MEDIUM",
      "message": "Function 'reclassify_all_devices' is too long (174 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.520031",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 304,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"HomeNetMon Asset Bundler and Minifier\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520038",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 305,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=====================================\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520046",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 310,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error: Static directory '{static_dir}' not found!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520054",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 317,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\nBuild Summary:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520058",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 318,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"- {stats['bundles_created']} bundles created\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520061",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 319,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"- {stats['total_original_size']:,} bytes -> {stats['total_minified_size']:,} bytes\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520065",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 320,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"- {stats['total_compression_ratio']:.1f}% compression achieved\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520070",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 322,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\nBundle Details:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520074",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 324,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {bundle_name}:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520078",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 325,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    - Type: {bundle_info['type']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520081",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 326,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    - Files: {len(bundle_info['files'])}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520085",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 327,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    - Size: {bundle_info['original_size']:,} -> {bundle_info['minified_size']:,} bytes\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520089",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 328,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    - Compression: {bundle_info['compression_ratio']*100:.1f}%\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520094",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 330,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\nAsset optimization complete!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520097",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 331,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Your HomeNetMon application will now load much faster.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.520103",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 334,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error during asset optimization: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.521488",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 179,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "return hashlib.md5(content.encode('utf-8')).hexdigest()[:8]"
    },
    {
      "timestamp": "2025-09-21T07:59:49.521965",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 179,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "return hashlib.md5(content.encode('utf-8')).hexdigest()[:8]"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522298",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 130,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Bundled {bundle_name}: {original_size:,} -> {len(minified):,} bytes ({len(minified)/original_size*100:.1f}%)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522302",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 173,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Bundled {bundle_name}: {original_size:,} -> {len(minified):,} bytes ({len(minified)/original_size*100:.1f}%)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522435",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 268,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clean_old_bundles(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522793",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522797",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522800",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gzip"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522803",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import shutil"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522806",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522808",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522811",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.522815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.524672",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 23,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.524727",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 59,
      "severity": "MEDIUM",
      "message": "Function 'minify_js' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.524773",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 75,
      "severity": "MEDIUM",
      "message": "Function 'minify_css' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.524896",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 91,
      "severity": "MEDIUM",
      "message": "Function 'bundle_js_files' is too long (184 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.525029",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Function 'bundle_css_files' is too long (184 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.525249",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/build_assets.py",
      "line": 181,
      "severity": "MEDIUM",
      "message": "Function 'build_all_bundles' is too long (319 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.530846",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 318,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(json.dumps(get_complete_info(), indent=2))"
    },
    {
      "timestamp": "2025-09-21T07:59:49.532991",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 153,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "git_date = datetime.fromisoformat(git_info['commit_date'].replace(' ', 'T').replace(' +', '+').replace(' -', '-'))"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533249",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 209,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if git_info['available'] and git_info['branch'] and git_info['branch'] != 'main':"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533459",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533462",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import platform"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533465",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533468",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533471",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533473",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533517",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 98,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533544",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 152,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.533624",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 317,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.535265",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 26,
      "severity": "MEDIUM",
      "message": "Function 'get_git_info' is too long (291 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.535318",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 96,
      "severity": "MEDIUM",
      "message": "Function 'parse_git_version' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.535363",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 110,
      "severity": "MEDIUM",
      "message": "Function 'get_dynamic_version' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.535479",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 142,
      "severity": "MEDIUM",
      "message": "Function 'get_version_info' is too long (164 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.535556",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function 'get_release_name' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.535693",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/version.py",
      "line": 215,
      "severity": "MEDIUM",
      "message": "Function 'get_system_info' is too long (226 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.541152",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 24,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Running: {' '.join(cmd)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541205",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 83,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Updated version.py: {major}.{minor}.{patch}-{build}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541277",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 182,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Updated CHANGELOG.md with version {version}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541287",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 191,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Created Git tag: {tag_name}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541294",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 196,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Pushed tag {tag_name} to remote\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541299",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 198,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Warning: Could not push tag to remote: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541306",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 204,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Current version: {major}.{minor}.{patch}-{current_build}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541320",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 220,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"New version: {new_version}-{build_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541345",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 252,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Creating {bump_type} release...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541351",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 257,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Warning: Working directory is not clean. Uncommitted changes:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541356",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 258,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(result.stdout)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541368",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 273,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Pushed changes to remote\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541373",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 275,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Warning: Could not push changes to remote: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541379",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 277,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u2705 Release {new_version} created successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541384",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 278,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcdd Changelog updated\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541388",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 279,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udff7\ufe0f  Git tag: v{new_version}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541405",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 299,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"DRY RUN MODE - No changes will be made\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541411",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 302,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Current version: {major}.{minor}.{patch}-{build}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541420",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 311,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Would create version: {new_version}-{args.build_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.541431",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 323,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Release failed: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.543604",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 177,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "new_content = f\"# Changelog\\n\\nAll notable changes to HomeNetMon will be documented in this file.\\n\\n{changelog_entry}\""
    },
    {
      "timestamp": "2025-09-21T07:59:49.543649",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 73,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_release_name(match):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.543750",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 283,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.544045",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 226,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.544102",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import argparse"
    },
    {
      "timestamp": "2025-09-21T07:59:49.544105",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:49.544108",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.544111",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.544114",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.544116",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.546235",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 283,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (188 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546363",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 27,
      "severity": "MEDIUM",
      "message": "Function 'get_current_version' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546490",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 50,
      "severity": "MEDIUM",
      "message": "Function 'update_version_file' is too long (199 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546567",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 101,
      "severity": "MEDIUM",
      "message": "Function 'get_commits_since_tag' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546691",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 111,
      "severity": "MEDIUM",
      "message": "Function 'generate_changelog_entry' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546747",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 162,
      "severity": "MEDIUM",
      "message": "Function 'update_changelog' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546791",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 184,
      "severity": "MEDIUM",
      "message": "Function 'create_git_tag' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546911",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 200,
      "severity": "MEDIUM",
      "message": "Function 'bump_version' is too long (184 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.546985",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/release.py",
      "line": 250,
      "severity": "MEDIUM",
      "message": "Function 'create_release' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.555905",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 120,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{color} {file_short}:{line_num} - {message}\\033[0m\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.555924",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 122,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    \u2514\u2500 {details}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556139",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 426,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd0d Starting Comprehensive Static Code Analysis\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556144",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 427,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcca Analyzing project: {self.project_root}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556149",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 428,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u23f0 Started: {self.start_time.strftime('%Y-%m-%d %H:%M:%S')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556155",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 432,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Project directory not found: {self.project_root}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556174",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 454,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcc4 Analyzed {file_count} files...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556179",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 456,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Analysis complete. Analyzed {file_count} files.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556190",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 467,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556193",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 468,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd0d STATIC CODE ANALYSIS SUMMARY\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556197",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 469,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556211",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 486,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udfaf Overall Results:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556215",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 487,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \ud83d\udea8 Critical: {severity_counts['CRITICAL']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556219",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 488,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u274c High: {severity_counts['HIGH']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556223",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 489,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u26a0\ufe0f  Medium: {severity_counts['MEDIUM']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556227",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 490,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u2139\ufe0f  Low: {severity_counts['LOW']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556230",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 491,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u2705 Info: {severity_counts['INFO']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556234",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 492,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \ud83d\udcca Total Issues: {total_issues}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556242",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 493,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u23f1\ufe0f  Duration: {duration.total_seconds():.1f} seconds\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556248",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 496,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udccb Issues by Category:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556255",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 500,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   {category.title()}: {total_cat} issues ({critical_high_cat} critical/high)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556262",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 505,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udea8 CRITICAL & HIGH PRIORITY ISSUES ({len(critical_issues)}):\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556267",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 508,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   {issue['severity']}: {file_short}:{issue['line']} - {issue['message']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556287",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 510,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ... and {len(critical_issues) - 20} more critical issues\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556295",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 514,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udd12 Security Assessment:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556298",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 515,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Total Security Issues: {len(security_issues)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556302",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 516,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Critical Security Issues: {len([r for r in security_issues if r['severity'] == 'CRITICAL'])}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556307",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 517,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   High Security Issues: {len([r for r in security_issues if r['severity'] == 'HIGH'])}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556312",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 520,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udca1 Recommendations:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556316",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 522,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \ud83d\udea8 {critical_high} critical/high issues need immediate attention\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556321",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 524,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83d\udd12 Consider implementing additional security measures\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556326",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 526,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83e\uddf9 Consider code cleanup and refactoring\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556332",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 530,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83c\udfc6 Excellent: No critical security issues found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556336",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 532,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \u2705 Good: Few critical issues, mostly secure\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556341",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 534,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \u26a0\ufe0f  Fair: Some security issues need attention\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556346",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 536,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83d\udea8 Poor: Multiple security issues require immediate fixing\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556352",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 540,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcc4 Detailed report saved to: static_analysis_report.json\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556356",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 541,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556380",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 570,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Static Code Analysis completed successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556385",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 573,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c Static Code Analysis failed!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.556819",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 59,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: debugger;",
      "code_snippet": "r\"debugger;\",  # JavaScript debugger"
    },
    {
      "timestamp": "2025-09-21T07:59:49.560370",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, project_root=\"/home/kyle/ClaudeCode/HomeNetMon\"):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.560518",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 318,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_dependency_security(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.560533",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 343,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_configuration_security(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.560561",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 400,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_external_tools(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.560575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 424,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_comprehensive_analysis(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.560596",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 462,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_summary_report(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.560636",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 543,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def save_detailed_report(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561216",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561222",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561225",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ast"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561228",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561231",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561236",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.561240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:49.565335",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 18,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.565429",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 94,
      "severity": "MEDIUM",
      "message": "Function 'log_result' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.565511",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 132,
      "severity": "MEDIUM",
      "message": "Function 'analyze_security_patterns' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.565618",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 164,
      "severity": "MEDIUM",
      "message": "Function 'analyze_code_quality' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.565705",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 193,
      "severity": "MEDIUM",
      "message": "Function 'analyze_python_ast' is too long (132 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.565825",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function 'analyze_flask_security' is too long (161 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.565905",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 284,
      "severity": "MEDIUM",
      "message": "Function 'analyze_javascript_security' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.565961",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 318,
      "severity": "MEDIUM",
      "message": "Function 'check_dependency_security' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.566047",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 343,
      "severity": "MEDIUM",
      "message": "Function 'check_configuration_security' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.566101",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 378,
      "severity": "MEDIUM",
      "message": "Function 'analyze_file' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.566167",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 400,
      "severity": "MEDIUM",
      "message": "Function 'run_external_tools' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.566249",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 424,
      "severity": "MEDIUM",
      "message": "Function 'run_comprehensive_analysis' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.566572",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 462,
      "severity": "MEDIUM",
      "message": "Function 'generate_summary_report' is too long (456 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.566692",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_static_code_analysis.py",
      "line": 543,
      "severity": "MEDIUM",
      "message": "Function 'save_detailed_report' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.576133",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 62,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.warning(f\"Performance threshold exceeded: {name} = {value:.3f}{unit} (threshold: {self.thresholds[name]}{unit})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576147",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 163,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'status': 'PASS' if statistics.mean(times) < 1.0 else 'SLOW' if statistics.mean(times) < 5.0 else 'FAIL'"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 192,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "report.append(f\"- Threshold: {data['threshold']:.3f}{data['unit']}\" if data['threshold'] else \"- Threshold: None\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576176",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576308",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 292,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_performance_monitoring(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 297,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_request_timer():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576320",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 302,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def record_request_time(response):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576336",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 330,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576341",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 334,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_report():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576345",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 338,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_benchmark():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576712",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576717",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576720",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576725",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from contextlib import contextmanager"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576729",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576732",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576799",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 122,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:49.576903",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import g"
    },
    {
      "timestamp": "2025-09-21T07:59:49.579066",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 292,
      "severity": "MEDIUM",
      "message": "Function 'setup_performance_monitoring' is too long (153 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579195",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 40,
      "severity": "MEDIUM",
      "message": "Function 'record_metric' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579312",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 74,
      "severity": "MEDIUM",
      "message": "Function 'get_metric_summary' is too long (138 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579440",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 120,
      "severity": "MEDIUM",
      "message": "Function 'benchmark_api_endpoints' is too long (154 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579568",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function 'generate_performance_report' is too long (222 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579630",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 208,
      "severity": "MEDIUM",
      "message": "Function '_percentile' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579700",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 222,
      "severity": "MEDIUM",
      "message": "Function '_calculate_overall_health' is too long (108 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579800",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 247,
      "severity": "MEDIUM",
      "message": "Function '_generate_recommendations' is too long (160 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.579871",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 302,
      "severity": "MEDIUM",
      "message": "Function 'record_request_time' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.581533",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 329,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/performance/metrics')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.581544",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 333,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/performance/report')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.581551",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor.py",
      "line": 337,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/performance/benchmark')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.593369",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _load_database_config(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.593523",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 378,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_backups(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.593597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 524,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594215",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594219",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594222",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import argparse"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594225",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594228",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gzip"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594231",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import shutil"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594236",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594244",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594265",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 64,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594272",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 73,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urlparse"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594390",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 325,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import boto3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594393",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 326,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from botocore.exceptions import ClientError"
    },
    {
      "timestamp": "2025-09-21T07:59:49.594435",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 411,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.597385",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 29,
      "severity": "MEDIUM",
      "message": "Function 'setup_logging' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.597508",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 471,
      "severity": "MEDIUM",
      "message": "Function 'load_config' is too long (174 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.597693",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 524,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (327 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.597791",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 61,
      "severity": "MEDIUM",
      "message": "Function '_load_database_config' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.597867",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 96,
      "severity": "MEDIUM",
      "message": "Function '_backup_sqlite_full' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.597956",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 122,
      "severity": "MEDIUM",
      "message": "Function '_backup_postgresql_full' is too long (142 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598073",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 177,
      "severity": "MEDIUM",
      "message": "Function '_backup_postgresql_incremental' is too long (149 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 232,
      "severity": "MEDIUM",
      "message": "Function 'compress_backup' is too long (108 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598231",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 264,
      "severity": "MEDIUM",
      "message": "Function 'encrypt_backup' is too long (139 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598361",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 322,
      "severity": "MEDIUM",
      "message": "Function '_upload_to_s3' is too long (167 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598408",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 378,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_backups' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598472",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 401,
      "severity": "MEDIUM",
      "message": "Function '_get_last_backup_timestamp' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598525",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 415,
      "severity": "MEDIUM",
      "message": "Function 'save_backup_metadata' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.598587",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/backup_database.py",
      "line": 440,
      "severity": "MEDIUM",
      "message": "Function 'create_backup' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.603557",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def resolve_device_recovery_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.603585",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 62,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def resolve_old_security_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.603602",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 91,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.603741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.603744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.603749",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:49.603753",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.603768",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:49.604531",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 20,
      "severity": "MEDIUM",
      "message": "Function 'resolve_device_recovery_alerts' is too long (148 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.604606",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 62,
      "severity": "MEDIUM",
      "message": "Function 'resolve_old_security_alerts' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.604698",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/resolve_alerts.py",
      "line": 91,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.613361",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_logging():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613502",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 317,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613961",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613964",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import argparse"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613967",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613970",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613973",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from contextlib import contextmanager"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613986",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 39,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psycopg2"
    },
    {
      "timestamp": "2025-09-21T07:59:49.613989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urlparse"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614014",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 91,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import shutil"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614022",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 99,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614043",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 142,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 145,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import create_engine"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614082",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 216,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614085",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psycopg2"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614116",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 278,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 279,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psycopg2"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614153",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:49.614158",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 351,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:49.616260",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function 'validate_postgresql_connection' is too long (132 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.616316",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 82,
      "severity": "MEDIUM",
      "message": "Function 'backup_sqlite_database' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.616399",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 97,
      "severity": "MEDIUM",
      "message": "Function 'get_sqlite_schema' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.616448",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 133,
      "severity": "MEDIUM",
      "message": "Function 'create_postgresql_schema' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.616575",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 163,
      "severity": "MEDIUM",
      "message": "Function 'migrate_table_data' is too long (209 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.616680",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 214,
      "severity": "MEDIUM",
      "message": "Function 'migrate_data' is too long (169 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.616762",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 276,
      "severity": "MEDIUM",
      "message": "Function 'validate_migration' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.616980",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_postgresql.py",
      "line": 317,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (364 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.631777",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 54,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_tenant_database(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631797",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 66,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_shared_database(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 70,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_tenant_to_bulk_insert(query_context, result):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 78,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_schema_isolation(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tenant_session():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631838",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 93,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_database_isolation(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631843",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 98,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_query_filters(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631848",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_tenant_id(mapper, connection, target):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631857",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def filter_by_tenant(query_context):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631864",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 117,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def load_tenant_context(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.631935",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 262,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_tenant_context(self, exception=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632100",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 595,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632103",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 596,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632740",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.pool import StaticPool"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from contextlib import contextmanager"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632750",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632753",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632756",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.632760",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cloud_config import get_config"
    },
    {
      "timestamp": "2025-09-21T07:59:49.636503",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 98,
      "severity": "MEDIUM",
      "message": "Function 'setup_query_filters' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.636557",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function 'load_tenant_context' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.636617",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 135,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_from_subdomain' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.636696",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 174,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_from_api_key' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.636762",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 200,
      "severity": "MEDIUM",
      "message": "Function 'validate_tenant_access' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.636800",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 216,
      "severity": "MEDIUM",
      "message": "Function 'setup_tenant_database_connection' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.636875",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 227,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_engine' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.636948",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 273,
      "severity": "MEDIUM",
      "message": "Function 'tenant_context' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637031",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 300,
      "severity": "MEDIUM",
      "message": "Function 'create_tenant' is too long (128 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637082",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 343,
      "severity": "MEDIUM",
      "message": "Function 'initialize_tenant_infrastructure' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637150",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 364,
      "severity": "MEDIUM",
      "message": "Function 'create_default_subscription' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637190",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 404,
      "severity": "MEDIUM",
      "message": "Function 'is_valid_subdomain' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637303",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 444,
      "severity": "MEDIUM",
      "message": "Function 'update_tenant' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637472",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 485,
      "severity": "MEDIUM",
      "message": "Function 'delete_tenant' is too long (175 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637541",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 525,
      "severity": "MEDIUM",
      "message": "Function 'log_tenant_event' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637588",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 560,
      "severity": "MEDIUM",
      "message": "Function 'track_usage' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637664",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 593,
      "severity": "MEDIUM",
      "message": "Function 'enforce_quota' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.637897",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 595,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.638003",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tenant_manager.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function 'filter_by_tenant' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.643520",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 29,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Testing MAC-Based Device Identification\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643536",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 30,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 45)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643549",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 43,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Test MAC Address: {test_mac}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643553",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 44,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Test Device Name: {test_device_name}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643558",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 45,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643563",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 48,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Step 1: Initial device discovery\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643571",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 56,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Discovering device: {initial_device_info['ip']} (MAC: {test_mac})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643581",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 62,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2713 Device created: ID {device.id}, IP {device.ip_address}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643587",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 65,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2717 Device not created!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643592",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 68,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643597",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 71,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Step 2: DHCP IP address change simulation\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643605",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 79,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Device reconnects with new IP: {changed_device_info['ip']} (same MAC: {test_mac})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643613",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 85,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2713 Device updated: ID {device_after_change.id}, IP {device_after_change.ip_address}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643618",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 88,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2713 Same device record maintained (no duplicate created)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643623",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 90,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2717 Different device record - duplication occurred!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643629",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 94,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2713 IP address updated successfully\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643633",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 96,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2717 IP address not updated!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643638",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 99,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2717 Device not found after IP change!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643643",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 102,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643648",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 105,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Step 3: Verify IP change history\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643659",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 116,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2713 Found {len(history)} IP change record(s):\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643664",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 118,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    {record[0]} \u2192 {record[1]} ({record[2]}, detected by: {record[3]})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643668",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 120,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2717 No IP change history found!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643673",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 123,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643678",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 126,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Step 4: Verify no duplicate devices created\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643685",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 131,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Total devices in database: {total_devices}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643688",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 132,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Test devices with MAC {test_mac}: {test_devices}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643693",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 135,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2713 No duplicate devices created\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643698",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 137,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2717 Found {test_devices} devices with same MAC - duplicates exist!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643703",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 140,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643708",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 143,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Cleanup: Removing test device\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643727",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 167,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2713 Test device and all related data removed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643731",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 169,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643735",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 170,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 45)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643739",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 171,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 MAC-Based Device Identification Test PASSED\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643743",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 172,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 DHCP IP address changes are handled correctly\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643746",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 173,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 Device history and settings are preserved\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643751",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 174,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 No duplicate devices are created\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643759",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 181,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nTesting Device Without MAC Address\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643763",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 182,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 35)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643775",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 197,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Testing device without MAC: {device_info['ip']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643800",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 203,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2713 Device created: ID {device.id}, IP {device.ip_address}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643804",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 204,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2713 MAC address: {device.mac_address or 'None (as expected)'}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643811",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 209,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2713 Test device removed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643816",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 213,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2717 Device without MAC not created!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643821",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 217,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"HomeNetMon MAC-Based Device Identification Tests\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643825",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 218,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643837",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 232,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\nTest failed with exception: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643844",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 237,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643849",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 239,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83c\udf89 ALL TESTS PASSED! MAC-based identification is working correctly.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643859",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 241,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c SOME TESTS FAILED! Please check the implementation.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.643863",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 242,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645506",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_mac_based_identification():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645582",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 178,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_without_mac():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645857",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645860",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645863",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645866",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645873",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645877",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.scanner import NetworkScanner"
    },
    {
      "timestamp": "2025-09-21T07:59:49.645976",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 233,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import traceback"
    },
    {
      "timestamp": "2025-09-21T07:59:49.647242",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 26,
      "severity": "MEDIUM",
      "message": "Function 'test_mac_based_identification' is too long (444 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.647318",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_mac_identification.py",
      "line": 178,
      "severity": "MEDIUM",
      "message": "Function 'test_device_without_mac' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.666000",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 108,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf1f APPLICATION LEVEL: Request received for {request.method} {request.path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666015",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 109,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf1f Headers: {dict(request.headers)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666021",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 110,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf1f User-Agent: {request.headers.get('User-Agent', 'None')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666026",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 111,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf1f Content-Type: {request.content_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666031",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 113,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf1f Form data: {dict(request.form)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666035",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 115,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf1f JSON data: {request.get_json()}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666055",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 137,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(devices_bp, url_prefix='/api/devices')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666060",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 138,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(monitoring_bp, url_prefix='/api/monitoring')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666064",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 139,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(config_bp, url_prefix='/api/config')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666068",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 140,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(config_management_bp, url_prefix='/api/config-management')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666072",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 141,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(analytics_bp, url_prefix='/api/analytics')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666076",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 142,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(speedtest_bp, url_prefix='/api/speedtest')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666080",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 143,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(device_control_bp, url_prefix='/api/device-control')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666084",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 144,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(anomaly_bp, url_prefix='/api/anomaly')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666088",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 145,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(security_bp, url_prefix='/api/security')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666092",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 146,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(notifications_bp, url_prefix='/api/notifications')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666096",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 147,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(automation_bp, url_prefix='/api/automation')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666100",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 148,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(system_bp, url_prefix='/api/system')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666104",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 149,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(health_bp, url_prefix='/api/health')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666107",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 150,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(escalation_bp, url_prefix='/api/escalation')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666111",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 151,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(performance_bp, url_prefix='/api/performance')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666115",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 152,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(performance_optimization_bp)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666118",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 153,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(rate_limit_admin_bp, url_prefix='/api/rate-limit')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666122",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 154,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(maintenance_bp, url_prefix='/api/maintenance')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666831",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1143,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udea8 400 ERROR DEBUG: {error}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666836",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1144,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udea8 Request path: {request.path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666840",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1145,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udea8 Request method: {request.method}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666844",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1146,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udea8 Error description: {error.description}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.666848",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1147,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udea8 Error code: {error.code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.667016",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1377,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Starting HomeNetMon on {Config.HOST}:{Config.PORT}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.667020",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1378,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Monitoring network: {Config.NETWORK_RANGE}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.667024",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1379,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Ping interval: {Config.PING_INTERVAL}s\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.667028",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1380,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Dashboard: http://{Config.HOST}:{Config.PORT}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677219",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 370,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if key in ['performance_collection_interval', 'performance_collection_period', 'performance_retention_days']:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677254",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1323,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "icon_map = {'router': '\ud83c\udf10', 'computer': '\ud83d\udcbb', 'phone': '\ud83d\udcf1', 'camera': '\ud83d\udcf7', 'smart_home': '\ud83c\udfe0', 'unknown': '\u2753'}"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677274",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_app():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677307",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 84,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cors_allowed_origins_callback(origin):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677321",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 106,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def debug_application_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677390",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 252,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring_services():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677434",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 341,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def register_config_callbacks():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677439",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 345,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scanner_config_callback(key, old_value, new_value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677444",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 351,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor_config_callback(key, old_value, new_value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677450",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 357,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def alert_config_callback(key, old_value, new_value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677456",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 363,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bandwidth_config_callback(key, old_value, new_value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677461",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 369,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_config_callback(key, old_value, new_value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677470",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 380,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def inject_version():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677477",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 389,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def inject_csrf():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 391,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def csrf_token():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677489",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 403,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_csrf_token():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677498",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 416,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def inject_settings():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677511",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 439,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_no_cache_headers(response):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677519",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 450,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677529",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 464,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def dashboard_full():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677538",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 478,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def favicon():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677543",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 483,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def device_detail(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677548",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 487,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def settings():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677552",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 491,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 495,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def notifications():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677561",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 500,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def notification_analytics():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677566",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 505,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analytics():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677571",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 509,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677576",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 514,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ai_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677580",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 518,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def security_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677586",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 525,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def system_info():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677590",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 529,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def about():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677595",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 534,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitored_hosts():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677600",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 539,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 544,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def noc_view():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677610",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 550,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ai_dashboard_underscore_redirect():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677615",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 554,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def security_dashboard_underscore_redirect():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677620",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 560,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def topology():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677626",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 566,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def network_map():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677632",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 574,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def security():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677638",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 582,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_debug():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677643",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 587,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def full_view():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677649",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 594,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def escalation_rules():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677655",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 599,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def new_escalation_rule():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677660",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 604,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def edit_escalation_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677665",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 609,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def escalation_executions():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677670",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 614,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 618,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_routes():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677682",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 629,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def simple_test():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677686",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 633,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def traceroute_test():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677694",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 645,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def service_worker():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677699",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 649,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def serve_image(filename):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677707",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 661,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_subscription(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677746",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 700,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_unsubscription(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677760",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 723,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_device_update_request(data=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 754,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_config_update_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677788",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 770,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_configuration_update(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677810",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 811,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_health_update_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 847,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_topology_update_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677846",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 875,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_alert_updates_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677870",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 912,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_chart_data_request(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677908",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 985,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_performance_summary_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677917",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 997,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_device_performance_request(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677933",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1024,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_delta_subscription(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677947",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1047,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_performance_metrics_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677966",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1080,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_performance_collection_trigger(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.677982",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def emit_alert_update(alert, action='created'):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678000",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1142,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bad_request(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678009",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1155,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def unauthorized(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678016",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1163,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def forbidden(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678022",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1171,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def not_found(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678030",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1183,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def method_not_allowed(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678036",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1191,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def payload_too_large(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678042",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1199,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def rate_limit_exceeded(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678049",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1207,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def internal_error(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678058",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1222,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_exception(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678066",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1234,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678080",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1258,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def readiness_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678103",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1304,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def liveness_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.678111",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1314,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_topology_test():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679020",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 398,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679512",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679515",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679518",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679521",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679526",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_compress import Compress"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679529",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679534",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.scanner import NetworkScanner"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679536",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.monitor import DeviceMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679539",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.alerts import AlertManager"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679542",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.bandwidth_monitor import BandwidthMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 44,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.http_optimizer import HTTPOptimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 67,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from performance_middleware import PerformanceMiddleware"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 75,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.security_middleware import SecurityMiddleware"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679586",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679606",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 119,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.monitoring import monitoring_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679608",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 120,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.config import config_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679611",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 121,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.analytics import analytics_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679614",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 122,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.speedtest import speedtest_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679617",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 123,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.device_control import device_control_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679620",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 124,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.anomaly import anomaly_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 125,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.security import security_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679626",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 126,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.notifications import notifications_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679629",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 127,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.automation import automation_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679631",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 128,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.config_management import config_management_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679634",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 129,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.system import system_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679637",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.health import health_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679640",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 131,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.escalation import escalation_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679643",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 132,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.performance import performance_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679646",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 133,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.performance_optimization import performance_optimization_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679649",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 134,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limit_admin import rate_limit_admin_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679651",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 135,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.maintenance import maintenance_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679668",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 163,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.speedtest import speed_test_service"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679672",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 167,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.anomaly_detection import anomaly_detection_service"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679676",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 171,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.security_scanner import security_scanner"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679680",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 175,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rule_engine import rule_engine_service"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679684",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 179,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.configuration_service import configuration_service"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679689",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 183,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.escalation_service import escalation_service"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679693",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "# from services.rate_limiter import init_rate_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679698",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 192,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_monitor import performance_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679703",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 198,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "# from core.rate_limiter import apply_global_rate_limiting"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679714",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 216,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_optimizer import init_websocket_optimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679720",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 221,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.websocket_memory_manager import fix_websocket_memory_leaks"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679725",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 226,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.query_cache import init_query_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679730",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 231,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.memory_monitor import init_memory_monitoring"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 237,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "# from version import __version__"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 419,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679844",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 453,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679859",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 467,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679941",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 634,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_control import DeviceControlService"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 729,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_optimizer import websocket_optimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:49.679999",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 745,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680008",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 757,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680040",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 816,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import timedelta"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680059",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 850,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680075",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 879,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_optimizer import websocket_optimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680080",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 884,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680101",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 921,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680104",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 922,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import timedelta"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 948,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680122",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 949,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680152",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1007,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680175",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1050,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_cache import get_cache_performance_metrics"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680178",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1051,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.memory_monitor import get_memory_stats"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680181",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1052,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.thread_pool_manager import thread_pool_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680270",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1237,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import text"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680284",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1261,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import text"
    },
    {
      "timestamp": "2025-09-21T07:59:49.680295",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1279,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:49.689440",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 20,
      "severity": "MEDIUM",
      "message": "Function 'create_app' is too long (3903 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.689565",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 106,
      "severity": "MEDIUM",
      "message": "Function 'debug_application_request' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.689801",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 252,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring_services' is too long (309 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.689883",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 403,
      "severity": "MEDIUM",
      "message": "Function 'get_csrf_token' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690343",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 633,
      "severity": "MEDIUM",
      "message": "Function 'traceroute_test' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690448",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 661,
      "severity": "MEDIUM",
      "message": "Function 'handle_subscription' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690497",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 700,
      "severity": "MEDIUM",
      "message": "Function 'handle_unsubscription' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690563",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 723,
      "severity": "MEDIUM",
      "message": "Function 'handle_device_update_request' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690602",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 754,
      "severity": "MEDIUM",
      "message": "Function 'handle_config_update_request' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690675",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 770,
      "severity": "MEDIUM",
      "message": "Function 'handle_configuration_update' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690740",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 811,
      "severity": "MEDIUM",
      "message": "Function 'handle_health_update_request' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690804",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 847,
      "severity": "MEDIUM",
      "message": "Function 'handle_topology_update_request' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.690880",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 875,
      "severity": "MEDIUM",
      "message": "Function 'handle_alert_updates_request' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691051",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 912,
      "severity": "MEDIUM",
      "message": "Function 'handle_chart_data_request' is too long (272 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691132",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 997,
      "severity": "MEDIUM",
      "message": "Function 'handle_device_performance_request' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691186",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1024,
      "severity": "MEDIUM",
      "message": "Function 'handle_delta_subscription' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691244",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1047,
      "severity": "MEDIUM",
      "message": "Function 'handle_performance_metrics_request' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691297",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1080,
      "severity": "MEDIUM",
      "message": "Function 'handle_performance_collection_trigger' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691363",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1109,
      "severity": "MEDIUM",
      "message": "Function 'emit_alert_update' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691402",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1142,
      "severity": "MEDIUM",
      "message": "Function 'bad_request' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691597",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1234,
      "severity": "MEDIUM",
      "message": "Function 'health_check' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691670",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1258,
      "severity": "MEDIUM",
      "message": "Function 'readiness_check' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.691834",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1314,
      "severity": "MEDIUM",
      "message": "Function 'get_topology_test' is too long (236 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.692023",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 341,
      "severity": "MEDIUM",
      "message": "Function 'register_config_callbacks' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.697167",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 449,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697188",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 463,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/dashboard/full')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697198",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 477,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/favicon.ico')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697204",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 482,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/device/<int:device_id>')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697209",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 486,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/settings')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697214",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 490,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/alerts')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697220",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 494,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/notifications')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697225",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 499,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/notifications/analytics')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697231",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 504,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/analytics')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697236",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 508,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/performance-dashboard')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697241",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 513,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/ai-dashboard')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697246",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 517,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/security-dashboard')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697253",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 524,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/system-info')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697259",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 528,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/about')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697264",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 533,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/monitored-hosts')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697270",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 538,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/devices')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697275",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 543,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/noc')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697281",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 549,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/ai_dashboard')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697287",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 553,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/security_dashboard')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697292",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 559,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/topology')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697298",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 565,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/network-map')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697304",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 573,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/security')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697311",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 581,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/test-debug')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697317",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 586,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/full-view')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697323",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 593,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/escalation-rules')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697328",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 598,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/escalation-rules/new')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697335",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 603,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/escalation-rules/<int:rule_id>/edit')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697340",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 608,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/escalation-executions')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697346",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 613,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/test')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697351",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 617,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/debug/routes')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697358",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 628,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/simple-test')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697363",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 632,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/traceroute-test')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697371",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 644,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/static/service-worker.js')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697376",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 648,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/static/images/<path:filename>')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697540",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1233,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/health')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697551",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1257,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/ready')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697568",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1303,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/live')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.697575",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/app.py",
      "line": 1313,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/monitoring/topology-test')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703114",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 46,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"CREATE INDEX IF NOT EXISTS idx_monitoring_response_time ON monitoring_data(response_time) WHERE response_time IS NOT NULL\","
    },
    {
      "timestamp": "2025-09-21T07:59:49.703139",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_db_connection():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703148",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_critical_indexes():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703173",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 73,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_monitoring_data(retention_days=7):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703195",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 116,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_performance_metrics(retention_days=7):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703215",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 153,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_resolved_alerts(retention_days=30):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703231",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 184,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def vacuum_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703243",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 205,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703263",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 245,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703550",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703553",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.703559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.704911",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 27,
      "severity": "MEDIUM",
      "message": "Function 'add_critical_indexes' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.705018",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 73,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_monitoring_data' is too long (163 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.705095",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 116,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_performance_metrics' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.705162",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 153,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_resolved_alerts' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.705204",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 184,
      "severity": "MEDIUM",
      "message": "Function 'vacuum_database' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.705289",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 205,
      "severity": "MEDIUM",
      "message": "Function 'analyze_database' is too long (136 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.705348",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/db_optimize.py",
      "line": 245,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.712173",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 36,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Creating database backup: {backup_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712192",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 46,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Backup created successfully: {backup_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712201",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 54,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== DUPLICATE DEVICE ANALYSIS ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712216",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 71,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Found {len(duplicates)} MAC addresses with multiple device entries:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712221",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 73,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  MAC {mac}: {count} devices (IPs: {ips}) (IDs: {ids})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712227",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 77,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Total duplicate device entries: {total_duplicates}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712231",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 79,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"No duplicate MAC addresses found - good!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712241",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 89,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Warning: {no_mac_count} devices have no MAC address - these will need manual attention\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712251",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 98,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== MERGING DUPLICATE DEVICES ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712277",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 131,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"MAC {mac_address}: Keeping device ID {primary_device[0]} (IP: {primary_device[1]})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712309",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 169,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Moving data from device ID {device_id} (IP: {device[1]})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712348",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 219,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Merged {merged_count} duplicate device entries\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712355",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 226,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== CREATING IP CHANGE HISTORY TABLE ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712392",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 253,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Created device_ip_history table with indexes\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712396",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 255,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Would create device_ip_history table\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712404",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 261,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== UPDATING DATABASE SCHEMA ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712417",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 275,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Removing unique constraint from ip_address...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712446",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 309,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Removed unique constraint from ip_address, added unique constraint to mac_address\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712452",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 313,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Added unique constraint to mac_address\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712458",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 316,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error updating schema: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712463",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 319,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Would update database schema\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712470",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 325,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== HANDLING DEVICES WITHOUT MAC ADDRESSES ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712480",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 336,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Found {len(devices_without_mac)} devices without MAC addresses:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712485",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 339,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  ID {device_id}: {display_name} ({ip}) - {device_type or 'unknown type'}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712490",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 341,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nThese devices will need to be rescanned to obtain MAC addresses.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712494",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 342,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"They will remain in the database but may be duplicated if DHCP assigns new IPs.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712504",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 352,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Marked devices without MAC addresses for re-scanning\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712508",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 354,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"All devices have MAC addresses - excellent!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712537",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 391,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Created MAC_MIGRATION_NOTES.md with implementation guidance\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712542",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 393,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Would create MAC_MIGRATION_NOTES.md\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712554",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 405,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error: Database not found at {args.db_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712559",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 408,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"HomeNetMon MAC-Based Device Identification Migration\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712563",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 409,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 55)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712568",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 412,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"DRY RUN MODE - No changes will be made\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712571",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 413,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712588",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 434,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== MIGRATION COMPLETED SUCCESSFULLY ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712594",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 435,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2713 Created device IP change history table\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712598",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 436,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2713 Merged {merged_count} duplicate device entries\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712603",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 437,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2713 Updated database schema for MAC-based identification\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712607",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 438,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2713 Handled {no_mac_count} devices without MAC addresses\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712611",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 440,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== DRY RUN COMPLETE ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712615",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 441,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"No changes were made. Run without --dry-run to perform migration.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.712624",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 449,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\nError during migration: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.715827",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def backup_database(db_path, backup_path=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.715841",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 49,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_duplicate_devices(db_path):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.715871",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 94,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def merge_duplicate_devices(conn, dry_run=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.715936",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 222,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_ip_history_table(conn, dry_run=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.715956",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 257,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_database_schema(conn, dry_run=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.715990",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_devices_without_mac(conn, dry_run=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 356,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_scanner_config(dry_run=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716032",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 395,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716526",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716530",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716532",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716535",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716538",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import argparse"
    },
    {
      "timestamp": "2025-09-21T07:59:49.716542",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.718232",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Function 'backup_database' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.718318",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 49,
      "severity": "MEDIUM",
      "message": "Function 'analyze_duplicate_devices' is too long (120 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.718525",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 94,
      "severity": "MEDIUM",
      "message": "Function 'merge_duplicate_devices' is too long (329 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.718616",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 257,
      "severity": "MEDIUM",
      "message": "Function 'update_database_schema' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.718678",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 321,
      "severity": "MEDIUM",
      "message": "Function 'handle_devices_without_mac' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.718825",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_to_mac_based.py",
      "line": 395,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (208 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.724319",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 31,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"[{status}] {test_name}: {message}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724334",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 33,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    Details: {details}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724341",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 37,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== Testing Analytics Page Accessibility ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724356",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 53,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== Testing Analytics API Endpoints ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724397",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 101,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== Testing Analytics Data Structure ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724419",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 126,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== Testing JavaScript Functions ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724443",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 154,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== Testing Button Elements ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724473",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 189,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== Testing Chart Dependencies ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724497",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 214,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== Testing WebSocket Support ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724515",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 234,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724518",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 235,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"ANALYTICS PAGE FUNCTIONALITY TEST SUITE\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724522",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 236,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724529",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 240,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u274c Server not accessible. Cannot continue with tests.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724545",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 257,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724549",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 258,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"TEST SUMMARY\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724553",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 259,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724561",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 266,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Total Tests: {total_count}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724565",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 267,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Passed: {pass_count}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724569",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 268,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u26a0\ufe0f  Warnings: {warning_count}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724573",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 269,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Failed: {fail_count}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724578",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 272,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u274c FAILED TESTS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724583",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 275,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  - {result['test']}: {result['message']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724589",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 278,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u26a0\ufe0f  WARNING TESTS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724594",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 281,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  - {result['test']}: {result['message']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.724598",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 283,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726746",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 88,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.log_result(f\"API: {endpoint['name']}\", \"PASS\", f\"Endpoint working (HTTP {response.status_code})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726749",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 90,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.log_result(f\"API: {endpoint['name']}\", \"WARNING\", f\"Endpoint not found/allowed (HTTP {response.status_code})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726752",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 92,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.log_result(f\"API: {endpoint['name']}\", \"WARNING\", f\"Client error (HTTP {response.status_code}) - endpoint exists but needs auth/data\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726755",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 120,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.log_result(\"Device Data Structure\", \"FAIL\", f\"Could not fetch device data (HTTP {response.status_code})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726776",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def log_result(self, test_name, status, message, details=\"\"):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726786",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 35,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_page_accessibility(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726796",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_api_endpoints(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726821",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 99,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_analytics_data_structure(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726849",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 124,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_javascript_functions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726870",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 152,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_button_elements(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726888",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_chart_dependencies(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726903",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 212,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_websocket_endpoint(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726915",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_all_tests(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.726928",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 255,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def print_summary(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.727235",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:49.727238",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.727241",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.727244",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import urllib3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.727247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urljoin"
    },
    {
      "timestamp": "2025-09-21T07:59:49.729107",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 35,
      "severity": "MEDIUM",
      "message": "Function 'test_page_accessibility' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729255",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 51,
      "severity": "MEDIUM",
      "message": "Function 'test_api_endpoints' is too long (245 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729335",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 99,
      "severity": "MEDIUM",
      "message": "Function 'test_analytics_data_structure' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729389",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 124,
      "severity": "MEDIUM",
      "message": "Function 'test_javascript_functions' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729488",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 152,
      "severity": "MEDIUM",
      "message": "Function 'test_button_elements' is too long (167 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729553",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 187,
      "severity": "MEDIUM",
      "message": "Function 'test_chart_dependencies' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729603",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 212,
      "severity": "MEDIUM",
      "message": "Function 'test_websocket_endpoint' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729644",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 232,
      "severity": "MEDIUM",
      "message": "Function 'run_all_tests' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.729754",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_api.py",
      "line": 255,
      "severity": "MEDIUM",
      "message": "Function 'print_summary' is too long (172 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.732568",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 111,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nServer stopped by user\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733307",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_hypercorn_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733334",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 69,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "async def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733385",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 59,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if cert_file and key_file and os.path.exists(cert_file) and os.path.exists(key_file):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733468",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733471",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733474",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733477",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from hypercorn.asyncio import serve"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733485",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from hypercorn.middleware import HTTPToHTTPSRedirectMiddleware"
    },
    {
      "timestamp": "2025-09-21T07:59:49.733490",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:49.734073",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/run_http2.py",
      "line": 20,
      "severity": "MEDIUM",
      "message": "Function 'create_hypercorn_config' is too long (162 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.741346",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 403,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741363",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 404,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\ude80 HOMENATMON ADVANCED PERFORMANCE OPTIMIZATION\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741369",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 405,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741375",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 408,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udcca Step 1: Database Optimization\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741379",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 409,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"-\"*40)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741388",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 417,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u26a0\ufe0f  Database is {db_size:.1f}MB - cleaning up old data...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741393",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 419,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Cleaned up {deleted:,} old records\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741399",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 423,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Created optimized indexes\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741405",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 427,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Created optimized views\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741410",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 431,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Enabled query planner optimizations\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741415",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 434,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u26a1 Step 2: Performance Enhancement Modules\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741420",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 435,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"-\"*40)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741427",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 442,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Created ultra-fast cache module\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741433",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 446,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Created query optimizer module\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741438",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 449,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u2699\ufe0f  Step 3: Application Configuration\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741442",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 450,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"-\"*40)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741452",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 461,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Recommended configuration updates:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741457",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 463,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {key} = {value}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741487",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 503,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Created optimized configuration file\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741491",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 506,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741495",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 507,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83c\udfaf OPTIMIZATION COMPLETE!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741499",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 508,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741504",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 510,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udcc8 Expected Performance Improvements:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741508",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 511,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2022 Database queries: 10-20x faster with indexes and views\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741511",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 512,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2022 Page load time: 70-80% reduction with caching\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741515",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 513,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2022 Memory usage: Reduced by cleaning old data\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741519",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 514,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2022 Response time: Sub-100ms for cached queries\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741523",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 516,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\ude80 To Apply Optimizations:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741527",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 517,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  1. Restart the application\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741532",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 518,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  2. Import the new cache module in app.py:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741536",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 519,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"     from services.ultra_cache import device_cache, cached_query\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741539",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 520,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  3. Use @cached_query decorator on slow database functions\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741543",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 521,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  4. Update config.py with optimized settings\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.741547",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 523,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u2705 Your HomeNetMon should now be significantly faster!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.743737",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 220,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "return hashlib.md5(key_data).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.744500",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 220,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "return hashlib.md5(key_data).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745081",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 107,
      "severity": "LOW",
      "message": "Line too long (160 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"CREATE INDEX IF NOT EXISTS idx_devices_list_covering ON devices(is_monitored, device_type, last_seen DESC, id, ip_address, custom_name, hostname)\","
    },
    {
      "timestamp": "2025-09-21T07:59:49.745084",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 113,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"CREATE INDEX IF NOT EXISTS idx_monitoring_recent ON monitoring_data(device_id, timestamp DESC) WHERE timestamp > datetime('now', '-24 hours')\","
    },
    {
      "timestamp": "2025-09-21T07:59:49.745087",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 119,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"CREATE INDEX IF NOT EXISTS idx_performance_recent ON performance_metrics(device_id, timestamp DESC) WHERE timestamp > datetime('now', '-7 days')\","
    },
    {
      "timestamp": "2025-09-21T07:59:49.745114",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, db_path='homeNetMon.db'):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def connect(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745127",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 36,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_database_size(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 69,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_monitoring_data(self, days_to_keep=7):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 97,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_optimized_indexes(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745182",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 135,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_queries(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745202",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 173,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def enable_query_planner_optimizations(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745213",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 191,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_fast_cache_module():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745256",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745259",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 276,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745273",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 300,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_query_optimizer():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745285",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 319,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_optimized(db_session, limit=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745296",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_with_recent_data(db_session, device_id, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745309",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 359,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_dashboard_data_optimized(db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 400,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745913",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745916",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745919",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745922",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745926",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.745929",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 199,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746021",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 200,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746025",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 202,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import OrderedDict"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746028",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 203,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pickle"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746031",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746082",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 308,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import text"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746086",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 311,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.746162",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 467,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.747583",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 400,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (266 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.747712",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function 'analyze_database_size' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.747785",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 69,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_monitoring_data' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.747837",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_performance.py",
      "line": 97,
      "severity": "MEDIUM",
      "message": "Function 'create_optimized_indexes' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.751916",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 73,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error reading {file_path}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.751982",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 149,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Updated {os.path.basename(file_path)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.751990",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 152,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Error writing {file_path}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752008",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 171,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd27 Adding rate limiting decorators to API endpoints...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752012",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 172,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752022",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 182,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcca SUMMARY:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752026",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 183,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Total API files: {total_files}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752029",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 184,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Files updated: {updated_files}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752034",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 185,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Files unchanged: {total_files - updated_files}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752039",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 188,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u2705 Successfully added rate limiting to {updated_files} files!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752043",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 189,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Run the check_rate_limits.py script to verify coverage.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.752047",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 191,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u2139\ufe0f  No files needed updates.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.753457",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 169,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.753522",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 92,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if not has_import and (line.startswith('import ') or line.startswith('from ')) and i + 1 < len(lines):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.753680",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.753684",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.753721",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 79,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "# Check if rate limiting import exists"
    },
    {
      "timestamp": "2025-09-21T07:59:49.754786",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 11,
      "severity": "MEDIUM",
      "message": "Function 'determine_rate_limit_type' is too long (164 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.754998",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 67,
      "severity": "MEDIUM",
      "message": "Function 'add_rate_limiting_to_file' is too long (325 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.755041",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 157,
      "severity": "MEDIUM",
      "message": "Function 'find_api_files' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.755094",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/apply_rate_limiting.py",
      "line": 169,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.771466",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_quota_enforcement(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771485",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 116,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_background_processing(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771736",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 637,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _background_analytics_aggregation(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771749",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 657,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _background_quota_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771759",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 674,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def aggregate_hourly_usage(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771765",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 680,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def aggregate_daily_usage(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771770",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 685,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_usage_records(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771780",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 699,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor_all_tenant_quotas(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771788",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 712,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def refresh_usage_caches(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 760,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_api_call(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 762,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771824",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 768,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_device_monitoring(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.771827",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 770,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772588",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.orm import sessionmaker"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772600",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772603",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772606",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from concurrent.futures import ThreadPoolExecutor"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772609",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772612",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772615",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import redis"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772619",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cloud_config import get_config"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772898",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 595,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.alerts import AlertManager"
    },
    {
      "timestamp": "2025-09-21T07:59:49.772901",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 596,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:49.776927",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 139,
      "severity": "MEDIUM",
      "message": "Function 'record_usage' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.776990",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 180,
      "severity": "MEDIUM",
      "message": "Function 'check_quota_allowance' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777070",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 194,
      "severity": "MEDIUM",
      "message": "Function 'update_usage_cache' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777110",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 216,
      "severity": "MEDIUM",
      "message": "Function 'update_subscription_usage' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777159",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 227,
      "severity": "MEDIUM",
      "message": "Function 'get_current_usage' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777256",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 250,
      "severity": "MEDIUM",
      "message": "Function 'get_usage_analytics' is too long (144 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777327",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 299,
      "severity": "MEDIUM",
      "message": "Function 'aggregate_usage_data' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777422",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 332,
      "severity": "MEDIUM",
      "message": "Function 'calculate_usage_statistics' is too long (134 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777507",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 365,
      "severity": "MEDIUM",
      "message": "Function 'get_quota_information' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777676",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 397,
      "severity": "MEDIUM",
      "message": "Function 'analyze_usage_trends' is too long (260 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777767",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 475,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_quotas' is too long (137 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777822",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 516,
      "severity": "MEDIUM",
      "message": "Function 'calculate_overage_cost' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777866",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 547,
      "severity": "MEDIUM",
      "message": "Function 'check_quota_alerts' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.777922",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 564,
      "severity": "MEDIUM",
      "message": "Function 'send_quota_alert' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.778002",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/usage_analytics.py",
      "line": 590,
      "severity": "MEDIUM",
      "message": "Function '_send_quota_alert_notification' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.784088",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 142,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\033[2J\\033[H\")  # Clear screen"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784098",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 143,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784104",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 144,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\ude80 HOMENATMON PERFORMANCE MONITOR\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784122",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 145,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784125",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 146,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784129",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 147,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784135",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 151,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udcca DATABASE:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784138",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 152,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Size: {db_stats['db_size_mb']:.1f} MB\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784142",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 153,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  Table Counts:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784147",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 155,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    {table}: {count:,}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784150",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 156,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784156",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 160,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udcbb SYSTEM:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784159",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 161,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  CPU: {sys_perf['cpu']['percent']:.1f}% ({sys_perf['cpu']['cores']} cores)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784163",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 162,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Memory: {sys_perf['memory']['used_gb']:.1f}/{sys_perf['memory']['used_gb']+sys_perf['memory']['available_gb']:.1f} GB ({sys_perf['memory']['percent']:.1f}%)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784168",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 163,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Process: {sys_perf['process']['memory_mb']:.1f} MB, {sys_perf['process']['num_threads']} threads\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784172",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 164,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784179",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 168,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u26a1 QUERY PERFORMANCE:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784184",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 171,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {status} {result['query']}: {result['time_ms']:.2f} ms\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784188",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 172,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784195",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 177,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udcbe CACHE STATISTICS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784200",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 179,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {cache_name}:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784203",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 180,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    Hit Rate: {stats['hit_rate']:.1f}%\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784208",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 181,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    Size: {stats['size']}/{stats['max_size']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784212",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 183,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784217",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 186,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udcc8 RECOMMENDATIONS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784222",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 189,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u26a0\ufe0f  Database is large - consider archiving old data\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784228",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 192,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u26a0\ufe0f  High memory usage - consider increasing cache limits\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784234",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 196,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u26a0\ufe0f  Slow queries detected (avg: {avg_query_time:.1f}ms) - check indexes\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784239",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 198,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Excellent query performance (avg: {avg_query_time:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784243",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 200,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Good query performance (avg: {avg_query_time:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784248",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 202,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nPress Ctrl+C to exit\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.784258",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 213,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\\nPerformance monitoring stopped.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785705",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 108,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "(\"Recent Monitoring\", \"SELECT * FROM monitoring_data WHERE timestamp > datetime('now', '-1 hour') LIMIT 100\"),"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785709",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 162,
      "severity": "LOW",
      "message": "Line too long (176 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "print(f\"  Memory: {sys_perf['memory']['used_gb']:.1f}/{sys_perf['memory']['used_gb']+sys_perf['memory']['available_gb']:.1f} GB ({sys_perf['memory']['percent']:.1f}%)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785724",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785730",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_database_stats(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 53,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_system_performance(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785769",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 99,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_query_performance(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785785",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 127,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_cache_stats(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785793",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 140,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def display_dashboard(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.785825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 205,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.786045",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.786048",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.786051",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:49.786054",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.786058",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.786060",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.787216",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 20,
      "severity": "MEDIUM",
      "message": "Function 'get_database_stats' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.787309",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 53,
      "severity": "MEDIUM",
      "message": "Function 'get_system_performance' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.787381",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 99,
      "severity": "MEDIUM",
      "message": "Function 'test_query_performance' is too long (108 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.787610",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_monitor_live.py",
      "line": 140,
      "severity": "MEDIUM",
      "message": "Function 'display_dashboard' is too long (374 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.795425",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, db_path='homeNetMon.db'):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795436",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def connect(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795443",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def close(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795448",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 37,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_tables(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795466",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 72,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_optimized_indexes(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795493",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 123,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_slow_queries(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795536",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 213,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def vacuum_database(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795550",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_data(self, days=7):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795568",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 273,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_settings(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795581",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 294,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_full_optimization(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 338,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795954",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795957",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795960",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.795963",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.797547",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 37,
      "severity": "MEDIUM",
      "message": "Function 'analyze_tables' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.797645",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 72,
      "severity": "MEDIUM",
      "message": "Function 'create_optimized_indexes' is too long (154 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.797751",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 123,
      "severity": "MEDIUM",
      "message": "Function 'optimize_slow_queries' is too long (172 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.797816",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 213,
      "severity": "MEDIUM",
      "message": "Function 'vacuum_database' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.797882",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_data' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.797926",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 273,
      "severity": "MEDIUM",
      "message": "Function 'optimize_settings' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.798006",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/optimize_db_queries.py",
      "line": 294,
      "severity": "MEDIUM",
      "message": "Function 'run_full_optimization' is too long (133 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.801783",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_indexes.sql",
      "line": 94,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "-- SELECT d.*, (SELECT response_time FROM monitoring_data WHERE device_id = d.id ORDER BY timestamp DESC LIMIT 1) as latest_response"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807214",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 43,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"CREATE INDEX IF NOT EXISTS idx_monitoring_response_time ON monitoring_data(response_time) WHERE response_time IS NOT NULL\","
    },
    {
      "timestamp": "2025-09-21T07:59:49.807243",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_critical_indexes():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807266",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 62,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_monitoring_data(retention_days=7):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807297",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 117,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_performance_metrics(retention_days=7):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807312",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 142,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_resolved_alerts(retention_days=30):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807325",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 163,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def vacuum_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807336",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 182,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807354",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807586",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 198,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807619",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807622",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807640",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807644",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.807651",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.808841",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 24,
      "severity": "MEDIUM",
      "message": "Function 'add_critical_indexes' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.808968",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 62,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_monitoring_data' is too long (182 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.809034",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_performance_metrics' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.809093",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 142,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_resolved_alerts' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.809199",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 182,
      "severity": "MEDIUM",
      "message": "Function 'analyze_database' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.809245",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_performance_fix.py",
      "line": 217,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.814597",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 24,
      "severity": "HIGH",
      "message": "Potential hardcoded secrets",
      "details": "Pattern: secret\\s*=\\s*[\\\"'][^\\\"']+[\\\"']",
      "code_snippet": "KUBERNETES_SECRET = \"kubernetes_secret\""
    },
    {
      "timestamp": "2025-09-21T07:59:49.822729",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 78,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _init_cloud_clients(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.822747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 106,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _init_kubernetes_client(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.822802",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 216,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def refresh_all_configs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.822915",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 441,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def refresh_source():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.822965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 538,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823608",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823611",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import yaml"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823615",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import boto3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823618",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import base64"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823625",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823629",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823632",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823635",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from concurrent.futures import ThreadPoolExecutor"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823638",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823641",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from kubernetes.client.rest import ApiException"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823679",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 92,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "# from google.cloud import secretmanager"
    },
    {
      "timestamp": "2025-09-21T07:59:49.823685",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 100,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "# from azure.keyvault.secrets import SecretClient"
    },
    {
      "timestamp": "2025-09-21T07:59:49.826885",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 551,
      "severity": "MEDIUM",
      "message": "Function 'create_cloud_config_manager' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827033",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 63,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827080",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 78,
      "severity": "MEDIUM",
      "message": "Function '_init_cloud_clients' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827118",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 106,
      "severity": "MEDIUM",
      "message": "Function '_init_kubernetes_client' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827186",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 137,
      "severity": "MEDIUM",
      "message": "Function 'remove_source' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827241",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 149,
      "severity": "MEDIUM",
      "message": "Function 'get_config' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827299",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 171,
      "severity": "MEDIUM",
      "message": "Function 'set_config' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827426",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 221,
      "severity": "MEDIUM",
      "message": "Function '_load_config_from_source' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827473",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 242,
      "severity": "MEDIUM",
      "message": "Function '_load_from_k8s_configmap' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827526",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 262,
      "severity": "MEDIUM",
      "message": "Function '_load_from_k8s_secret' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827582",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 284,
      "severity": "MEDIUM",
      "message": "Function '_load_from_aws_parameter_store' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827654",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 309,
      "severity": "MEDIUM",
      "message": "Function '_load_from_aws_secrets_manager' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827699",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 339,
      "severity": "MEDIUM",
      "message": "Function '_load_from_environment' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827766",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 358,
      "severity": "MEDIUM",
      "message": "Function '_load_from_file_system' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827806",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 381,
      "severity": "MEDIUM",
      "message": "Function '_load_single_config' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827870",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 397,
      "severity": "MEDIUM",
      "message": "Function '_update_config_cache' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.827957",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 436,
      "severity": "MEDIUM",
      "message": "Function '_start_watching_source' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.828044",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 481,
      "severity": "MEDIUM",
      "message": "Function 'get_all_configs' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.828080",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 495,
      "severity": "MEDIUM",
      "message": "Function 'export_config' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.828157",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/cloud_config.py",
      "line": 506,
      "severity": "MEDIUM",
      "message": "Function 'health_check' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.832828",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_select_all.html",
      "line": 112,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(message);"
    },
    {
      "timestamp": "2025-09-21T07:59:49.833688",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_select_all.html",
      "line": 8,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "button { padding: 10px 15px; margin: 5px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }"
    },
    {
      "timestamp": "2025-09-21T07:59:49.833694",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_select_all.html",
      "line": 79,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "debug(`Selecting all visible alerts (${this.selectedAlerts.size} selected !== ${visibleAlerts.length} visible)`);"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843274",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 165,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{color} {page_name} - {element_name}: {message}\\033[0m\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843295",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 167,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    \u2514\u2500 {details}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843473",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 413,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n{'='*70}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843479",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 414,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83e\uddea TESTING FUNCTIONALITY: {page['name']} ({page['path']})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843483",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 415,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*70}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843521",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 461,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83e\uddea Starting Comprehensive Button Functionality Test\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843526",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 462,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcca Testing {len(self.pages_to_test)} pages and {len(self.api_endpoints_to_test)} API endpoints\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843530",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 463,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf10 Base URL: {self.base_url}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843534",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 464,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u23f0 Started: {self.start_time.strftime('%Y-%m-%d %H:%M:%S')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843543",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 470,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Server not accessible: HTTP {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843549",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 473,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Cannot connect to server: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843554",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 476,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Server connectivity confirmed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843561",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 482,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n{'='*70}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843565",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 483,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd0c TESTING API ENDPOINTS\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843569",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 484,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*70}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843583",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 500,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u26a0\ufe0f Test interrupted by user\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843597",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 515,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843601",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 516,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83e\uddea BUTTON FUNCTIONALITY TEST SUMMARY\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843605",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 517,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843620",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 534,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udfaf Overall Results:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843644",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 535,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u2705 Passed: {status_counts['PASS']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843648",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 536,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u274c Failed: {status_counts['FAIL']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843653",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 537,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u26a0\ufe0f  Warnings: {status_counts['WARNING']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843657",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 538,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u2139\ufe0f  Info: {status_counts['INFO']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843661",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 539,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \ud83d\udcca Success Rate: {success_rate:.1f}%\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843665",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 540,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u23f1\ufe0f  Duration: {duration.total_seconds():.1f} seconds\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843670",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 543,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udccb Results by Category:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843677",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 547,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   {category.title()}: {counts['PASS']}/{total_cat} ({pass_rate:.1f}% pass)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843684",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 552,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udea8 Critical Issues ({len(critical_fails)}):\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843689",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 554,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u274c {fail['page']} - {fail['element']}: {fail['message']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843700",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 563,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udd18 Button Functionality: {button_pass}/{button_total} ({button_success:.1f}% functional)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843712",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 572,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0c API Endpoints: {api_pass}/{api_total} ({api_success:.1f}% working)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843718",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 575,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udca1 Overall Assessment:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843723",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 577,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83c\udf89 Excellent! All buttons and interactive elements are highly functional\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843728",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 579,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \u2705 Good functionality with minor issues to address\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843733",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 581,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \u26a0\ufe0f  Some functionality issues need attention\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843737",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 583,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83d\udee0\ufe0f  Significant functionality problems require immediate fixing\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843744",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 587,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcc4 Detailed report saved to: button_functionality_report.json\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843748",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 588,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843782",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 619,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Button Functionality Test completed successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.843788",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 622,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c Button Functionality Test failed!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849425",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 143,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def log_result(self, test_type, page_name, element_name, status, message, details=\"\"):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849441",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 169,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_csrf_token(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849453",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 188,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def extract_buttons_from_html(self, html, page_name):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849486",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 260,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_button_presence(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849505",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 297,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_javascript_event_listeners(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849520",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 325,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_api_endpoint_functionality(self, endpoint):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849548",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 381,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_form_submission_readiness(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849563",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 411,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_page_functionality(self, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 459,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_comprehensive_test(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849612",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 510,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_summary_report(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.849650",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 590,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def save_detailed_report(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850253",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850256",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850259",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850262",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850266",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850269",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850272",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib3.exceptions import InsecureRequestWarning"
    },
    {
      "timestamp": "2025-09-21T07:59:49.850275",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import urllib3"
    },
    {
      "timestamp": "2025-09-21T07:59:49.853973",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 21,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (283 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854043",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 143,
      "severity": "MEDIUM",
      "message": "Function 'log_result' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854101",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 169,
      "severity": "MEDIUM",
      "message": "Function 'get_csrf_token' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854232",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function 'extract_buttons_from_html' is too long (189 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854307",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 260,
      "severity": "MEDIUM",
      "message": "Function 'test_button_presence' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854364",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 297,
      "severity": "MEDIUM",
      "message": "Function 'test_javascript_event_listeners' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854515",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 325,
      "severity": "MEDIUM",
      "message": "Function 'test_api_endpoint_functionality' is too long (250 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854603",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 381,
      "severity": "MEDIUM",
      "message": "Function 'test_form_submission_readiness' is too long (138 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854748",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 411,
      "severity": "MEDIUM",
      "message": "Function 'test_page_functionality' is too long (235 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.854865",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 459,
      "severity": "MEDIUM",
      "message": "Function 'run_comprehensive_test' is too long (187 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.855133",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 510,
      "severity": "MEDIUM",
      "message": "Function 'generate_summary_report' is too long (454 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.855214",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_button_functionality_test.py",
      "line": 590,
      "severity": "MEDIUM",
      "message": "Function 'save_detailed_report' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.860174",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 96,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 Generated PWA icon placeholders\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.860185",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 97,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Note: Convert SVG templates to actual PNG files in production using tools like:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.860190",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 98,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  - ImageMagick: convert -background transparent icon.svg icon.png\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.860194",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 99,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  - Inkscape: inkscape --export-png=icon.png --export-width=512 icon.svg\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.860201",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 100,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  - Online tools: realfavicongenerator.net\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.860211",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 110,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2713 Saved SVG templates to {icons_dir}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.861201",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.861206",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/generate_icons.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864692",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 31,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Missing required package: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864704",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 32,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Install with: pip install selenium pillow\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864709",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 33,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"And: sudo apt install chromium-chromedriver\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864754",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 97,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Failed to start Chrome driver: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864758",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 98,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Try: sudo apt install chromium-chromedriver\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864766",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 104,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcf7 Capturing: {page_info['title']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864779",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 118,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u26a0\ufe0f  Warning: Could not find element '{page_info['wait_for']}', continuing anyway\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864792",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 133,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u2705 Saved: {screenshot_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864797",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 136,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u274c Failed to save screenshot or file too small\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864803",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 140,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u274c Error capturing {page_info['title']}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864835",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 161,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u26a0\ufe0f  Could not optimize {image_path}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864841",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 165,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83c\udfe0 HomeNetMon Screenshot Capture Tool\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864845",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 166,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 40)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864859",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 176,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c HomeNetMon not accessible at {BASE_URL}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864863",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 177,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   Make sure HomeNetMon is running first\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864869",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 180,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Could not connect to HomeNetMon: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864874",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 183,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 HomeNetMon accessible at {BASE_URL}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864881",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 190,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Chrome driver initialized\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864885",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 191,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcc1 Screenshots will be saved to: {SCREENSHOTS_DIR}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864889",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 192,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864902",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 205,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()  # Empty line for readability"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864908",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 211,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf89 Screenshot capture complete!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864913",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 212,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Successfully captured: {successful_captures}/{total_pages} pages\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864918",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 215,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864922",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 216,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udcdd Next steps:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864925",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 217,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   1. Review screenshots in screenshots/ directory\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864929",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 218,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   2. Add to git: git add screenshots/\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864933",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 219,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   3. Commit: git commit -m 'Add HomeNetMon screenshots'\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864936",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 220,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   4. Push: git push\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864942",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 223,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864945",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 224,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udcc1 Captured files:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.864950",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 227,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   {png_file.name} ({size_kb} KB)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866547",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 80,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_driver():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866562",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 101,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def capture_page(driver, page_info):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866585",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 143,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_screenshot(image_path):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 163,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866796",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866867",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866870",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866873",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866875",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866879",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from selenium import webdriver"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866882",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from selenium.webdriver.chrome.options import Options"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866885",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from selenium.webdriver.common.by import By"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866888",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from selenium.webdriver.support.ui import WebDriverWait"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866892",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from PIL import Image"
    },
    {
      "timestamp": "2025-09-21T07:59:49.866963",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 173,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:49.867969",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 80,
      "severity": "MEDIUM",
      "message": "Function 'setup_driver' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.868068",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 101,
      "severity": "MEDIUM",
      "message": "Function 'capture_page' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.868126",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 143,
      "severity": "MEDIUM",
      "message": "Function 'optimize_screenshot' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.868256",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/capture_web_screenshots.py",
      "line": 163,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (213 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.870409",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 147,
      "severity": "HIGH",
      "message": "Potential hardcoded secrets",
      "details": "Pattern: password\\s*=\\s*[\\\"'][^\\\"']+[\\\"']",
      "code_snippet": "emergency_password = \"HomeNetMon2025!\""
    },
    {
      "timestamp": "2025-09-21T07:59:49.871551",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 16,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd27 HomeNetMon Admin Reset Tool\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871559",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 17,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871563",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 18,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Timestamp: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871567",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871574",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 22,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 {message}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871579",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 25,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c {message}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871584",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 28,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2139\ufe0f  {message}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871622",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 78,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Choose an option:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871626",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 79,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"1. Test current admin/admin123 credentials\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871630",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 80,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"2. Reset to admin/admin123\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871634",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 81,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"3. Set custom password\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871638",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 82,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"4. Generate new secure password\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871642",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 83,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"5. Emergency reset (use default)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871646",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 84,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871653",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 90,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83e\uddea Testing current credentials...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871661",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 96,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   URL: http://geekom1:5000/login\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871665",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 97,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   Username: admin\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871669",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 98,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   Password: admin123\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871676",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 103,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd04 Resetting to admin/admin123...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871683",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 109,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   ADMIN_PASSWORD=admin123 venv/bin/python app.py\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871690",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 114,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd10 Setting custom password...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871702",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 125,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ADMIN_PASSWORD={new_password} venv/bin/python app.py\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871710",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 130,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83c\udfb2 Generating secure password...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871720",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 139,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ADMIN_PASSWORD={new_password} venv/bin/python app.py\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871724",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 140,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871729",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 141,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u26a0\ufe0f  IMPORTANT: Save this password somewhere safe!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871737",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 146,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udea8 Emergency reset...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871747",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 155,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   Username: admin\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871751",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 156,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Password: {emergency_password}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871754",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 157,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871758",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 158,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Restart HomeNetMon with:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871762",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 159,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ADMIN_PASSWORD={emergency_password} venv/bin/python app.py\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.871771",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 167,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\\n\u23f9\ufe0f  Operation cancelled by user.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def print_header():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873023",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def print_success(message):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873029",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def print_error(message):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873033",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def print_info(message):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873037",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def set_environment_password(password):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873046",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 42,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_authentication(password):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873062",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 67,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_secure_password():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873069",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 75,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873326",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873334",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873338",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import getpass"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873341",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873365",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 45,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Flask"
    },
    {
      "timestamp": "2025-09-21T07:59:49.873442",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 171,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import traceback"
    },
    {
      "timestamp": "2025-09-21T07:59:49.874432",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 42,
      "severity": "MEDIUM",
      "message": "Function 'test_authentication' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.874644",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/reset_admin.py",
      "line": 75,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (303 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.891556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, config_dir='/etc/homenetmon/ssl'):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891574",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_ssl_tunnel(self, tunnel_name, local_port, target_host, target_port, ssl_mode='server'):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891592",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 65,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _generate_ssl_certificate(self, tunnel_name):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891626",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 134,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_ssl_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891649",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 180,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _run_ssl_server(self, tunnel_id, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 227,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_ssl_connection(self, tunnel_id, ssl_socket, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891693",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 262,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _relay_data(self, source_socket, dest_socket):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891701",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 273,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_ssl_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891711",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 289,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_ssl_tunnel_status(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 308,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_ssl_tunnels(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891733",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 323,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_ssl_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891746",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _load_ssl_configs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891754",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 358,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _save_ssl_configs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891763",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 372,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, config_dir='/etc/homenetmon/openvpn'):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891771",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 383,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_openvpn_server(self, server_name, port, network, ca_cert, server_cert, server_key):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891808",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 457,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _generate_dh_params(self, server_name):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 479,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _generate_ta_key(self, server_name):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891833",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 500,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_openvpn_server(self, server_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891860",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 544,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_openvpn_server(self, server_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891875",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 571,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_client_config(self, server_id, client_name, client_cert, client_key):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891903",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 626,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _load_openvpn_configs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891911",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 638,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _save_openvpn_configs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891921",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 653,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_ssl_managers(ssl_config_dir=None, openvpn_config_dir=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891931",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 668,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_ssl_tunnel_manager():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.891940",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 675,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_openvpn_manager():"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892612",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892615",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ssl"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892618",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892620",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892626",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892629",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892631",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import tempfile"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892635",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cryptography import x509"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892639",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cryptography.hazmat.primitives.asymmetric import rsa"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892642",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cryptography.x509.oid import NameOID"
    },
    {
      "timestamp": "2025-09-21T07:59:49.892645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:49.896369",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 33,
      "severity": "MEDIUM",
      "message": "Function 'create_ssl_tunnel' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.896577",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 65,
      "severity": "MEDIUM",
      "message": "Function '_generate_ssl_certificate' is too long (235 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.896696",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Function 'start_ssl_tunnel' is too long (129 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.896846",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 180,
      "severity": "MEDIUM",
      "message": "Function '_run_ssl_server' is too long (172 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.896938",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 227,
      "severity": "MEDIUM",
      "message": "Function '_handle_ssl_connection' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897102",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 289,
      "severity": "MEDIUM",
      "message": "Function 'get_ssl_tunnel_status' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897230",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 323,
      "severity": "MEDIUM",
      "message": "Function 'delete_ssl_tunnel' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897299",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 346,
      "severity": "MEDIUM",
      "message": "Function '_load_ssl_configs' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897482",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 383,
      "severity": "MEDIUM",
      "message": "Function 'create_openvpn_server' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897563",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 457,
      "severity": "MEDIUM",
      "message": "Function '_generate_dh_params' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897641",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 479,
      "severity": "MEDIUM",
      "message": "Function '_generate_ta_key' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897764",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 500,
      "severity": "MEDIUM",
      "message": "Function 'start_openvpn_server' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897866",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 544,
      "severity": "MEDIUM",
      "message": "Function 'stop_openvpn_server' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.897973",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 571,
      "severity": "MEDIUM",
      "message": "Function 'generate_client_config' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.898046",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/ssl_tunnel.py",
      "line": 626,
      "severity": "MEDIUM",
      "message": "Function '_load_openvpn_configs' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.906815",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 83,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{color} {page_name} - {check_name}: {message}\\033[0m\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.906828",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 85,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    \u2514\u2500 {details}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.906992",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 296,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n{'='*60}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.906998",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 297,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d AUDITING: {page['name']} ({page['path']})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907003",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 298,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*60}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907019",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 317,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\ude80 Starting Comprehensive UI/UX Audit\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907023",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 318,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcca Testing {len(self.pages)} pages\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907027",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 319,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udf10 Base URL: {self.base_url}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907031",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 320,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u23f0 Started: {self.start_time.strftime('%Y-%m-%d %H:%M:%S')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907038",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 326,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Server not accessible: HTTP {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907044",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 329,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Cannot connect to server: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907048",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 332,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Server connectivity confirmed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907057",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 340,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u26a0\ufe0f Audit interrupted by user\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907070",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 355,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907074",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 356,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udcca UI/UX AUDIT SUMMARY REPORT\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907078",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 357,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907093",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 374,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udfaf Overall Results:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907096",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 375,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u2705 Passed: {status_counts['PASS']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907100",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 376,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u274c Failed: {status_counts['FAIL']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907104",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 377,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u26a0\ufe0f  Warnings: {status_counts['WARNING']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907108",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 378,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u2139\ufe0f  Info: {status_counts['INFO']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907112",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 379,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \ud83d\udcca Success Rate: {success_rate:.1f}%\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907115",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 380,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u23f1\ufe0f  Duration: {duration.total_seconds():.1f} seconds\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907120",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 383,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udccb Results by Category:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907126",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 387,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   {category.title()}: {counts['PASS']}/{total_cat} ({pass_rate:.1f}% pass)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907133",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 392,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udea8 Critical Issues ({len(critical_fails)}):\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907138",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 394,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u274c {fail['page']} - {fail['check']}: {fail['message']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907143",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 396,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ... and {len(critical_fails) - 10} more issues\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907148",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 399,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udca1 Recommendations:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907152",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 401,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83d\udd27 Address critical failures before production deployment\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907157",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 403,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \u26a0\ufe0f  Review warnings for potential improvements\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907161",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 405,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83c\udf89 Excellent! Application shows strong UI/UX implementation\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907166",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 407,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \u2705 Good foundation with room for improvement\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907170",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 409,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"   \ud83d\udee0\ufe0f  Significant UI/UX improvements needed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907191",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 414,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcc4 Detailed report saved to: ui_ux_audit_report.json\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907195",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 415,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{'='*80}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907218",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 444,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 UI/UX Audit completed successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.907223",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 447,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c UI/UX Audit failed!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910557",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 28,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "{\"path\": \"/performance-dashboard\", \"name\": \"Performance Dashboard\", \"type\": \"performance\", \"critical\": True},"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910563",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 35,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "{\"path\": \"/notifications/analytics\", \"name\": \"Notification Analytics\", \"type\": \"analytics\", \"critical\": False},"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910572",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 286,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status = \"WARNING\" if header_name in [\"Content-Security-Policy\", \"Strict-Transport-Security\"] else \"FAIL\""
    },
    {
      "timestamp": "2025-09-21T07:59:49.910616",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def log_result(self, test_type, page_name, check_name, status, message, details=\"\"):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910633",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 87,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_page_accessibility(self, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910658",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 131,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_responsive_design(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910670",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 150,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_ui_framework(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910684",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 172,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_navigation_consistency(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910697",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 194,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_interactive_elements(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910712",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 219,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_accessibility_features(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910725",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 243,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_performance_indicators(self, html, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910739",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 266,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_security_headers(self, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910755",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 294,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def audit_single_page(self, page):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910768",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 315,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_full_audit(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910788",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 350,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_summary_report(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.910822",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 417,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def save_detailed_report(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.911289",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:49.911292",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.911296",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:49.911298",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:49.911302",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urljoin"
    },
    {
      "timestamp": "2025-09-21T07:59:49.911305",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:49.911308",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:49.914432",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 16,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (203 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914496",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 61,
      "severity": "MEDIUM",
      "message": "Function 'log_result' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914632",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 87,
      "severity": "MEDIUM",
      "message": "Function 'test_page_accessibility' is too long (219 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914680",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 131,
      "severity": "MEDIUM",
      "message": "Function 'check_responsive_design' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914736",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 150,
      "severity": "MEDIUM",
      "message": "Function 'check_ui_framework' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914792",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 172,
      "severity": "MEDIUM",
      "message": "Function 'check_navigation_consistency' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914864",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 194,
      "severity": "MEDIUM",
      "message": "Function 'check_interactive_elements' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914927",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 219,
      "severity": "MEDIUM",
      "message": "Function 'check_accessibility_features' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.914989",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 243,
      "severity": "MEDIUM",
      "message": "Function 'check_performance_indicators' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.915068",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 266,
      "severity": "MEDIUM",
      "message": "Function 'check_security_headers' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.915132",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 294,
      "severity": "MEDIUM",
      "message": "Function 'audit_single_page' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.915210",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 315,
      "severity": "MEDIUM",
      "message": "Function 'run_full_audit' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.915430",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 350,
      "severity": "MEDIUM",
      "message": "Function 'generate_summary_report' is too long (368 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.915503",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/comprehensive_ui_ux_audit.py",
      "line": 417,
      "severity": "MEDIUM",
      "message": "Function 'save_detailed_report' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.948639",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 383,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error getting performance summary for device {self.id}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.948677",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 408,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error calculating average response time for device {self.id}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.948716",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 451,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error getting status history for device {self.id}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.949111",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 945,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error logging notification: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.949219",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1052,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error logging notification receipt: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.949591",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1575,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error calculating health score: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.949621",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1612,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Added version column to configuration table\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.949626",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1614,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Could not add version column: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.949634",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1618,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Recreated database tables with new schema\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.949651",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1635,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error initializing configuration {key}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967094",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 179,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.text(\"SELECT bandwidth_in_mbps, bandwidth_out_mbps, timestamp FROM bandwidth_data WHERE id = :id\"),"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967125",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 712,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'last_notification_at': (self.last_notification_at.isoformat() + 'Z') if self.last_notification_at else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967129",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 717,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.Index('idx_alert_device_resolved', Alert.device_id, Alert.resolved)  # For queries like: device alerts that are unresolved"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967132",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 718,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.Index('idx_alert_resolved_created', Alert.resolved, Alert.created_at.desc())  # For queries like: unresolved alerts by date"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967135",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 720,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.Index('idx_alert_acknowledged_resolved', Alert.acknowledged, Alert.resolved)  # For queries like: unacknowledged alerts"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967138",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 721,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.Index('idx_alert_type_resolved', Alert.alert_type, Alert.resolved)  # For queries like: device_down alerts that are active"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967141",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 722,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.Index('idx_alert_device_type_resolved', Alert.device_id, Alert.alert_type, Alert.resolved)  # For complex device queries"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967149",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 875,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "device_id = db.Column(db.Integer, db.ForeignKey('devices.id'), nullable=True, index=True)  # Nullable for system notifications"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967152",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 877,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "notification_type = db.Column(db.String(50), nullable=False, index=True)  # device_down, device_up, new_device, scan_complete, etc."
    },
    {
      "timestamp": "2025-09-21T07:59:49.967159",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 979,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "notification = db.relationship('NotificationHistory', backref=db.backref('receipts', lazy=True, cascade='all, delete-orphan'))"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967163",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 982,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "return f'<NotificationReceipt {self.interaction_type} for notification {self.notification_id} at {self.read_at}>'"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967179",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1391,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "device = db.relationship('Device', backref=db.backref('performance_metrics', lazy=True, cascade='all, delete-orphan'))"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967190",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1648,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "trigger_type = db.Column(db.String(50), nullable=False, index=True)  # notification_failure, alert_unresolved, device_offline, etc."
    },
    {
      "timestamp": "2025-09-21T07:59:49.967194",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1670,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "escalation_executions = db.relationship('EscalationExecution', backref='rule', lazy='dynamic', cascade='all, delete-orphan')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967199",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1756,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status = db.Column(db.String(20), default='pending', nullable=False, index=True)  # pending, in_progress, completed, failed, cancelled"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967203",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1771,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "escalation_actions = db.relationship('EscalationActionLog', backref='execution', lazy='dynamic', cascade='all, delete-orphan')"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967207",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1801,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "escalation_execution_id = db.Column(db.Integer, db.ForeignKey('escalation_executions.id'), nullable=False, index=True)"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967212",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1873,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status = db.Column(db.String(20), default='open', nullable=False, index=True)  # open, acknowledged, remediated, false_positive"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967219",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1984,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status = db.Column(db.String(20), default='open', nullable=False, index=True)  # open, investigating, contained, resolved"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967224",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2052,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "device = db.relationship('Device', backref=db.backref('performance_snapshots', lazy=True, cascade='all, delete-orphan'))"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967227",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2055,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "return f'<PerformanceSnapshot {self.device.ip_address if self.device else \"Unknown\"} {self.metric_type}={self.value}{self.unit}>'"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2168,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "return f'<LatencyAnalysis {self.device.ip_address if self.device else \"Unknown\"} avg={self.avg_latency_ms:.1f}ms>'"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967239",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2227,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "device = db.relationship('Device', backref=db.backref('performance_alerts', lazy=True, cascade='all, delete-orphan'))"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967289",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cached_property(ttl=300, key_func=None, invalidate_on=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967294",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967301",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def invalidate_device_cache(self, device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967335",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 49,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967342",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 53,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def display_name(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967348",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 57,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def status(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967368",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def latest_response_time(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967380",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 95,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def active_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967390",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def uptime_percentage(self, days=7):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967441",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 171,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_current_bandwidth(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967461",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 194,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_bandwidth_usage_24h(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967493",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 226,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def current_health_score(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967506",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_grade(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967529",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 263,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_status(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967545",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 279,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_metrics(self, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 292,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_summary(self, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967634",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 391,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_avg_response_time(self, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967650",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 411,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_online(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967660",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 420,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_status_history(self, hours=6):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967686",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 454,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967718",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 495,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967724",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 498,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 519,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967749",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 522,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_successful(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967757",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 529,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_quality_score(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 558,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_category(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967791",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 575,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967816",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 612,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967821",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 615,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def acknowledge(self, acknowledged_by='system'):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967827",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 621,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def resolve(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967835",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 626,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def calculate_and_update_priority(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967848",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 647,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_active(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967858",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 651,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_age_seconds(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967864",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 657,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_age_minutes(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967868",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 661,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_age_hours(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967872",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 665,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def should_escalate(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967891",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 682,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_severity_weight(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967900",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 691,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967928",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 735,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967932",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 738,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967940",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 750,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_value(cls, key, default=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967946",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 755,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def set_value(cls, key, value, description=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967956",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 771,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_config_version(cls, key):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967962",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 777,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_latest_config_timestamp(cls):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967983",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 798,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.967990",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 801,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968003",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 815,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def log_change(cls, key, old_value, new_value, changed_by='system', reason=None, validated=True):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968034",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 851,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968040",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 854,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968079",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 901,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968086",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 905,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968145",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 981,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968152",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 984,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968168",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1000,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_tracking_token(cls):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968211",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1055,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def anonymize(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968246",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1106,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968250",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968301",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1207,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968305",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1211,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def conditions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968311",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1219,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def conditions(self, value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968316",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1224,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def actions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968323",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def actions(self, value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968330",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1236,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def can_execute(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968344",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1261,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mark_executed(self, success=True, result_data=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968350",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1267,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968369",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1303,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968374",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1308,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_data(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968380",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1316,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_data(self, value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968385",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def results(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968391",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1329,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def results(self, value):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968395",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1333,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968426",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1393,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968430",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1396,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968458",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1451,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_grade(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968471",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1475,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_status(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1491,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def calculate_health_score(cls, response_metrics, availability_metrics, bandwidth_metrics, quality_metrics):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968527",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1586,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_monitoring_data(mapper, connection, target):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968535",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1597,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_db(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1672,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1675,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968592",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1697,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def matches_conditions(self, context):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968631",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1773,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968635",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1776,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968656",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1815,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968660",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1818,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968681",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1854,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968697",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1881,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968701",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1884,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968721",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1920,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968733",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1939,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968737",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1942,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968754",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1972,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968774",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2007,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2010,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968802",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2054,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968806",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2057,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968834",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2106,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968870",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2167,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968874",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2170,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968905",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2229,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968909",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968938",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2288,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __repr__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968942",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2291,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968957",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2319,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def invalidate_monitoring_data_cache(mapper, connection, target):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2329,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def invalidate_alert_cache(mapper, connection, target):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.968971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2338,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def invalidate_performance_cache(mapper, connection, target):"
    },
    {
      "timestamp": "2025-09-21T07:59:49.970759",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1215,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.970769",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1228,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.970814",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1312,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.970823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1325,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971321",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2323,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971329",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2333,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971336",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2342,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971341",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_sqlalchemy import SQLAlchemy"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971344",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import event"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971348",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971350",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971381",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 63,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971658",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 629,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_priority import AlertPriorityScorer"
    },
    {
      "timestamp": "2025-09-21T07:59:49.971845",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1002,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:49.972132",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1587,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:49.986892",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1597,
      "severity": "MEDIUM",
      "message": "Function 'init_db' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987094",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 57,
      "severity": "MEDIUM",
      "message": "Function 'status' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Function 'latest_response_time' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987301",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 103,
      "severity": "MEDIUM",
      "message": "Function 'uptime_percentage' is too long (189 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987373",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 171,
      "severity": "MEDIUM",
      "message": "Function 'get_current_bandwidth' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987447",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 194,
      "severity": "MEDIUM",
      "message": "Function 'get_bandwidth_usage_24h' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987488",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 226,
      "severity": "MEDIUM",
      "message": "Function 'current_health_score' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987538",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'performance_grade' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987575",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 263,
      "severity": "MEDIUM",
      "message": "Function 'performance_status' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987615",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 279,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_metrics' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987817",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 292,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_summary' is too long (331 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987878",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 391,
      "severity": "MEDIUM",
      "message": "Function 'get_avg_response_time' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.987961",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 420,
      "severity": "MEDIUM",
      "message": "Function 'get_status_history' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988024",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 454,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988163",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 529,
      "severity": "MEDIUM",
      "message": "Function 'get_quality_score' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988317",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 626,
      "severity": "MEDIUM",
      "message": "Function 'calculate_and_update_priority' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988467",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 691,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988574",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 755,
      "severity": "MEDIUM",
      "message": "Function 'set_value' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988702",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 815,
      "severity": "MEDIUM",
      "message": "Function 'log_change' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988826",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 905,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988896",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 923,
      "severity": "MEDIUM",
      "message": "Function 'log_notification' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.988972",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 984,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.989113",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1006,
      "severity": "MEDIUM",
      "message": "Function 'log_receipt' is too long (170 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.989161",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1055,
      "severity": "MEDIUM",
      "message": "Function 'anonymize' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.989250",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1109,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.989327",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1131,
      "severity": "MEDIUM",
      "message": "Function 'is_currently_active' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.989376",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1157,
      "severity": "MEDIUM",
      "message": "Function 'matches_alert' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.989570",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1236,
      "severity": "MEDIUM",
      "message": "Function 'can_execute' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.989656",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1267,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.990212",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1396,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (150 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.990269",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1451,
      "severity": "MEDIUM",
      "message": "Function 'performance_grade' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.990653",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1491,
      "severity": "MEDIUM",
      "message": "Function 'calculate_health_score' is too long (408 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.990762",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1675,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.990901",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1697,
      "severity": "MEDIUM",
      "message": "Function 'matches_conditions' is too long (147 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.991017",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1776,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.991224",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 1884,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.991477",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2010,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.991632",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2106,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.991723",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2170,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.991815",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2232,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:49.991951",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/models.py",
      "line": 2291,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.007710",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 53,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "etag = hashlib.md5(data).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008040",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 53,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "etag = hashlib.md5(data).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008298",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 89,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'<https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css>; rel=preload; as=style; crossorigin=anonymous',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008320",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008326",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def before_request(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008334",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 35,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def after_request(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008366",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 98,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_gzip_compression(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008369",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 100,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def gzip_wrapper(environ, start_response):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008375",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 106,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def new_start_response(status, response_headers, exc_info=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008402",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 157,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def should_compress(self, response_headers):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008415",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 180,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_cache_control(max_age=300):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008418",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 182,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008422",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 184,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008428",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 192,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def no_cache(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008432",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 195,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008482",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 84,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if False and request.path == '/' and response.status_code == 200:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008639",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gzip"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008642",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:50.008668",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:50.009894",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 35,
      "severity": "MEDIUM",
      "message": "Function 'after_request' is too long (213 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.010011",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 98,
      "severity": "MEDIUM",
      "message": "Function 'add_gzip_compression' is too long (154 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.010208",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance_middleware.py",
      "line": 100,
      "severity": "MEDIUM",
      "message": "Function 'gzip_wrapper' is too long (147 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.014160",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 172,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014169",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 173,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"DATABASE INDEXES\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014174",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 174,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014182",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 180,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\nTable: {current_table}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014186",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 181,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"-\" * 40)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014190",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 183,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  Index: {index.name}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014194",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 185,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    SQL: {index.sql}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014199",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 187,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"    SQL: (system index)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014202",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 188,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\"*80)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014207",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 190,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"No custom indexes found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014232",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 227,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"HomeNetMon Database Index Optimization\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014250",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 228,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=====================================\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014259",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 237,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nAfter optimization:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014266",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 243,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nDatabase optimization complete!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.014270",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 244,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Your HomeNetMon application should now perform much better.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015899",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 51,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_devices_monitored_type ON devices (is_monitored, device_type)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015903",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 60,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_monitoring_device_timestamp ON monitoring_data (device_id, timestamp DESC)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015906",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 66,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_monitoring_timestamp ON monitoring_data (timestamp DESC)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015908",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 72,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_monitoring_response_time ON monitoring_data (response_time)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015911",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 78,
      "severity": "LOW",
      "message": "Line too long (164 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_monitoring_device_time_response ON monitoring_data (device_id, timestamp DESC, response_time)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015914",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 87,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_alerts_device_resolved ON alerts (device_id, resolved)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015916",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 99,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_alerts_resolved_severity ON alerts (resolved, severity)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015919",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 114,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_config_updated_at ON configuration (updated_at DESC)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015922",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 128,
      "severity": "LOW",
      "message": "Line too long (154 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "db.session.execute(text(\"CREATE INDEX IF NOT EXISTS idx_device_ip_history_device_date ON device_ip_history (device_id, changed_at DESC)\"))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.015937",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_database_indexes():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.016005",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 151,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def show_index_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.016028",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 196,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.016291",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.016296",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.016399",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 223,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.017550",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 15,
      "severity": "MEDIUM",
      "message": "Function 'add_database_indexes' is too long (395 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.017629",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_indexes.py",
      "line": 151,
      "severity": "MEDIUM",
      "message": "Function 'show_index_status' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.020785",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 12,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020794",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 13,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"ANALYTICS FRONTEND DEBUG\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020798",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 14,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020807",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Page not accessible: HTTP {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020814",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 25,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Page loaded successfully\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020819",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcc4 Page size: {len(html):,} characters\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020824",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 29,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd0d CHECKING JAVASCRIPT INCLUDES:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020831",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 34,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udcdc {src}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020840",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 41,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"     \u2705 Accessible\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020845",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 43,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"     \u274c Not accessible: {script_resp.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020849",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 45,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"     \u26a0\ufe0f  Error checking: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020858",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 48,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd0d CHECKING INLINE JAVASCRIPT:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020866",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 55,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udcdd Inline script {i+1}: {lines} lines\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020871",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 57,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcca Total inline JS: {total_js_lines} lines\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020876",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 60,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd0d CHECKING BUTTON ELEMENTS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020883",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 66,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udd18 {btn_id}: '{btn_text}' (classes: {btn_class})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020889",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 69,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  ... and {len(buttons) - 10} more buttons\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020894",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 72,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd0d CHECKING SPECIFIC ANALYTICS BUTTONS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020905",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 83,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Found: {btn_id}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020909",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 85,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u274c Missing: {btn_id}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020914",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 88,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd0d CHECKING TAB NAVIGATION:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020921",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 93,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udcd1 Tab: '{text}' \u2192 {target}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020926",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 96,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd0d CHECKING TIME RANGE CONTROLS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020932",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 100,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u23f0 Time range option: {value}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020937",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 103,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udd0d CHECKING FOR POTENTIAL JS ISSUES:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020947",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 112,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2705 Event listeners found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020953",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 117,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2705 loadAllAnalytics function found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020960",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 122,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \u2705 Chart.js usage found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020966",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 127,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u26a0\ufe0f  POTENTIAL ISSUES:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020970",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 129,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"    - {issue}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020976",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 134,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Error checking analytics page: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020983",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 139,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020987",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 140,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"API ENDPOINT TESTS\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.020991",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 141,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021003",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 155,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 {endpoint}: Working\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021007",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 157,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c {endpoint}: HTTP {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021012",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 159,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c {endpoint}: Error - {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021020",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 166,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021024",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 167,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"NEXT STEPS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021027",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 168,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"1. Check browser console for JavaScript errors\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021031",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 169,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"2. Verify CSRF tokens are working\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021035",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 170,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"3. Test button click events manually\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021038",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 171,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"4. Check if Bootstrap JS is loading correctly\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.021042",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 172,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.022198",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_analytics_page():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.022259",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 137,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_api_endpoints():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.022445",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:50.022448",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:50.022451",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from bs4 import BeautifulSoup"
    },
    {
      "timestamp": "2025-09-21T07:59:50.023612",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 10,
      "severity": "MEDIUM",
      "message": "Function 'check_analytics_page' is too long (485 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.023669",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_analytics_frontend.py",
      "line": 137,
      "severity": "MEDIUM",
      "message": "Function 'test_api_endpoints' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.025092",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 22,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=== REGISTERED ROUTES ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025103",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{rule.rule:<40} {methods:<20} {rule.endpoint}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025110",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 30,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== ALERTS ROUTES ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025116",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 35,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{rule.rule:<40} {methods:<20} {rule.endpoint}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025121",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 38,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Flask App URL Map Debug\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025125",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 39,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025132",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 45,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n=== TESTING DELETE ROUTE MATCH ===\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025138",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 50,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"DELETE /api/monitoring/alerts/1 matches: {rule}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025155",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 52,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"DELETE /api/monitoring/alerts/1 ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025508",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_routes():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_alerts_routes():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025582",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025585",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:50.025591",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/debug_routes.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026866",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 13,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Database not found: {db_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026876",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 16,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Fixing unique constraint on ip_address...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026885",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 23,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Current indexes:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026891",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 27,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {idx[0]}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026897",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 31,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Dropped unique index on ip_address\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026903",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 35,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Created non-unique index on ip_address\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026909",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 40,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\nIndexes after fix:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026915",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 44,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {idx[0]}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026920",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 46,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u2713 Unique constraint fix completed successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.026926",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 50,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error fixing constraint: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.027303",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def fix_unique_constraint(db_path='homeNetMon.db'):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.027387",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.027390",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.027702",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/fix_unique_constraint.py",
      "line": 9,
      "severity": "MEDIUM",
      "message": "Function 'fix_unique_constraint' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.029126",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error: Database file {db_path} not found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029142",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 34,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Adding room_location column...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029150",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 41,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"room_location column already exists\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029157",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 45,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Adding device_priority column...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029165",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 52,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"device_priority column already exists\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029172",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 57,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Successfully added columns: {', '.join(migrations_applied)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029176",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 59,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 No migration needed - all columns already exist\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029185",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 66,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Migration verified successfully\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029190",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 69,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c Migration verification failed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029196",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 73,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Database error: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029201",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 76,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Unexpected error: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029209",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 84,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83c\udfe0 HomeNetMon Database Migration: Adding Home Features\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029213",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 85,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029219",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 90,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83c\udf89 Migration completed successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029223",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 91,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"You can now use room assignments and device priorities in HomeNetMon\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029228",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 94,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83d\udca5 Migration failed!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029231",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 95,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Please check the error messages above and try again\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029887",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_migration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.029922",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 82,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.030032",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.030036",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:50.030038",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.030494",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/add_home_features_migration.py",
      "line": 12,
      "severity": "MEDIUM",
      "message": "Function 'run_migration' is too long (181 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.031573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config_optimized.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.057200",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/button_functionality_report.json",
      "line": 392,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"details\": \"Events: DOMContentLoaded, performance_metrics_update, click, openDeviceDetailPage(${device.device_id}), change\""
    },
    {
      "timestamp": "2025-09-21T07:59:50.057226",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/button_functionality_report.json",
      "line": 860,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"details\": \"Events: setPingInterval(300), setScanInterval(900), setAlertThreshold(15), clearAllData(), saveInterfaceSettings()\""
    },
    {
      "timestamp": "2025-09-21T07:59:50.076990",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 73,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_stripe(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.077002",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_webhook_handlers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.077099",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 287,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def initialize_default_plans(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.077278",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 659,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_monthly_invoices(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.077949",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 388,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.078169",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from decimal import Decimal"
    },
    {
      "timestamp": "2025-09-21T07:59:50.078173",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import stripe"
    },
    {
      "timestamp": "2025-09-21T07:59:50.078177",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.078180",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.078182",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:50.078185",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:50.078190",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cloud_config import get_config"
    },
    {
      "timestamp": "2025-09-21T07:59:50.082364",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 100,
      "severity": "MEDIUM",
      "message": "Function 'create_subscription_plan' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.082447",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 125,
      "severity": "MEDIUM",
      "message": "Function 'create_stripe_plan' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.082614",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 161,
      "severity": "MEDIUM",
      "message": "Function 'get_default_plans' is too long (288 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.082736",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 301,
      "severity": "MEDIUM",
      "message": "Function 'create_subscription' is too long (138 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.082803",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 345,
      "severity": "MEDIUM",
      "message": "Function 'create_stripe_subscription' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.082870",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 382,
      "severity": "MEDIUM",
      "message": "Function 'get_or_create_stripe_customer' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.082925",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 419,
      "severity": "MEDIUM",
      "message": "Function 'upgrade_subscription' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.082973",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 448,
      "severity": "MEDIUM",
      "message": "Function 'calculate_proration' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083018",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 468,
      "severity": "MEDIUM",
      "message": "Function 'cancel_subscription' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083082",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 492,
      "severity": "MEDIUM",
      "message": "Function 'create_invoice' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 533,
      "severity": "MEDIUM",
      "message": "Function 'finalize_invoice' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083254",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 557,
      "severity": "MEDIUM",
      "message": "Function 'process_stripe_payment' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083314",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 595,
      "severity": "MEDIUM",
      "message": "Function 'mark_invoice_paid' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083373",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 621,
      "severity": "MEDIUM",
      "message": "Function 'calculate_usage_charges' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083420",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 639,
      "severity": "MEDIUM",
      "message": "Function 'get_usage_pricing' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083532",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 659,
      "severity": "MEDIUM",
      "message": "Function 'generate_monthly_invoices' is too long (170 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083582",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 717,
      "severity": "MEDIUM",
      "message": "Function 'handle_stripe_webhook' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083621",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 732,
      "severity": "MEDIUM",
      "message": "Function 'handle_payment_succeeded' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.083666",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/billing_system.py",
      "line": 746,
      "severity": "MEDIUM",
      "message": "Function 'handle_payment_failed' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.087826",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Push notifications not configured, skipping startup notification\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.087846",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 41,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Startup notification sent successfully\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.087856",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 43,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Failed to send startup notification\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.087861",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 46,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error sending startup notification: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088207",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 34,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message=f\"HomeNetMon network monitoring service has successfully started and is now monitoring your network at {dashboard_url}\","
    },
    {
      "timestamp": "2025-09-21T07:59:50.088220",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_startup_notification():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088294",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088297",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088300",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088307",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088310",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088326",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 47,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import traceback"
    },
    {
      "timestamp": "2025-09-21T07:59:50.088588",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/startup_notification.py",
      "line": 14,
      "severity": "MEDIUM",
      "message": "Function 'send_startup_notification' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.089439",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 16,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Database not found at {db_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089446",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Migrating database: {db_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089454",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Adding notification_sent column...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089459",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 29,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Adding notification_count column...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089464",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 32,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Adding last_notification_at column...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089470",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 35,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Adding notification_status column...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089476",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 39,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Migration completed successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089482",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 44,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Columns already exist - migration not needed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089487",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 47,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Migration failed: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089861",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def migrate_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089939",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.089942",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.090217",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrate_notifications.py",
      "line": 8,
      "severity": "MEDIUM",
      "message": "Function 'migrate_database' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.091570",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Database file not found: {db_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091577",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 22,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Connecting to database: {db_path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091587",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 32,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Current columns: {current_columns}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091602",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 47,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 All required columns already exist\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091607",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 50,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Adding missing columns: {[col[0] for col in columns_to_add]}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091615",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 56,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2713 Added column: {col_name}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091620",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 58,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2717 Failed to add column {col_name}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091627",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 64,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 Migrated change_detected_at to changed_at\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091634",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 68,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 Migrated change_source to detected_by\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091642",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 74,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 Set default values for existing records\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091647",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 77,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2713 Database schema updated successfully\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.091653",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 81,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2717 Error fixing database schema: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.092280",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 67,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "cursor.execute(\"UPDATE device_ip_history SET detected_by = change_source WHERE detected_by IS NULL OR detected_by = ''\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.092283",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 73,
      "severity": "LOW",
      "message": "Line too long (148 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "cursor.execute(\"UPDATE device_ip_history SET detected_by = COALESCE(change_source, 'system') WHERE detected_by IS NULL OR detected_by = ''\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.092295",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def fix_device_ip_history_schema():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.092424",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.092427",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:50.092431",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.092954",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/database_schema_fix.py",
      "line": 14,
      "severity": "MEDIUM",
      "message": "Function 'fix_device_ip_history_schema' is too long (239 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.107273",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, config_dir='/etc/homenetmon/remote'):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107289",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 46,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _load_or_create_ca(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107300",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 63,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _create_certificate_authority(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107337",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 140,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_client_certificate(self, client_name, email=None, valid_days=365):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107380",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def revoke_certificate(self, cert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107388",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 242,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_secure_tunnel(self, tunnel_name, tunnel_type='wireguard', port_range=(51820, 51830)):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107396",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 253,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _create_wireguard_tunnel(self, tunnel_name, port_range):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107423",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 306,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _create_openvpn_tunnel(self, tunnel_name, port_range):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107441",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_tunnel_client(self, tunnel_id, client_name, client_ip=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107469",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 391,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _generate_client_config(self, tunnel_id, client_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107488",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 427,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107497",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 441,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _start_wireguard_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107520",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 486,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107528",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 500,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _stop_wireguard_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107540",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 519,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tunnel_status(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107550",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 536,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_wireguard_status(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107572",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 578,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _find_available_port(self, port_range):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107578",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 587,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _is_port_available(self, port):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107586",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 596,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_external_ip(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 612,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _load_tunnel_configs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 624,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _save_tunnel_configs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107611",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 633,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _save_certificates(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107618",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 642,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_tunnels(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107627",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 656,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_certificates(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107632",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 660,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_tunnel(self, tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107647",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 688,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_tunnel_manager(config_dir=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.107654",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 697,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tunnel_manager():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108276",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 603,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108282",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 609,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108334",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108337",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108340",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import tempfile"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108343",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108347",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108353",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108356",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cryptography.x509.oid import NameOID"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108359",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cryptography import x509"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108361",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import base64"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108364",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108367",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108370",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108372",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.108377",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import jwt"
    },
    {
      "timestamp": "2025-09-21T07:59:50.112361",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 46,
      "severity": "MEDIUM",
      "message": "Function '_load_or_create_ca' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.112527",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 63,
      "severity": "MEDIUM",
      "message": "Function '_create_certificate_authority' is too long (241 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.112711",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 140,
      "severity": "MEDIUM",
      "message": "Function 'create_client_certificate' is too long (298 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.112877",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 253,
      "severity": "MEDIUM",
      "message": "Function '_create_wireguard_tunnel' is too long (150 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.112934",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 306,
      "severity": "MEDIUM",
      "message": "Function '_create_openvpn_tunnel' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113081",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 337,
      "severity": "MEDIUM",
      "message": "Function 'add_tunnel_client' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113145",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 391,
      "severity": "MEDIUM",
      "message": "Function '_generate_client_config' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113275",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 441,
      "severity": "MEDIUM",
      "message": "Function '_start_wireguard_tunnel' is too long (164 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113366",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 500,
      "severity": "MEDIUM",
      "message": "Function '_stop_wireguard_tunnel' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113417",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 519,
      "severity": "MEDIUM",
      "message": "Function 'get_tunnel_status' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113506",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 536,
      "severity": "MEDIUM",
      "message": "Function '_get_wireguard_status' is too long (131 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113587",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 596,
      "severity": "MEDIUM",
      "message": "Function '_get_external_ip' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113629",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 612,
      "severity": "MEDIUM",
      "message": "Function '_load_tunnel_configs' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.113783",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/remote_access.py",
      "line": 660,
      "severity": "MEDIUM",
      "message": "Function 'delete_tunnel' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.117048",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/clear_device_cache.py",
      "line": 18,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Clearing device cache...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.117059",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/clear_device_cache.py",
      "line": 20,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Device cache cleared successfully!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.117230",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/clear_device_cache.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:50.117234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/clear_device_cache.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.117239",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/clear_device_cache.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.117247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/clear_device_cache.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.query_cache import invalidate_device_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118847",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 13,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83e\uddea Testing {name}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118860",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 14,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"URL: {url}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118877",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 32,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {i+1:2d}. {response_time:6.1f}ms | {response.status_code} | {len(response.content):,} bytes | {response.headers.get('Content-Encoding', 'none')} | {response.headers.get('X-Response-Time', 'N"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118883",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 35,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  {i+1:2d}. ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118888",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 38,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcca Results:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118892",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 39,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Average: {mean(times):6.1f}ms\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118896",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 40,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Median:  {median(times):6.1f}ms\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118900",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 41,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Min:     {min(times):6.1f}ms\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118903",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 42,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Max:     {max(times):6.1f}ms\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118907",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 43,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Size:    {mean(sizes):,.0f} bytes avg\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118913",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 48,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\ude80 HomeNetMon Performance Test\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118916",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 49,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118935",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 75,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118939",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 76,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udccb PERFORMANCE SUMMARY\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118943",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 77,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118948",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 80,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"{name:25s}: {metrics['avg']:6.1f}ms avg | {metrics['median']:6.1f}ms median\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118952",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 82,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83c\udfaf PERFORMANCE TARGETS:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118956",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 83,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \ud83d\udfe2 Homepage: < 500ms (First Contentful Paint)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118960",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 84,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \ud83d\udfe2 API calls: < 1000ms (for good UX)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118964",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 85,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"  \ud83d\udfe2 Static assets: < 100ms (with caching)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118971",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 91,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcc8 ASSESSMENT:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118976",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 93,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Homepage performance: EXCELLENT ({homepage_perf:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118981",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 95,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udfe1 Homepage performance: GOOD ({homepage_perf:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118986",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 97,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udd34 Homepage performance: NEEDS WORK ({homepage_perf:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118991",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 100,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 API performance: EXCELLENT ({api_perf:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.118996",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 102,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udfe1 API performance: ACCEPTABLE ({api_perf:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119001",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 104,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \ud83d\udd34 API performance: SLOW ({api_perf:.1f}ms)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119005",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 106,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\ude80 Performance optimizations active:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119009",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 107,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Database indexes created\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119012",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 108,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Gzip compression enabled\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119016",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 109,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Resource preloading configured\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119020",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 110,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Lazy loading for non-critical JS\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119024",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 111,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  \u2705 Cache headers optimized\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119785",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 32,
      "severity": "LOW",
      "message": "Line too long (219 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "print(f\"  {i+1:2d}. {response_time:6.1f}ms | {response.status_code} | {len(response.content):,} bytes | {response.headers.get('Content-Encoding', 'none')} | {response.headers.get('X-Response-Time', 'N"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119797",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_endpoint(url, name, iterations=5):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119817",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 47,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119967",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:50.119971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.120725",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 11,
      "severity": "MEDIUM",
      "message": "Function 'test_endpoint' is too long (204 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.120893",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_performance.py",
      "line": 47,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (273 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.123636",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 29,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error reading {file_path}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123707",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 121,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd0d Checking API endpoints for rate limiting...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123712",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 122,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123718",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 126,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u2705 Endpoints WITH rate limiting: {len(has_limits)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123722",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 127,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Endpoints MISSING rate limiting: {len(missing_limits)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123727",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 130,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u26a0\ufe0f  MISSING RATE LIMITS ({len(missing_limits)} endpoints):\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123731",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 131,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"-\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123736",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 134,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"File: {route['file']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123739",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 135,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Line: {route['line']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123743",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 136,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Route: {route['route']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123748",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 137,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Function: {route['function']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123751",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 138,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print()"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123756",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 141,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\u2705 PROTECTED ENDPOINTS ({len(has_limits)} endpoints):\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123760",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 142,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"-\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123771",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 153,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n{limit_type}: {len(routes)} endpoints\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123775",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 155,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  - {route['file']}: {route['function']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123780",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 157,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"  ... and {len(routes) - 5} more\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123787",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 163,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcca SUMMARY:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123791",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 164,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Total API endpoints: {total_endpoints}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123795",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 165,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Rate limiting coverage: {coverage:.1f}%\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123800",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 168,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u26a0\ufe0f  RECOMMENDATION:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123803",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 169,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Add rate limiting decorators to the missing endpoints above.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123807",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 170,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Use @create_endpoint_limiter('relaxed') for read operations\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123811",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 171,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Use @create_endpoint_limiter('strict') for write operations\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123815",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 172,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Use @create_endpoint_limiter('critical') for sensitive operations\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.123820",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 175,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83c\udf89 All endpoints have rate limiting protection!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125084",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def find_api_files():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125095",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def extract_routes_from_file(file_path):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125120",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 68,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_rate_limiting(route_info):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125134",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 94,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_routes():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125149",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 119,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125356",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125360",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:50.125363",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ast"
    },
    {
      "timestamp": "2025-09-21T07:59:50.126299",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 11,
      "severity": "MEDIUM",
      "message": "Function 'find_api_files' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.126403",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 23,
      "severity": "MEDIUM",
      "message": "Function 'extract_routes_from_file' is too long (147 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.126476",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 94,
      "severity": "MEDIUM",
      "message": "Function 'analyze_routes' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.126636",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/check_rate_limits.py",
      "line": 119,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (277 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.135012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_buttons.html",
      "line": 13,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "button { padding: 8px 15px; margin: 5px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }"
    },
    {
      "timestamp": "2025-09-21T07:59:50.135027",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_buttons.html",
      "line": 231,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "let message = `Element found and ${isVisible ? 'visible' : 'hidden'}, ${isEnabled ? 'enabled' : 'disabled'}`;"
    },
    {
      "timestamp": "2025-09-21T07:59:50.135031",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_buttons.html",
      "line": 240,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "addResult(`Button: ${test.name}`, 'fail', 'Element not found in DOM', test.expectedBehavior);"
    },
    {
      "timestamp": "2025-09-21T07:59:50.135034",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_buttons.html",
      "line": 247,
      "severity": "LOW",
      "message": "Line too long (151 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "addResult('Button Testing', 'fail', `Cross-origin error: ${error.message}`, 'Cannot access iframe content due to CORS policy');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.135037",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_buttons.html",
      "line": 286,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "addResult(`JS Function: ${funcName}`, 'warning', 'Function definition not found in page source');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142357",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 71,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_host_binding():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142382",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def load_from_file(cls, config_file='config.yaml'):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142391",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 121,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def save_to_file(cls, config_file='config.yaml'):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142405",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 147,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_logging(cls):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142429",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 192,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_validated_secret_key(cls):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142710",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142714",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import yaml"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142717",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142721",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dotenv import load_dotenv"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142752",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import warnings"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 73,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import warnings"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 194,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:50.142822",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 195,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import warnings"
    },
    {
      "timestamp": "2025-09-21T07:59:50.144011",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 121,
      "severity": "MEDIUM",
      "message": "Function 'save_to_file' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.144104",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 147,
      "severity": "MEDIUM",
      "message": "Function 'setup_logging' is too long (141 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.144180",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/config.py",
      "line": 192,
      "severity": "MEDIUM",
      "message": "Function '_get_validated_secret_key' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.147953",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 17,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.147965",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 18,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"FINAL ANALYTICS PAGE FUNCTIONALITY TEST\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.147971",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148002",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 58,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 {name}: OK ({response.status_code})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148012",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 65,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \ud83d\udcca Data present: {len(data)} keys\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148017",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 67,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \ud83d\udcca Data present: {len(data)} items\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148022",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 69,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u26a0\ufe0f  Empty response\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148026",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 71,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   \u26a0\ufe0f  Not valid JSON\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148032",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 75,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c {name}: FAILED ({response.status_code})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148038",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 79,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c {name}: ERROR - {str(e)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148043",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 82,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148046",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 83,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"SUMMARY\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148049",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 84,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148053",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 85,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Passed: {passed}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148057",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 86,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Failed: {failed}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148061",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 87,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udcca Total: {passed + failed}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148066",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 90,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udfaf Success Rate: {success_rate:.1f}%\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148071",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 93,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\ud83c\udf89 ANALYTICS PAGE IS WORKING EXCELLENTLY!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148075",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 95,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u2705 Analytics page is working well with minor issues\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148080",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 97,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u26a0\ufe0f  Analytics page has some functionality issues\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148085",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 99,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\u274c Analytics page has major functionality problems\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148092",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 105,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148096",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 106,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"SPEED TEST FUNCTIONALITY\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148100",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 107,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148108",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 115,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Speed test status: {response.json()}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148113",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 118,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u26a0\ufe0f  Note: Not starting actual speed test to avoid network usage\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148117",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 119,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Speed test start endpoint available\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148123",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 124,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Speed test functionality error: {str(e)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148130",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 129,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148133",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 130,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"ANALYTICS DATA QUALITY\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148137",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 131,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148149",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 146,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Network health score has required fields\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148152",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 147,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Health Score: {data['health_score']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148156",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 148,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Status: {data.get('status', 'N/A')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148161",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 151,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c Network health score missing required fields\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148167",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 154,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Network health score error: {str(e)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148176",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 164,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Device insights returning data\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148181",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 167,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c Device insights not returning data\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148186",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 170,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Device insights error: {str(e)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148195",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 181,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u2705 Devices list returning {device_count} devices\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148201",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 184,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c Devices list not returning proper format\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148206",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 187,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\u274c Devices list error: {str(e)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148210",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 190,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcca Data Quality Score: {tests_passed}/{total_tests}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148216",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 194,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"Testing Analytics Page Comprehensive Functionality...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148224",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 201,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n\" + \"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148228",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 202,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"FINAL RESULTS\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148231",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 203,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 60)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148241",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 213,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83c\udfaf Overall Score: {overall_score}%\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148246",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 216,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83c\udf89 ANALYTICS PAGE IS FULLY FUNCTIONAL!\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148249",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 217,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd25 All buttons and features should work perfectly\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148254",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 219,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u2705 Analytics page is working well\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148271",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 220,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udd27 Minor issues but core functionality intact\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148276",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 222,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u26a0\ufe0f  Analytics page has some issues\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148279",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 223,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udee0\ufe0f  Some buttons may not work correctly\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148284",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 225,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\u274c Analytics page has major problems\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148288",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 226,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\udea8 Many buttons likely non-functional\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.148293",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 228,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udcdd CONCLUSION: Analytics page is {'READY FOR USE' if overall_score >= 75 else 'NEEDS FIXES'}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.149840",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_all_analytics_endpoints():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.149892",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_speed_test_functionality():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.149906",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 127,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_analytics_data_quality():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.150176",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:50.150180",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.150183",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import urllib3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.151447",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 15,
      "severity": "MEDIUM",
      "message": "Function 'test_all_analytics_endpoints' is too long (312 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.151501",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 103,
      "severity": "MEDIUM",
      "message": "Function 'test_speed_test_functionality' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.151644",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_analytics_final.py",
      "line": 127,
      "severity": "MEDIUM",
      "message": "Function 'test_analytics_data_quality' is too long (240 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.154464",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 80,
      "severity": "HIGH",
      "message": "Potential hardcoded secrets",
      "details": "Pattern: password\\s*=\\s*[\\\"'][^\\\"']+[\\\"']",
      "code_snippet": "logger.warning(\"For production, set: export ADMIN_PASSWORD='your-admin-password'\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.156213",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 219,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"HomeNetMon Production Deployment\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.156218",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 220,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"================================\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.156231",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 234,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\\n\ud83d\udd04 Step: {step_name}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.156236",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 235,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"-\" * 40)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.157988",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_command(command, description, check=True):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.157999",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 37,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_environment():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158013",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 60,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def set_production_environment():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158029",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 90,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158038",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 101,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def build_assets():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158045",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 112,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_security_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158060",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 139,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_application():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158071",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 158,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def show_deployment_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158101",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158372",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158375",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158378",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158381",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158384",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158387",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158450",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 143,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "# Quick import test"
    },
    {
      "timestamp": "2025-09-21T07:59:50.158454",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 146,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.159593",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 22,
      "severity": "MEDIUM",
      "message": "Function 'run_command' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.159644",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 37,
      "severity": "MEDIUM",
      "message": "Function 'check_environment' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.159697",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 60,
      "severity": "MEDIUM",
      "message": "Function 'set_production_environment' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.159782",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 112,
      "severity": "MEDIUM",
      "message": "Function 'run_security_check' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.159956",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 158,
      "severity": "MEDIUM",
      "message": "Function 'show_deployment_summary' is too long (254 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.160037",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/deploy_production.py",
      "line": 217,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.161810",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 15,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Testing DELETE request to: {url}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161818",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 16,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"=\" * 50)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161825",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n1. Simple DELETE request:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161830",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 22,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Status: {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161834",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 23,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Headers: {dict(response.headers)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161838",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 24,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Body: {response.text}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161843",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161848",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 29,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n2. DELETE with JSON content type:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161860",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 33,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Status: {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161864",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 34,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Headers: {dict(response.headers)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161867",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 35,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Body: {response.text}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161872",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 37,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161877",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 40,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n3. DELETE with empty JSON body:\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161883",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 44,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Status: {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161886",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 45,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Headers: {dict(response.headers)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161890",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 46,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Body: {response.text}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161894",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 48,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161899",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 51,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\\n4. GET request to alerts endpoint (for comparison):\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161905",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 55,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Status: {response.status_code}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161909",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 56,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   Response length: {len(response.text)} chars\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.161913",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 58,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"   ERROR: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.162538",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_delete_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.162654",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:50.162663",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import urllib3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.163226",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/test_delete_direct.py",
      "line": 10,
      "severity": "MEDIUM",
      "message": "Function 'test_delete_request' is too long (223 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.172708",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_api.route('/start', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.172728",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 47,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_api.route('/stop', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.172807",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 165,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_api.route('/bandwidth/test', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.172884",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 274,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_api.route('/alerts/<string:alert_id>/acknowledge', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.172943",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 358,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_api.route('/recommendations', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.173185",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "performance_api = Blueprint('performance_api', __name__, url_prefix='/api/performance')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178530",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_performance_analysis():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178546",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 49,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_performance_analysis():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178557",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 66,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178565",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 79,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 94,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_performance(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178584",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 108,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_metrics_history(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178602",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 141,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_latency_analysis(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178617",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 167,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_bandwidth_test():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178628",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 186,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_bandwidth_history():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178643",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 214,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_latest_bandwidth():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 276,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def acknowledge_performance_alert(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178715",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 316,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_optimization_recommendations():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178738",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 360,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_optimization_recommendation():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 401,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_recommendation_status(recommendation_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178788",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 451,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 521,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_trends():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178863",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 587,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_quality_score():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178916",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 697,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def not_found(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.178921",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 702,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def internal_error(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.179659",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.179672",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:50.179675",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.179678",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_analyzer import performance_analyzer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.183628",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 32,
      "severity": "MEDIUM",
      "message": "Function 'start_performance_analysis' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.183679",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 49,
      "severity": "MEDIUM",
      "message": "Function 'stop_performance_analysis' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.183746",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 79,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_summary' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.183785",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 94,
      "severity": "MEDIUM",
      "message": "Function 'get_device_performance' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.183871",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 108,
      "severity": "MEDIUM",
      "message": "Function 'get_device_metrics_history' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.183937",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 141,
      "severity": "MEDIUM",
      "message": "Function 'get_device_latency_analysis' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.183973",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 167,
      "severity": "MEDIUM",
      "message": "Function 'trigger_bandwidth_test' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184041",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 186,
      "severity": "MEDIUM",
      "message": "Function 'get_bandwidth_history' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184090",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 214,
      "severity": "MEDIUM",
      "message": "Function 'get_latest_bandwidth' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184187",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_alerts' is too long (148 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184273",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 276,
      "severity": "MEDIUM",
      "message": "Function 'acknowledge_performance_alert' is too long (133 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184367",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 316,
      "severity": "MEDIUM",
      "message": "Function 'get_optimization_recommendations' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184465",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 360,
      "severity": "MEDIUM",
      "message": "Function 'create_optimization_recommendation' is too long (159 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184573",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 401,
      "severity": "MEDIUM",
      "message": "Function 'update_recommendation_status' is too long (170 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184737",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 451,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_metrics' is too long (258 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.184889",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 521,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_trends' is too long (225 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.185093",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_api.py",
      "line": 587,
      "severity": "MEDIUM",
      "message": "Function 'get_network_quality_score' is too long (326 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.198005",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 490,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@mobile_api.route('/sync/batch', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.198137",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 684,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@mobile_api.route('/ping/<int:device_id>', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.198157",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 711,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@mobile_api.route('/alerts/<int:alert_id>/acknowledge', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.198248",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "mobile_api = Blueprint('mobile_api', __name__, url_prefix='/api/mobile/v1')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mobile_auth_required(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204599",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204619",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 65,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def compress_response(data, threshold=1024):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204630",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def paginate_results(query, page=1, per_page=50, max_per_page=200):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 110,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 203,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_details(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204731",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 284,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_metrics_summary(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204750",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 317,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def calculate_device_performance_summary(device_id, hours_back):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204776",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 369,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_delta_sync():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204837",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 493,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def batch_sync():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204874",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 556,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def process_sync_operation(operation):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204897",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 599,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204940",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 687,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ping_device(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204956",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 714,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def acknowledge_alert(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.204977",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 754,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_mobile_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205005",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 809,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def not_found(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 818,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def rate_limit_exceeded(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 827,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def internal_error(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205816",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gzip"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205826",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import base64"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205829",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205832",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205834",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:50.205839",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.209810",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 25,
      "severity": "MEDIUM",
      "message": "Function 'mobile_auth_required' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.209868",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 65,
      "severity": "MEDIUM",
      "message": "Function 'compress_response' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.209923",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Function 'paginate_results' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.210110",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 110,
      "severity": "MEDIUM",
      "message": "Function 'get_devices' is too long (296 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.210272",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 203,
      "severity": "MEDIUM",
      "message": "Function 'get_device_details' is too long (252 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.210364",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 284,
      "severity": "MEDIUM",
      "message": "Function 'get_device_metrics_summary' is too long (139 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.210456",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 317,
      "severity": "MEDIUM",
      "message": "Function 'calculate_device_performance_summary' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.210695",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 369,
      "severity": "MEDIUM",
      "message": "Function 'get_delta_sync' is too long (377 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.210823",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 493,
      "severity": "MEDIUM",
      "message": "Function 'batch_sync' is too long (203 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.210927",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 556,
      "severity": "MEDIUM",
      "message": "Function 'process_sync_operation' is too long (154 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.211099",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 599,
      "severity": "MEDIUM",
      "message": "Function 'get_network_summary' is too long (272 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.211145",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 687,
      "severity": "MEDIUM",
      "message": "Function 'ping_device' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.211217",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 714,
      "severity": "MEDIUM",
      "message": "Function 'acknowledge_alert' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.211289",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 754,
      "severity": "MEDIUM",
      "message": "Function 'get_mobile_config' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.211411",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/mobile.py",
      "line": 28,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.219001",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 274,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@usage_analytics_api.route('/record-usage', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.219082",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 20,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "usage_analytics_api = Blueprint('usage_analytics_api', __name__, url_prefix='/api/analytics')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221817",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def require_analytics_access(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221824",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221838",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 46,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_usage_analytics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221877",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 108,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_quota_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221889",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 128,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_available_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221904",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 153,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_usage_trends():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221935",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 199,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_usage_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.221995",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 277,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def record_usage_endpoint():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.222492",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.222496",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.222499",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import csv"
    },
    {
      "timestamp": "2025-09-21T07:59:50.222502",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import io"
    },
    {
      "timestamp": "2025-09-21T07:59:50.222505",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:50.222508",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.224282",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 46,
      "severity": "MEDIUM",
      "message": "Function 'get_usage_analytics' is too long (196 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.224331",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 108,
      "severity": "MEDIUM",
      "message": "Function 'get_quota_status' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.224382",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 128,
      "severity": "MEDIUM",
      "message": "Function 'get_available_metrics' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.224466",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 153,
      "severity": "MEDIUM",
      "message": "Function 'get_usage_trends' is too long (132 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.224633",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 199,
      "severity": "MEDIUM",
      "message": "Function 'get_usage_summary' is too long (264 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.224737",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/usage_analytics_api.py",
      "line": 277,
      "severity": "MEDIUM",
      "message": "Function 'record_usage_endpoint' is too long (171 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.228519",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 15,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "devices_optimized_bp = Blueprint('devices_optimized', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.230271",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_optimized():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.230328",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 127,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def compute_device_status(last_seen, response_time):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.230340",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 147,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.230555",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.230559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.231498",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 19,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_optimized' is too long (286 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.231594",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices_optimized.py",
      "line": 147,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_summary' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.239462",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 475,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_bp.route('/collect/<int:device_id>', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.239498",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 510,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_bp.route('/collect', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.239563",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 7,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "performance_bp = Blueprint('performance', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244170",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 252,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'uptime_percentage': sum(uptime_percentages) / len(uptime_percentages) if uptime_percentages else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244195",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244212",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 38,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_performance():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244267",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 153,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_performance(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244298",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 212,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_performance_timeline(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244330",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 276,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_health_scores_distribution():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244389",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 395,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_top_performers():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244429",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 477,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_device_performance_collection(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244448",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 512,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_all_performance_collection():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244462",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 535,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_performance_grade(health_score):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244475",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 558,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_performance_status(health_score):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.244485",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 575,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_alerts_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.245078",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.245088",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_monitor import performance_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.245308",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 484,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_monitor import performance_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.245328",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 516,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_monitor import performance_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.245359",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 579,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_monitor import performance_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.248109",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 11,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_summary' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.248374",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 38,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_performance' is too long (404 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.248494",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 153,
      "severity": "MEDIUM",
      "message": "Function 'get_device_performance' is too long (183 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.248657",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 212,
      "severity": "MEDIUM",
      "message": "Function 'get_device_performance_timeline' is too long (254 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.248859",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 276,
      "severity": "MEDIUM",
      "message": "Function 'get_health_scores_distribution' is too long (322 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.249030",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 395,
      "severity": "MEDIUM",
      "message": "Function 'get_top_performers' is too long (272 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.249095",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 477,
      "severity": "MEDIUM",
      "message": "Function 'trigger_device_performance_collection' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.249136",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 512,
      "severity": "MEDIUM",
      "message": "Function 'trigger_all_performance_collection' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.249175",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 535,
      "severity": "MEDIUM",
      "message": "Function '_get_performance_grade' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.249252",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance.py",
      "line": 575,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_alerts_summary' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.259001",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 63,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@escalation_bp.route('/rules', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.259113",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 204,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@escalation_bp.route('/rules/<int:rule_id>/test', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.259192",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 320,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@escalation_bp.route('/executions/<int:execution_id>/cancel', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.259405",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 17,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "escalation_bp = Blueprint('escalation', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 577,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'message': 'Critical alert {{alert_id}} on {{device_name}} requires immediate attention',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264253",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_escalation_rules():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264276",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 65,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_escalation_rule():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264300",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 111,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_escalation_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264319",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 146,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_escalation_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264336",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 177,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_escalation_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264351",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 206,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_escalation_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264372",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 247,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_escalation_executions():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264399",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 300,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_escalation_execution(execution_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264411",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 322,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cancel_escalation_execution(execution_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264426",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 348,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_escalation_statistics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264461",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 420,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_trigger_types():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264482",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 459,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_action_types():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.264516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 532,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_rule_templates():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.265163",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:50.265167",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.265170",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.268160",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 21,
      "severity": "MEDIUM",
      "message": "Function 'get_escalation_rules' is too long (159 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268298",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 65,
      "severity": "MEDIUM",
      "message": "Function 'create_escalation_rule' is too long (197 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268386",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 111,
      "severity": "MEDIUM",
      "message": "Function 'get_escalation_rule' is too long (131 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268459",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 146,
      "severity": "MEDIUM",
      "message": "Function 'update_escalation_rule' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268548",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 177,
      "severity": "MEDIUM",
      "message": "Function 'delete_escalation_rule' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268622",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 206,
      "severity": "MEDIUM",
      "message": "Function 'test_escalation_rule' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268753",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 247,
      "severity": "MEDIUM",
      "message": "Function 'get_escalation_executions' is too long (202 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268812",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 300,
      "severity": "MEDIUM",
      "message": "Function 'get_escalation_execution' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.268888",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 322,
      "severity": "MEDIUM",
      "message": "Function 'cancel_escalation_execution' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.269116",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 348,
      "severity": "MEDIUM",
      "message": "Function 'get_escalation_statistics' is too long (299 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.269191",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 420,
      "severity": "MEDIUM",
      "message": "Function 'get_trigger_types' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.269271",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 459,
      "severity": "MEDIUM",
      "message": "Function 'get_action_types' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.269369",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/escalation.py",
      "line": 532,
      "severity": "MEDIUM",
      "message": "Function 'get_rule_templates' is too long (161 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.273698",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_rate_limiter():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273711",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_rate_limit_decorator(limit_type):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273715",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273719",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273736",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 58,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def safe_rate_limit(limit_type):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273742",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 65,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273745",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 67,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273840",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273843",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273845",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.273848",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.274442",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 23,
      "severity": "MEDIUM",
      "message": "Function 'create_rate_limit_decorator' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.274514",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 58,
      "severity": "MEDIUM",
      "message": "Function 'safe_rate_limit' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.274567",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 25,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.274622",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 65,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.274669",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 27,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.274722",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limiting.py",
      "line": 67,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.279716",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 291,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_dashboard_bp.route('/database/optimize', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.279740",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 319,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_dashboard_bp.route('/cache/clear', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.279759",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 344,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_dashboard_bp.route('/profiler/reset', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.279804",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 18,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "performance_dashboard_bp = Blueprint('performance_dashboard', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282719",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_overview():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282750",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 78,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_slow_queries():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282767",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_top_queries_by_time():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282786",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 143,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_top_queries_by_count():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282803",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 172,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_operation_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282813",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 188,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_cache_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282824",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 206,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_system_resources():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 269,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_connection_pool_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282878",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 293,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_database():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282896",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear_cache():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282912",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_profiler():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.282931",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 371,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def export_slow_queries():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.283424",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.283431",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.query_profiler import global_profiler"
    },
    {
      "timestamp": "2025-09-21T07:59:50.283436",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:50.283439",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:50.283442",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.283445",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.285646",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 22,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_overview' is too long (189 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.285728",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 78,
      "severity": "MEDIUM",
      "message": "Function 'get_slow_queries' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.285813",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function 'get_top_queries_by_time' is too long (133 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.285888",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 143,
      "severity": "MEDIUM",
      "message": "Function 'get_top_queries_by_count' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.285957",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function 'get_cache_stats' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.286123",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 206,
      "severity": "MEDIUM",
      "message": "Function 'get_system_resources' is too long (279 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.286175",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 269,
      "severity": "MEDIUM",
      "message": "Function 'get_connection_pool_status' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.286239",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 293,
      "severity": "MEDIUM",
      "message": "Function 'optimize_database' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.286281",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 321,
      "severity": "MEDIUM",
      "message": "Function 'clear_cache' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.286322",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 346,
      "severity": "MEDIUM",
      "message": "Function 'reset_profiler' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.286372",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_dashboard.py",
      "line": 371,
      "severity": "MEDIUM",
      "message": "Function 'export_slow_queries' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.293423",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 152,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_bp.route('/device/<int:device_id>/scan', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.293525",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 296,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_bp.route('/run-scan', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.293617",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 8,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "security_bp = Blueprint('security', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296732",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_security_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_security_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296760",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 55,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_security_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296789",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 113,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_scan_results():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296811",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 154,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scan_device(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 166,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_ports(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296856",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 230,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_security_overview():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296891",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_network_scan():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296905",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_scan_progress():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.296924",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 355,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_risk_assessment():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.297203",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 81,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.297374",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.security_scanner import security_scanner"
    },
    {
      "timestamp": "2025-09-21T07:59:50.297379",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.297382",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.299404",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 12,
      "severity": "MEDIUM",
      "message": "Function 'get_security_status' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.299473",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 33,
      "severity": "MEDIUM",
      "message": "Function 'get_security_summary' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.299620",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 55,
      "severity": "MEDIUM",
      "message": "Function 'get_security_alerts' is too long (215 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.299715",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 113,
      "severity": "MEDIUM",
      "message": "Function 'get_scan_results' is too long (141 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.299876",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 166,
      "severity": "MEDIUM",
      "message": "Function 'get_device_ports' is too long (196 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.300017",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 230,
      "severity": "MEDIUM",
      "message": "Function 'get_network_security_overview' is too long (213 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.300057",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 298,
      "severity": "MEDIUM",
      "message": "Function 'run_network_scan' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.300145",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 321,
      "severity": "MEDIUM",
      "message": "Function 'get_scan_progress' is too long (138 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.300290",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security.py",
      "line": 355,
      "severity": "MEDIUM",
      "message": "Function 'get_risk_assessment' is too long (240 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.304122",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 44,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_management_bp.route('/rollback', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.304153",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 78,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_management_bp.route('/validate', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.304225",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 8,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "config_management_bp = Blueprint('config_management', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305519",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 116,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'timestamp': config_service._last_config_check.isoformat() if hasattr(config_service, '_last_config_check') else None"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_configuration_history():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305550",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 46,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def rollback_configuration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305568",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 80,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_configuration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305584",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_configuration_backup():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305595",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 126,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_configuration_dependencies():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 143,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def configuration_health():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305794",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.305799",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.306700",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 12,
      "severity": "MEDIUM",
      "message": "Function 'get_configuration_history' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.306776",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 46,
      "severity": "MEDIUM",
      "message": "Function 'rollback_configuration' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.306841",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 80,
      "severity": "MEDIUM",
      "message": "Function 'validate_configuration' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.306887",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function 'get_configuration_backup' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.306926",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 126,
      "severity": "MEDIUM",
      "message": "Function 'get_configuration_dependencies' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.306985",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config_management.py",
      "line": 143,
      "severity": "MEDIUM",
      "message": "Function 'configuration_health' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.308975",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 13,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "system_bp = Blueprint('system', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.309898",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_system_info_endpoint():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.309913",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_version_endpoint():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.309927",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_system_stats_endpoint():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.309938",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 68,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_application_info_endpoint():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.309949",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 85,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.310089",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.310093",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.310140",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 88,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from version import get_version_string"
    },
    {
      "timestamp": "2025-09-21T07:59:50.310654",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/system.py",
      "line": 85,
      "severity": "MEDIUM",
      "message": "Function 'health_check' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.316657",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 112,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@anomaly_bp.route('/settings', methods=['GET', 'POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.316698",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 161,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@anomaly_bp.route('/run-detection', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.316895",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 430,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@anomaly_bp.route('/test-thresholds', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.316930",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 8,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "anomaly_bp = Blueprint('anomaly', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320515",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 260,
      "severity": "LOW",
      "message": "Line too long (150 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'uptime_percentage': (response_stats.successful_checks / response_stats.total_checks * 100) if response_stats.total_checks > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320520",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 265,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'uptime_percentage': (recent_stats.successful_checks / recent_stats.total_checks * 100) if recent_stats.total_checks > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320537",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomaly_statistics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320551",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomaly_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320581",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 92,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomaly_detection_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 114,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def manage_anomaly_settings():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320619",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 163,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_manual_detection():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320643",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 208,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_baseline(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320682",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 286,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomaly_configuration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320705",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 329,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_anomaly_configuration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.320756",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 432,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_anomaly_thresholds():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321037",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 60,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.anomaly_detection import anomaly_detection_service"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321245",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321349",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 221,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321384",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 289,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321407",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 332,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:50.321411",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 333,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.324207",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 12,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_statistics' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.324382",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 34,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_alerts' is too long (216 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.324422",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 92,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_detection_status' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.324507",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 114,
      "severity": "MEDIUM",
      "message": "Function 'manage_anomaly_settings' is too long (134 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.324581",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 163,
      "severity": "MEDIUM",
      "message": "Function 'run_manual_detection' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.324790",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 208,
      "severity": "MEDIUM",
      "message": "Function 'get_device_baseline' is too long (324 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.324905",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 286,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_configuration' is too long (175 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.325139",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 329,
      "severity": "MEDIUM",
      "message": "Function 'update_anomaly_configuration' is too long (405 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.325217",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/anomaly.py",
      "line": 432,
      "severity": "MEDIUM",
      "message": "Function 'test_anomaly_thresholds' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.337979",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 334,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@saas_admin_api.route('/tenants/<tenant_id>/suspend', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.338005",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 356,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@saas_admin_api.route('/tenants/<tenant_id>/reactivate', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.338059",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 435,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@saas_admin_api.route('/plans', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.338327",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 854,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@saas_admin_api.route('/webhooks/stripe', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.338367",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 18,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "saas_admin_api = Blueprint('saas_admin_api', __name__, url_prefix='/api/admin')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.344945",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 91,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "func.cast(func.json_extract(TenantSubscription.current_usage, f'$.{UsageMetricType.DEVICES_MONITORED.value}'), Integer)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.344950",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 95,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "func.cast(func.json_extract(TenantSubscription.current_usage, f'$.{UsageMetricType.API_CALLS.value}'), Integer)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.344989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def require_admin_auth(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345021",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def require_tenant_admin(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345026",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 43,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345039",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 67,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_system_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345074",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 140,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_tenants():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345116",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 227,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tenant_details(tenant_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345169",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def suspend_tenant(tenant_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345182",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 359,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reactivate_tenant(tenant_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345193",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 377,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_tenant(tenant_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345207",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 402,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_subscription_plans():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345227",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 438,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_subscription_plan():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 476,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_tenant_subscription():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345264",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 507,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_usage_analytics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345291",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 562,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_revenue_analytics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345327",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 636,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tenant_profile():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345343",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 666,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_tenant_profile():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345362",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 699,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tenant_subscription():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345385",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 742,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tenant_usage():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345418",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 807,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tenant_invoices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.345442",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 856,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stripe_webhook():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.346300",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.346304",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:50.346307",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.346312",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from billing_system import billing_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:50.346315",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from cloud_config import get_config"
    },
    {
      "timestamp": "2025-09-21T07:59:50.351030",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 67,
      "severity": "MEDIUM",
      "message": "Function 'get_system_stats' is too long (276 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351234",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 140,
      "severity": "MEDIUM",
      "message": "Function 'list_tenants' is too long (304 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351450",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 227,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_details' is too long (344 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351503",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 337,
      "severity": "MEDIUM",
      "message": "Function 'suspend_tenant' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351546",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 359,
      "severity": "MEDIUM",
      "message": "Function 'reactivate_tenant' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351600",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 377,
      "severity": "MEDIUM",
      "message": "Function 'delete_tenant' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351672",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 402,
      "severity": "MEDIUM",
      "message": "Function 'list_subscription_plans' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351753",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 438,
      "severity": "MEDIUM",
      "message": "Function 'create_subscription_plan' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351815",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 476,
      "severity": "MEDIUM",
      "message": "Function 'update_tenant_subscription' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.351935",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 507,
      "severity": "MEDIUM",
      "message": "Function 'get_usage_analytics' is too long (177 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.352089",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 562,
      "severity": "MEDIUM",
      "message": "Function 'get_revenue_analytics' is too long (237 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.352146",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 636,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_profile' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.352205",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 666,
      "severity": "MEDIUM",
      "message": "Function 'update_tenant_profile' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.352283",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 699,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_subscription' is too long (126 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.352423",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 742,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_usage' is too long (224 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.352510",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 807,
      "severity": "MEDIUM",
      "message": "Function 'get_tenant_invoices' is too long (141 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.352575",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/saas_admin.py",
      "line": 856,
      "severity": "MEDIUM",
      "message": "Function 'stripe_webhook' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.362868",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 59,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@automation_bp.route('/rules', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.362961",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 186,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@automation_bp.route('/rules/<int:rule_id>/toggle', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.362981",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 209,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@automation_bp.route('/rules/<int:rule_id>/test', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.363178",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 500,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@automation_bp.route('/templates/<template_id>', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.363215",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 9,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "automation_bp = Blueprint('automation', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367639",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 388,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'message': 'Critical: Router {device_name} ({device_ip}) is offline. Network connectivity may be affected.',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367661",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_rules():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367693",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_rule():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367720",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 108,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367730",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 122,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367756",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 167,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367768",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 188,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def toggle_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367781",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 211,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_rule(rule_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367800",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 244,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_executions():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367828",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_automation_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367868",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 368,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_rule_templates():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.367935",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 502,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_rule_from_template(template_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.368495",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import desc"
    },
    {
      "timestamp": "2025-09-21T07:59:50.368498",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:50.368501",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.371128",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 13,
      "severity": "MEDIUM",
      "message": "Function 'get_rules' is too long (151 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371244",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 61,
      "severity": "MEDIUM",
      "message": "Function 'create_rule' is too long (168 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371283",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 108,
      "severity": "MEDIUM",
      "message": "Function 'get_rule' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371396",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 122,
      "severity": "MEDIUM",
      "message": "Function 'update_rule' is too long (177 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371446",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 167,
      "severity": "MEDIUM",
      "message": "Function 'delete_rule' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371505",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function 'toggle_rule' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371573",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 211,
      "severity": "MEDIUM",
      "message": "Function 'test_rule' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371693",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 244,
      "severity": "MEDIUM",
      "message": "Function 'get_executions' is too long (185 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371869",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 298,
      "severity": "MEDIUM",
      "message": "Function 'get_automation_stats' is too long (264 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.371989",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 368,
      "severity": "MEDIUM",
      "message": "Function 'get_rule_templates' is too long (228 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.372089",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/automation.py",
      "line": 502,
      "severity": "MEDIUM",
      "message": "Function 'create_rule_from_template' is too long (161 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.377862",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 19,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@speedtest_bp.route('/run', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.377898",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 58,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@speedtest_bp.route('/run-sync', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.378036",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 252,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@speedtest_bp.route('/install', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.378058",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 280,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@speedtest_bp.route('/debug', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.378084",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 7,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "speedtest_bp = Blueprint('speedtest', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380454",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 175,
      "severity": "LOW",
      "message": "Line too long (154 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if speed_mbps >= 50: return {'rating': 'excellent', 'color': '#28a745', 'description': 'Perfect for streaming, gaming, and large uploads'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380472",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 176,
      "severity": "LOW",
      "message": "Line too long (146 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif speed_mbps >= 25: return {'rating': 'very_good', 'color': '#20c997', 'description': 'Great for video calls and file uploads'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380475",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 177,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif speed_mbps >= 10: return {'rating': 'good', 'color': '#17a2b8', 'description': 'Good for basic uploads and video calls'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380477",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 178,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif speed_mbps >= 5: return {'rating': 'fair', 'color': '#ffc107', 'description': 'Adequate for basic internet usage'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380480",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 179,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "else: return {'rating': 'poor', 'color': '#dc3545', 'description': 'May struggle with uploads and video calls'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380482",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 181,
      "severity": "LOW",
      "message": "Line too long (161 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if speed_mbps >= 100: return {'rating': 'excellent', 'color': '#28a745', 'description': 'Perfect for 4K streaming, gaming, and multiple devices'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380485",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 182,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif speed_mbps >= 50: return {'rating': 'very_good', 'color': '#20c997', 'description': 'Great for HD streaming and gaming'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380487",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 183,
      "severity": "LOW",
      "message": "Line too long (139 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif speed_mbps >= 25: return {'rating': 'good', 'color': '#17a2b8', 'description': 'Good for streaming and general usage'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380489",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 184,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif speed_mbps >= 10: return {'rating': 'fair', 'color': '#ffc107', 'description': 'Adequate for basic streaming and browsing'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380492",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 185,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "else: return {'rating': 'poor', 'color': '#dc3545', 'description': 'May struggle with streaming and large downloads'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380494",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 188,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if ping_ms <= 20: return {'rating': 'excellent', 'color': '#28a745', 'description': 'Perfect for gaming and real-time applications'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380497",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 189,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif ping_ms <= 50: return {'rating': 'very_good', 'color': '#20c997', 'description': 'Great for gaming and video calls'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380499",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 191,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "elif ping_ms <= 200: return {'rating': 'fair', 'color': '#ffc107', 'description': 'May notice delays in real-time applications'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380502",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 196,
      "severity": "LOW",
      "message": "Line too long (151 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "ping_rating = get_ping_rating(avg_ping) if avg_ping > 0 else {'rating': 'unknown', 'color': '#6c757d', 'description': 'No ping data available'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380517",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_speedtest_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380525",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_speedtest():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380533",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_test_async():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380548",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 60,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_speedtest_sync():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 78,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_speedtest_results():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380574",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 105,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_latest_result():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380590",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 134,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_speedtest_statistics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380601",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 152,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_speed_benchmark():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380613",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 173,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_speed_rating(speed_mbps, is_upload=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_ping_rating(ping_ms):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380656",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 254,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def install_speedtest_cli():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.380672",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 282,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def debug_speedtest():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.381006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.381010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.speedtest import speed_test_service"
    },
    {
      "timestamp": "2025-09-21T07:59:50.381013",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.381016",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.381174",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 285,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.381180",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 286,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.383085",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 21,
      "severity": "MEDIUM",
      "message": "Function 'run_speedtest' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383136",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 60,
      "severity": "MEDIUM",
      "message": "Function 'run_speedtest_sync' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383195",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 78,
      "severity": "MEDIUM",
      "message": "Function 'get_speedtest_results' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383267",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 105,
      "severity": "MEDIUM",
      "message": "Function 'get_latest_result' is too long (110 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383304",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Function 'get_speedtest_statistics' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383561",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 152,
      "severity": "MEDIUM",
      "message": "Function 'get_speed_benchmark' is too long (457 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383604",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 254,
      "severity": "MEDIUM",
      "message": "Function 'install_speedtest_cli' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383676",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 282,
      "severity": "MEDIUM",
      "message": "Function 'debug_speedtest' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383854",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 173,
      "severity": "MEDIUM",
      "message": "Function 'get_speed_rating' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.383890",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/speedtest.py",
      "line": 187,
      "severity": "MEDIUM",
      "message": "Function 'get_ping_rating' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.388351",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_limiter():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.388362",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def apply_rate_limiting(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.388413",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 127,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_endpoint_limiter(limit_type='moderate'):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.388425",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 145,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.388429",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 147,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.388602",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.388606",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:50.388609",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.389352",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 22,
      "severity": "MEDIUM",
      "message": "Function 'apply_rate_limiting' is too long (168 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.389427",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 127,
      "severity": "MEDIUM",
      "message": "Function 'create_endpoint_limiter' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.389492",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 145,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.389558",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limited_endpoints.py",
      "line": 147,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.407815",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 387,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.407971",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 599,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/<int:device_id>/ip-history', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.407999",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 637,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/ping-all', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408107",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 806,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/<int:device_id>/ping-test', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408277",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1063,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/bulk-update', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408357",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1179,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/bulk-ping', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408403",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1246,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/<int:device_id>/ping', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408434",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1288,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/<int:device_id>/monitoring', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408468",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1335,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/scan', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408471",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1336,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@devices_bp.route('/scan-now', methods=['POST'])  # Add alternative URL to bypass cache"
    },
    {
      "timestamp": "2025-09-21T07:59:50.408594",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "devices_bp = Blueprint('devices', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.409509",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1332,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d DEVICES BLUEPRINT REQUEST: {request.method} {request.path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.409514",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1333,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Full URL: {request.url}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.409522",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1339,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(\"\ud83d\ude80 SCAN ENDPOINT HIT: /api/devices/scan\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.409526",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1340,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\ude80 Request method: {request.method}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.409530",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1341,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\ude80 Request headers: {dict(request.headers)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419802",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 47,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "network_filter = InputValidator.validate_boolean(request.args.get('network_filter', 'false'))  # Changed default to false"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419807",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 65,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "filtered_devices = [d for d in filtered_devices if is_device_in_network_range(d['ip_address'], network_range)]"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 366,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'avg_response_time': round(float(raw_stats.avg_response_time), 2) if raw_stats.avg_response_time else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419821",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 367,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'min_response_time': round(float(raw_stats.min_response_time), 2) if raw_stats.min_response_time else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419824",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 368,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'max_response_time': round(float(raw_stats.max_response_time), 2) if raw_stats.max_response_time else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419828",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 437,
      "severity": "LOW",
      "message": "Line too long (158 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "@validate_request(allowed_fields=['ip_address', 'custom_name', 'device_type', 'device_group', 'room_location', 'device_priority', 'is_monitored', 'hostname'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419832",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 467,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "allowed_fields = ['custom_name', 'device_type', 'device_group', 'room_location', 'device_priority', 'is_monitored', 'hostname']"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419903",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cached_query(ttl=60):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419907",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419916",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.419969",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 139,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_fallback(group=None, device_type=None, status=None, monitored_only=False, network_filter=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420040",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 287,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420071",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def format_stats(raw_stats):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420093",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 389,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_device():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 438,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_device(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420160",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 515,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_device(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 536,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_ip_history(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420193",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 565,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_ip_change(device_id, old_ip, new_ip, source='auto_discovery', notes=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420213",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 601,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def log_ip_change(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 639,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ping_all_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420284",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 735,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_groups():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420297",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 755,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_types():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420310",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 775,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_ping(ip):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 808,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ping_device_test(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420363",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 870,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420424",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 994,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_monitored_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420460",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1065,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_update_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420517",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1181,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_ping_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420551",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1248,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ping_single_device(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1290,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_device_monitoring_status(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420595",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1330,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def debug_devices_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420601",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scan_network():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420620",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1374,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_scan_with_progress():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420628",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1384,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scan_timeout_handler():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.420664",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1459,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_scan_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.421450",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422135",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.monitor import DeviceMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422139",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422147",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ping3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 81,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422195",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 97,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import math"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422220",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 147,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.monitoring import filter_devices_by_network_range"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422300",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 312,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import func"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422345",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 401,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422462",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 641,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422465",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 642,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422468",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 643,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422534",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 779,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422551",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 811,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422554",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 812,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422557",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 813,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422561",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 814,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422757",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1226,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422774",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1254,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422831",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1369,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.422840",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1383,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.430266",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Function 'get_devices' is too long (365 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.430547",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 139,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_fallback' is too long (421 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.430822",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 287,
      "severity": "MEDIUM",
      "message": "Function 'get_device' is too long (435 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.430931",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 389,
      "severity": "MEDIUM",
      "message": "Function 'create_device' is too long (167 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431138",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 438,
      "severity": "MEDIUM",
      "message": "Function 'update_device' is too long (337 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431187",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 515,
      "severity": "MEDIUM",
      "message": "Function 'delete_device' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431253",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 536,
      "severity": "MEDIUM",
      "message": "Function 'get_device_ip_history' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431315",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 565,
      "severity": "MEDIUM",
      "message": "Function 'track_ip_change' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431390",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 601,
      "severity": "MEDIUM",
      "message": "Function 'log_ip_change' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431578",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 639,
      "severity": "MEDIUM",
      "message": "Function 'ping_all_devices' is too long (311 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431624",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 735,
      "severity": "MEDIUM",
      "message": "Function 'get_device_groups' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431670",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 755,
      "severity": "MEDIUM",
      "message": "Function 'get_device_types' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431723",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 775,
      "severity": "MEDIUM",
      "message": "Function 'test_ping' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.431826",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 808,
      "severity": "MEDIUM",
      "message": "Function 'ping_device_test' is too long (169 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.432076",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 870,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_summary' is too long (390 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.432225",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 994,
      "severity": "MEDIUM",
      "message": "Function 'get_monitored_devices' is too long (230 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.432452",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1065,
      "severity": "MEDIUM",
      "message": "Function 'bulk_update_devices' is too long (377 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.432571",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1181,
      "severity": "MEDIUM",
      "message": "Function 'bulk_ping_devices' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.432657",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1248,
      "severity": "MEDIUM",
      "message": "Function 'ping_single_device' is too long (136 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.432754",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1290,
      "severity": "MEDIUM",
      "message": "Function 'update_device_monitoring_status' is too long (154 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.432988",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1337,
      "severity": "MEDIUM",
      "message": "Function 'scan_network' is too long (353 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.433052",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1459,
      "severity": "MEDIUM",
      "message": "Function 'get_scan_status' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.433305",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 346,
      "severity": "MEDIUM",
      "message": "Function 'format_stats' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.433598",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/devices.py",
      "line": 1374,
      "severity": "MEDIUM",
      "message": "Function 'run_scan_with_progress' is too long (186 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.448768",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 31,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/scan/start', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.448892",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 199,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/monitoring/start', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.448907",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 216,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/monitoring/stop', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.448999",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 357,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/response/start', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.449013",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 374,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/response/stop', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.449045",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 419,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/response/playbooks', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.449086",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 478,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/remediation/tasks', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.449127",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 538,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/compliance/assess', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.449185",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 624,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@security_api.route('/compliance/report', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.449322",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 27,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "security_api = Blueprint('security_api', __name__, url_prefix='/api/security')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455139",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 307,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if new_status not in ['new', 'assigned', 'investigating', 'containing', 'eradicating', 'recovering', 'resolved', 'closed']:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455169",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 669,
      "severity": "LOW",
      "message": "Line too long (160 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "exported_file = compliance_reporting_engine.export_report(report, report_format, f\"/tmp/compliance_report_{report.report_id}.{report_format.value}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455195",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_security_scan():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455211",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 59,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_scan_progress():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455220",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 72,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_vulnerabilities():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455244",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 117,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_vulnerability_detail(finding_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455254",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 134,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_vulnerability_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455273",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 169,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_security_threats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455284",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 188,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_monitoring_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455293",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 201,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_security_monitoring():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455303",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 218,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_security_monitoring():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 236,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_security_incidents():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455335",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_incident_detail(incident_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455350",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 300,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_incident_status(incident_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455374",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_response_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455383",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 359,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_response_engine():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455393",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 376,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_response_engine():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455403",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 393,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_response_playbooks():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455419",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 421,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_response_playbook():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455433",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 447,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_remediation_tasks():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455451",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 480,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_remediation_task():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455470",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 513,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_remediation_task_status(task_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455485",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 540,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_compliance_assessment():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455513",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 592,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_compliance_results():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 626,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_compliance_report():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455562",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 688,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_compliance_trends():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 711,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_security_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 746,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_security_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455613",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 783,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_security_posture(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455621",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 796,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def not_found(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.455626",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 801,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def internal_error(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.456179",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 327,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.456420",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.456425",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.456429",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.network_security_monitor import network_security_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.456432",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.security_response import security_response_engine"
    },
    {
      "timestamp": "2025-09-21T07:59:50.456578",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 324,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.security_response import IncidentStatus"
    },
    {
      "timestamp": "2025-09-21T07:59:50.460615",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 33,
      "severity": "MEDIUM",
      "message": "Function 'start_security_scan' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.460753",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 72,
      "severity": "MEDIUM",
      "message": "Function 'get_vulnerabilities' is too long (154 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.460797",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function 'get_vulnerability_detail' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.460876",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Function 'update_vulnerability_status' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.460917",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 169,
      "severity": "MEDIUM",
      "message": "Function 'get_security_threats' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.460981",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 201,
      "severity": "MEDIUM",
      "message": "Function 'start_security_monitoring' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461016",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 218,
      "severity": "MEDIUM",
      "message": "Function 'stop_security_monitoring' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461119",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 236,
      "severity": "MEDIUM",
      "message": "Function 'get_security_incidents' is too long (133 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461191",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Function 'get_incident_detail' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461311",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 300,
      "severity": "MEDIUM",
      "message": "Function 'update_incident_status' is too long (148 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461387",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 359,
      "severity": "MEDIUM",
      "message": "Function 'start_response_engine' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461423",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 376,
      "severity": "MEDIUM",
      "message": "Function 'stop_response_engine' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461482",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 393,
      "severity": "MEDIUM",
      "message": "Function 'get_response_playbooks' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461536",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 421,
      "severity": "MEDIUM",
      "message": "Function 'create_response_playbook' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461611",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 447,
      "severity": "MEDIUM",
      "message": "Function 'get_remediation_tasks' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461687",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 480,
      "severity": "MEDIUM",
      "message": "Function 'create_remediation_task' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461750",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 513,
      "severity": "MEDIUM",
      "message": "Function 'update_remediation_task_status' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461854",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 540,
      "severity": "MEDIUM",
      "message": "Function 'run_compliance_assessment' is too long (151 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.461934",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 592,
      "severity": "MEDIUM",
      "message": "Function 'get_compliance_results' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.462131",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 626,
      "severity": "MEDIUM",
      "message": "Function 'generate_compliance_report' is too long (217 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.462200",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 688,
      "severity": "MEDIUM",
      "message": "Function 'get_compliance_trends' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.462279",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 711,
      "severity": "MEDIUM",
      "message": "Function 'get_security_config' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.462341",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/security_api.py",
      "line": 746,
      "severity": "MEDIUM",
      "message": "Function 'get_security_summary' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.470184",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 9,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@device_control_bp.route('/wake-on-lan', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.470220",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 45,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@device_control_bp.route('/ping', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.470247",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 81,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@device_control_bp.route('/port-scan', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.470277",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 123,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@device_control_bp.route('/discover-info', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.470301",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 154,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@device_control_bp.route('/traceroute', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.470339",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 209,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@device_control_bp.route('/bulk-wake', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.470387",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 279,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@device_control_bp.route('/bulk-ping', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.470468",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 7,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "device_control_bp = Blueprint('device_control', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473361",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wake_on_lan():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473383",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 47,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ping_device():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473402",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scan_ports():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473424",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 125,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def discover_info():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473441",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 156,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def traceroute():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473458",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_capabilities(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473472",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 211,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_wake_on_lan():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473506",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 281,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_ping():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473540",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_service_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473935",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 362,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473956",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473960",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_control import device_control_service"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473963",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:50.473980",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.474143",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 349,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.474154",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 366,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:50.476079",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 11,
      "severity": "MEDIUM",
      "message": "Function 'wake_on_lan' is too long (127 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476172",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 47,
      "severity": "MEDIUM",
      "message": "Function 'ping_device' is too long (134 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476276",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Function 'scan_ports' is too long (166 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476344",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 125,
      "severity": "MEDIUM",
      "message": "Function 'discover_info' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476412",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 156,
      "severity": "MEDIUM",
      "message": "Function 'traceroute' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476464",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 187,
      "severity": "MEDIUM",
      "message": "Function 'get_capabilities' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476601",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 211,
      "severity": "MEDIUM",
      "message": "Function 'bulk_wake_on_lan' is too long (221 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476741",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 281,
      "severity": "MEDIUM",
      "message": "Function 'bulk_ping' is too long (228 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.476818",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/device_control.py",
      "line": 346,
      "severity": "MEDIUM",
      "message": "Function 'get_service_status' is too long (129 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.482877",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 193,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_optimization_bp.route('/cache/clear', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.482905",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 220,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_optimization_bp.route('/memory/cleanup', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.482923",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 242,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_optimization_bp.route('/threads/optimize', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.482940",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 262,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_optimization_bp.route('/resources/rebuild', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.483025",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 12,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "performance_optimization_bp = Blueprint('performance_optimization', __name__, url_prefix='/api/performance')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485785",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 329,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "total_active = sum(stats.active_threads for stats in thread_data.values() if hasattr(stats, 'active_threads'))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_cache_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485814",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_memory_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 57,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_thread_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485841",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 76,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_websocket_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 99,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_resource_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485873",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 115,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_overview():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485911",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 195,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear_cache():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485926",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 222,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_memory_cleanup():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485939",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 244,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_thread_pools():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.485951",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 264,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def rebuild_resource_bundles():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486244",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 128,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486255",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 140,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486261",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 147,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486268",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 154,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486274",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 160,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486382",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486386",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486394",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_cache import get_cache_performance_metrics"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486416",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 60,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.thread_pool_manager import thread_pool_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486427",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 79,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_optimizer import websocket_optimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486440",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 102,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.resource_optimizer import get_resource_bundle_info"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486451",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 119,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_cache import get_cache_performance_metrics"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486455",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 121,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.thread_pool_manager import thread_pool_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486458",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 122,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_optimizer import websocket_optimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486461",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 123,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.resource_optimizer import get_resource_bundle_info"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486498",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 198,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_cache import performance_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486513",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 225,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.memory_monitor import memory_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486526",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 247,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.thread_pool_manager import thread_pool_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:50.486538",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 267,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.resource_optimizer import resource_bundler"
    },
    {
      "timestamp": "2025-09-21T07:59:50.488302",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 28,
      "severity": "MEDIUM",
      "message": "Function 'get_memory_stats' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488351",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 57,
      "severity": "MEDIUM",
      "message": "Function 'get_thread_stats' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488401",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 76,
      "severity": "MEDIUM",
      "message": "Function 'get_websocket_stats' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488438",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 99,
      "severity": "MEDIUM",
      "message": "Function 'get_resource_stats' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488563",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 115,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_overview' is too long (203 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488621",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 195,
      "severity": "MEDIUM",
      "message": "Function 'clear_cache' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488668",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 222,
      "severity": "MEDIUM",
      "message": "Function 'trigger_memory_cleanup' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488706",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 244,
      "severity": "MEDIUM",
      "message": "Function 'optimize_thread_pools' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488751",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 264,
      "severity": "MEDIUM",
      "message": "Function 'rebuild_resource_bundles' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.488971",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/performance_optimization.py",
      "line": 288,
      "severity": "MEDIUM",
      "message": "Function 'calculate_performance_score' is too long (357 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.504621",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 189,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@notifications_bp.route('/retry/<int:notification_id>', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.504710",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 302,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@notifications_bp.route('/send-test', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.505070",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 825,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@notifications_bp.route('/receipt/generate', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.505098",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 866,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@notifications_bp.route('/receipt/track', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.505317",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 11,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "notifications_bp = Blueprint('notifications', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514442",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 113,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "device_name = notification.device.display_name if notification.device else f\"Device {notification.device_id}\""
    },
    {
      "timestamp": "2025-09-21T07:59:50.514460",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 382,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "device_name = notification.device.display_name if notification.device else f\"Device {notification.device_id}\""
    },
    {
      "timestamp": "2025-09-21T07:59:50.514464",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 395,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "analysis['failure_by_type'] = dict(sorted(analysis['failure_by_type'].items(), key=lambda x: x[1], reverse=True))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514466",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 396,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "analysis['failure_by_device'] = dict(sorted(analysis['failure_by_device'].items(), key=lambda x: x[1], reverse=True))"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514470",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 438,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': f'Notification failure rate is {failure_rate:.1f}%, which is above the recommended 5% threshold.',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514473",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 449,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': f'\"{top_failing_type}\" notifications are failing most frequently ({top_failing_count} failures).',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514476",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 460,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': f'Device \"{top_failing_device}\" has the most notification failures ({top_failing_device_count}).',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 559,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "trend_direction = 'improving' if recent_avg > earlier_avg else 'declining' if recent_avg < earlier_avg else 'stable'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514484",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 575,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'peak_hour': max(trend_data, key=lambda x: x['total_notifications'])['time_bucket'] if trend_data else None"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514504",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 660,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "best_type = max(performance_by_type.items(), key=lambda x: x[1]['success_rate']) if performance_by_type else None"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514507",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 661,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "worst_type = min(performance_by_type.items(), key=lambda x: x[1]['success_rate']) if performance_by_type else None"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514512",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 736,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'confidence': 'high' if patterns['hourly'][hour] > 10 else 'medium' if patterns['hourly'][hour] > 3 else 'low'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 761,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': f'Peak hour volume ({max_hourly}) is {max_hourly/avg_hourly:.1f}x average. Consider rate limiting or queuing.',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514519",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 768,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': f'{len(risk_hours)} hours show high failure rates. Review notification service stability.',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514522",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 784,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'failure_prone_types': dict(sorted(patterns['failure_patterns'].items(), key=lambda x: x[1], reverse=True)[:5])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514529",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 941,
      "severity": "LOW",
      "message": "Line too long (218 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "pixel_data = b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x08\\x06\\x00\\x00\\x00\\x1f\\x15\\xc4\\x89\\x00\\x00\\x00\\nIDATx\\x9cc\\x00\\x01\\x00\\x00\\x05\\x00\\x01\\r\\n-\\xdb\\x00\\x00\\x00\\x00IEND\\"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514532",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 952,
      "severity": "LOW",
      "message": "Line too long (218 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "pixel_data = b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x08\\x06\\x00\\x00\\x00\\x1f\\x15\\xc4\\x89\\x00\\x00\\x00\\nIDATx\\x9cc\\x00\\x01\\x00\\x00\\x05\\x00\\x01\\r\\n-\\xdb\\x00\\x00\\x00\\x00IEND\\"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514535",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 977,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'tracking_coverage': (len(notifications_with_receipts) / total_notifications * 100) if total_notifications > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514539",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1020,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "analytics['engagement_metrics']['avg_read_time'] = (total_read_time / len(unique_readers)) if unique_readers else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514542",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1023,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "receipt_interactions = db.session.query(NotificationReceipt.interaction_type, func.count(NotificationReceipt.id))\\"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514546",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1071,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'tracking_token': receipt.tracking_token[:8] + '...' if receipt.tracking_token else None,  # Partial token for security"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514549",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1074,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'interaction_timestamp': receipt.interaction_timestamp.isoformat() + 'Z' if receipt.interaction_timestamp else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514554",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1151,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'last_notification_at': alert.last_notification_at.isoformat() + 'Z' if alert.last_notification_at else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1157,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'success_rate': (successful_notifications / total_notifications * 100) if total_notifications > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_history():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514603",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 75,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514637",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 142,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_types():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514652",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 168,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear_notification_history():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514666",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 191,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def retry_notification(notification_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514706",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notifications_for_alert(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 304,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_test_notification():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514748",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 352,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_failure_analysis():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514809",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 478,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_trends():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514867",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 584,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_performance():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 690,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_predictions():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 796,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_performance_recommendations(performance_by_type, hourly_rates):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.514989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 827,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_read_receipt_token():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.515010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 868,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_read_receipt():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.515036",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 918,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def read_receipt_pixel(tracking_token):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.515058",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 957,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_read_receipt_analytics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.515107",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1056,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_receipts(notification_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.515131",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1100,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _anonymize_ip(ip_address):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.515141",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1115,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alert_notification_status(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516322",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1110,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516363",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516366",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516369",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516372",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516375",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516471",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 206,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import PushNotificationService"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516490",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 240,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516511",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 279,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516529",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 309,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import PushNotificationService"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516835",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 940,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Response"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516843",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 951,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Response"
    },
    {
      "timestamp": "2025-09-21T07:59:50.516934",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1119,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:50.523227",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 15,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_history' is too long (194 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.523421",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 75,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_stats' is too long (273 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.523475",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 142,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_types' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.523532",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function 'clear_notification_history' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.523662",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 191,
      "severity": "MEDIUM",
      "message": "Function 'retry_notification' is too long (205 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.523737",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Function 'get_notifications_for_alert' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.523804",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 304,
      "severity": "MEDIUM",
      "message": "Function 'send_test_notification' is too long (110 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.524119",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 352,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_failure_analysis' is too long (508 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.524397",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 478,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_trends' is too long (444 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.524693",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 584,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_performance' is too long (465 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.524982",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 690,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_predictions' is too long (467 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.525048",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 796,
      "severity": "MEDIUM",
      "message": "Function 'generate_performance_recommendations' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.525127",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 827,
      "severity": "MEDIUM",
      "message": "Function 'generate_read_receipt_token' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.525254",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 868,
      "severity": "MEDIUM",
      "message": "Function 'track_read_receipt' is too long (199 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.525342",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 918,
      "severity": "MEDIUM",
      "message": "Function 'read_receipt_pixel' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.525573",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 957,
      "severity": "MEDIUM",
      "message": "Function 'get_read_receipt_analytics' is too long (370 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.525684",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1056,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_receipts' is too long (175 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.525862",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/notifications.py",
      "line": 1115,
      "severity": "MEDIUM",
      "message": "Function 'get_alert_notification_status' is too long (233 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.558048",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 373,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/devices/<int:device_id>/classify', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.558120",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 452,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/devices/classify-all', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.558358",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 803,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/devices/<int:device_id>/feedback', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.558398",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 859,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/learning/train-historical', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.558430",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 905,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/learning/import', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.558711",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1325,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/topology/discover', methods=['GET', 'POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.558976",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1710,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/anomalies/detect', methods=['GET', 'POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.558998",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1738,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/anomalies/detect-legacy', methods=['GET', 'POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.559199",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2040,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/anomalies/monitoring/start', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.559231",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2058,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@analytics_bp.route('/anomalies/monitoring/stop', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.559376",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 19,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "analytics_bp = Blueprint('analytics', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.559458",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 131,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error calculating uptime for device {device.id}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.559801",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 612,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "def get_device_fingerprint(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.559811",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 621,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "fingerprint = device_analytics.generate_device_fingerprint(device_id, days=days)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.559904",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 742,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "fp = device_analytics.generate_device_fingerprint(device.id, days=days)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577216",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 184,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'avg_network_uptime': round(statistics.mean([d['uptime'] for d in devices_with_uptime]) if devices_with_uptime else 0, 1),"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577224",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 218,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "success_rate = (activity['successful_pings'] / activity['total_pings'] * 100) if activity['total_pings'] > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577227",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 238,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "avg_response = activity['avg_response'] / activity['total_responses'] if activity['total_responses'] > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577232",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 300,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "success_rate = (metrics['success_count'] / metrics['total_count'] * 100) if metrics['total_count'] > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577235",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 314,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recent_avg = statistics.mean([d['avg_response_time'] for d in trend_data[-7:] if d['avg_response_time'] > 0])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577238",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 315,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "older_avg = statistics.mean([d['avg_response_time'] for d in trend_data[-14:-7] if d['avg_response_time'] > 0])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 317,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "response_trend = 'improving' if recent_avg < older_avg else 'degrading' if recent_avg > older_avg else 'stable'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577243",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 322,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "reliability_trend = 'improving' if recent_success > older_success else 'degrading' if recent_success < older_success else 'stable'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577248",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 350,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(f\"\ud83d\udea8 {active_alerts} active alert{'s' if active_alerts > 1 else ''} detected. Review alerts page for details.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577256",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 535,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "avg_confidence = statistics.mean([c for c in classification_confidence.values()]) if classification_confidence else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577258",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 538,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "most_common_type = max(device_type_distribution.items(), key=lambda x: x[1]) if device_type_distribution else ('unknown', 0)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577262",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 577,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'last_analysis_cache_size': len(device_analytics._analysis_cache) if hasattr(device_analytics, '_analysis_cache') else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577282",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1219,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "cascade_analysis['current_cascade_probability'] = network_risk['network_risk_analysis']['cascade_probability']"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577293",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1502,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'segments_with_gateways': sum(1 for segment in network_segments.values() if segment.get('estimated_gateway')),"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577296",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1506,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'healthiest_segment': max(network_segments.items(), key=lambda x: x[1]['segment_health'])[0] if network_segments else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577298",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1508,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "sum(segment['segment_health'] for segment in network_segments.values()) / max(1, len(network_segments)), 3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577312",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1908,
      "severity": "LOW",
      "message": "Line too long (150 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'temporal_hotspots': len([c for c in correlation_analysis.get('temporal_correlations', []) if c.get('correlation_strength', 0) > 0.5])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1910,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'recommendation_priority': 'high' if len(correlation_analysis.get('temporal_correlations', [])) > 3 else 'medium'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577320",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2019,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'urgency_assessment': 'immediate' if severity_level == 'critical' else 'high' if severity_level == 'high' else 'moderate'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577350",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_health_score():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577390",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 110,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_general_device_insights():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577432",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 194,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_usage_patterns():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577470",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 268,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_trends():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577509",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 342,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_health_recommendations(health_score, avg_response, success_rate, active_alerts=0):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577528",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 375,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def classify_device(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577543",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 399,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_insights(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577558",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 423,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_behavior(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 454,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def classify_all_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577599",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 498,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_analytics_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577637",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 569,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_learning_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577648",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 587,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_trends():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577663",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 612,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_fingerprint(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 630,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def compare_device_fingerprints(device_id1, device_id2):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577686",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 649,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def find_similar_devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 719,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_fingerprint_patterns():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577766",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 805,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def submit_device_feedback():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577786",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 840,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_learned_classification(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577799",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 861,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def train_on_historical_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577810",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 880,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_learning_statistics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 891,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def export_learning_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577829",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 907,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def import_learning_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577842",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 930,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_all_enhanced_classifications():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577872",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 978,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def compare_learning_performance():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577907",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1045,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_device_failure_risk(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1063,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def predict_device_mtbf(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577929",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1081,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_failure_patterns():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577939",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1096,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_network_failure_risk():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577948",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1111,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_early_warning_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577956",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1122,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_all_failure_predictions():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.577992",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1192,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_failure_cascades():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578014",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def identify_failure_hotspots():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578063",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1327,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def discover_network_topology():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578075",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1347,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_topology_visualization():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578105",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1403,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_device_relationships(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578116",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1422,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_network_paths():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578133",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1452,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_infrastructure_analysis():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1484,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_segments():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1523,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_connectivity_matrix():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578188",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1552,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_redundancy_analysis():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578203",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1578,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_bottleneck_analysis():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578219",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1607,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_topology_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578241",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1646,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor_topology_changes():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578251",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1662,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def export_topology_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578278",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1712,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def detect_anomalies():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578294",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1740,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def detect_legacy_anomalies():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578317",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1782,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_anomalies(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578335",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1814,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_wide_anomalies():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578352",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1844,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomaly_statistics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578372",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1881,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_anomaly_correlations():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578396",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1924,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomalies_by_type(anomaly_type):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578424",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1979,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomalies_by_severity(severity_level):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578456",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2042,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_anomaly_monitoring():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578467",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2060,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_anomaly_monitoring():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578478",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2077,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomaly_monitoring_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578493",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def manage_anomaly_configuration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2147,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_anomaly_recommendations():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.578546",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2205,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def export_anomaly_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580799",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580803",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580807",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580811",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.health import calculate_health_score"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_analytics import DeviceBehaviorAnalytics"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_learning import DeviceLearningSystem"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.predictive_failure import FailurePredictionEngine"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.network_topology import NetworkTopologyEngine"
    },
    {
      "timestamp": "2025-09-21T07:59:50.580826",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.anomaly_detection import AnomalyDetectionEngine"
    },
    {
      "timestamp": "2025-09-21T07:59:50.593307",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Function 'get_network_health_score' is too long (273 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.593537",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 110,
      "severity": "MEDIUM",
      "message": "Function 'get_general_device_insights' is too long (333 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.593733",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 194,
      "severity": "MEDIUM",
      "message": "Function 'get_usage_patterns' is too long (316 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.593950",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 268,
      "severity": "MEDIUM",
      "message": "Function 'get_network_trends' is too long (341 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594039",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 342,
      "severity": "MEDIUM",
      "message": "Function 'generate_health_recommendations' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594095",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 375,
      "severity": "MEDIUM",
      "message": "Function 'classify_device' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 399,
      "severity": "MEDIUM",
      "message": "Function 'get_device_insights' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594202",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 423,
      "severity": "MEDIUM",
      "message": "Function 'get_device_behavior' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594300",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 454,
      "severity": "MEDIUM",
      "message": "Function 'classify_all_devices' is too long (152 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594475",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 498,
      "severity": "MEDIUM",
      "message": "Function 'get_analytics_summary' is too long (279 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594520",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 569,
      "severity": "MEDIUM",
      "message": "Function 'get_learning_status' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594565",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 587,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_trends' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594604",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 612,
      "severity": "MEDIUM",
      "message": "Function 'get_device_fingerprint' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594649",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 630,
      "severity": "MEDIUM",
      "message": "Function 'compare_device_fingerprints' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.594798",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 649,
      "severity": "MEDIUM",
      "message": "Function 'find_similar_devices' is too long (243 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595001",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 719,
      "severity": "MEDIUM",
      "message": "Function 'get_fingerprint_patterns' is too long (321 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595076",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 805,
      "severity": "MEDIUM",
      "message": "Function 'submit_device_feedback' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595116",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 840,
      "severity": "MEDIUM",
      "message": "Function 'get_learned_classification' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595156",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 861,
      "severity": "MEDIUM",
      "message": "Function 'train_on_historical_data' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595258",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 907,
      "severity": "MEDIUM",
      "message": "Function 'import_learning_data' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595346",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 930,
      "severity": "MEDIUM",
      "message": "Function 'get_all_enhanced_classifications' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595470",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 978,
      "severity": "MEDIUM",
      "message": "Function 'compare_learning_performance' is too long (204 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595510",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1045,
      "severity": "MEDIUM",
      "message": "Function 'analyze_device_failure_risk' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595549",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1063,
      "severity": "MEDIUM",
      "message": "Function 'predict_device_mtbf' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595760",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1122,
      "severity": "MEDIUM",
      "message": "Function 'get_all_failure_predictions' is too long (211 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.595844",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1192,
      "severity": "MEDIUM",
      "message": "Function 'analyze_failure_cascades' is too long (138 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596051",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1232,
      "severity": "MEDIUM",
      "message": "Function 'identify_failure_hotspots' is too long (331 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596101",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1327,
      "severity": "MEDIUM",
      "message": "Function 'discover_network_topology' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596208",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1347,
      "severity": "MEDIUM",
      "message": "Function 'get_topology_visualization' is too long (176 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596245",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1403,
      "severity": "MEDIUM",
      "message": "Function 'analyze_device_relationships' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596311",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1422,
      "severity": "MEDIUM",
      "message": "Function 'analyze_network_paths' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596389",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1452,
      "severity": "MEDIUM",
      "message": "Function 'get_infrastructure_analysis' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596496",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1484,
      "severity": "MEDIUM",
      "message": "Function 'get_network_segments' is too long (167 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596562",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1523,
      "severity": "MEDIUM",
      "message": "Function 'get_connectivity_matrix' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596620",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1552,
      "severity": "MEDIUM",
      "message": "Function 'get_redundancy_analysis' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596687",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1578,
      "severity": "MEDIUM",
      "message": "Function 'get_bottleneck_analysis' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596777",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1607,
      "severity": "MEDIUM",
      "message": "Function 'get_topology_metrics' is too long (145 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596906",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1662,
      "severity": "MEDIUM",
      "message": "Function 'export_topology_data' is too long (158 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.596974",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1712,
      "severity": "MEDIUM",
      "message": "Function 'detect_anomalies' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597062",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1740,
      "severity": "MEDIUM",
      "message": "Function 'detect_legacy_anomalies' is too long (141 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597134",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1782,
      "severity": "MEDIUM",
      "message": "Function 'get_device_anomalies' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597202",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1814,
      "severity": "MEDIUM",
      "message": "Function 'get_network_wide_anomalies' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597268",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1844,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_statistics' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597371",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1881,
      "severity": "MEDIUM",
      "message": "Function 'analyze_anomaly_correlations' is too long (162 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597475",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1924,
      "severity": "MEDIUM",
      "message": "Function 'get_anomalies_by_type' is too long (167 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597602",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 1979,
      "severity": "MEDIUM",
      "message": "Function 'get_anomalies_by_severity' is too long (205 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597714",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2077,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_monitoring_status' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597797",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2103,
      "severity": "MEDIUM",
      "message": "Function 'manage_anomaly_configuration' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.597934",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2147,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_recommendations' is too long (209 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.598022",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/analytics.py",
      "line": 2205,
      "severity": "MEDIUM",
      "message": "Function 'export_anomaly_data' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.614371",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 21,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "health_check_bp = Blueprint('health_check', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618731",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def basic_health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618748",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 48,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def detailed_health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618776",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 104,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def database_health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618782",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 110,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def system_health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618788",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 116,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitoring_health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618793",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 122,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def readiness_probe():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618810",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 154,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def liveness_probe():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 181,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def dependencies_health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.618843",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 214,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def application_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619485",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 449,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619504",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 481,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619520",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 509,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619527",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 516,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619536",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 528,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619544",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 539,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619551",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 546,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619572",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619578",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619581",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import text"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619591",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.query_profiler import global_profiler"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.db_config import ConnectionPoolMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619792",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 439,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:50.619823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 501,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.application import SERVER_START_TIME"
    },
    {
      "timestamp": "2025-09-21T07:59:50.622122",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 25,
      "severity": "MEDIUM",
      "message": "Function 'basic_health_check' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622240",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 48,
      "severity": "MEDIUM",
      "message": "Function 'detailed_health_check' is too long (172 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622339",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 122,
      "severity": "MEDIUM",
      "message": "Function 'readiness_probe' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622391",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 154,
      "severity": "MEDIUM",
      "message": "Function 'liveness_probe' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622455",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 181,
      "severity": "MEDIUM",
      "message": "Function 'dependencies_health_check' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622497",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 214,
      "severity": "MEDIUM",
      "message": "Function 'application_metrics' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622574",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 233,
      "severity": "MEDIUM",
      "message": "Function '_check_database_health' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622611",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 278,
      "severity": "MEDIUM",
      "message": "Function '_check_cache_health' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622684",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 297,
      "severity": "MEDIUM",
      "message": "Function '_check_system_health' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622747",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 340,
      "severity": "MEDIUM",
      "message": "Function '_check_services_health' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.622813",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 380,
      "severity": "MEDIUM",
      "message": "Function '_check_monitoring_health' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.623396",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 417,
      "severity": "MEDIUM",
      "message": "Function '_test_database_connection' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.623442",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 436,
      "severity": "MEDIUM",
      "message": "Function '_test_network_connectivity' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.623497",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health_check.py",
      "line": 465,
      "severity": "MEDIUM",
      "message": "Function '_check_critical_resources' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.627497",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 116,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@rate_limit_admin_bp.route('/reset/<string:identifier>', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.627539",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 14,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "rate_limit_admin_bp = Blueprint('rate_limit_admin', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628698",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_rate_limit_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628720",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 59,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_configured_limits():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628740",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 96,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_rate_limit_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628753",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 118,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_rate_limits(identifier):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628767",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 142,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_rate_limiting():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628870",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 33,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628935",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628938",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.628941",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.629774",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 18,
      "severity": "MEDIUM",
      "message": "Function 'get_rate_limit_status' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.629846",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 59,
      "severity": "MEDIUM",
      "message": "Function 'get_configured_limits' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.629901",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 96,
      "severity": "MEDIUM",
      "message": "Function 'get_rate_limit_stats' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.629956",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/rate_limit_admin.py",
      "line": 118,
      "severity": "MEDIUM",
      "message": "Function 'reset_rate_limits' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.639735",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 339,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_bp.route('/reset', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.639768",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 378,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_bp.route('/test/email', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.639821",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 452,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_bp.route('/test/webhook', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.639857",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 496,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_bp.route('/test/push', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.639899",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 557,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_bp.route('/restart-services', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.639933",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 603,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_bp.route('/restart-system', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.639983",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 673,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@config_bp.route('/reset-monitoring-data', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.640049",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 7,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "config_bp = Blueprint('config', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645934",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 224,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Configuration.set_value('scan_excluded_ips', excluded_ips, 'IP addresses to exclude from network discovery scans')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645941",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 282,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Configuration.set_value('alert_webhook_enabled', str(data['webhook_enabled']).lower(), 'Enable webhook alerts')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645944",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 286,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Configuration.set_value('push_notifications_enabled', str(data['push_enabled']).lower(), 'Enable push notifications')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645947",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 302,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Configuration.set_value('alert_to_emails', data['email_to'], 'To email addresses for alerts (comma separated)')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645950",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 313,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Configuration.set_value('device_down_threshold_minutes', str(value), 'Minutes before device down alert')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645953",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 324,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Configuration.set_value('high_latency_threshold_ms', str(value), 'Milliseconds threshold for high latency alert')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645966",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 701,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "time_span_info = f\"{days} days of data (from {oldest_record.timestamp.strftime('%Y-%m-%d')} to {newest_record.timestamp.strftime('%Y-%m-%d')})\""
    },
    {
      "timestamp": "2025-09-21T07:59:50.645980",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_configuration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.645999",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 46,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_config_value(key):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646009",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_config_value(key):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646042",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 128,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646054",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 147,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_network_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646100",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 244,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alert_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646114",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 267,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_alert_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646152",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 341,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_configuration():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646173",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 380,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_email_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646209",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 454,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_webhook_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646232",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 498,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_push_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646263",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 559,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def restart_services():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646287",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 605,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def restart_system():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646306",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 641,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delayed_restart():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646324",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 675,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_monitoring_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.646356",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 737,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_dashboard_title():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647109",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647113",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 64,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647192",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 160,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647222",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 218,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647302",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 383,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647312",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 398,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.alerts import AlertManager"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647343",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 457,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647356",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 478,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647369",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 501,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647401",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 562,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647404",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 563,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647407",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 564,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import signal"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647430",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 608,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647433",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 609,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647451",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 610,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647469",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 642,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647474",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 646,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.647491",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 678,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.651182",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 12,
      "severity": "MEDIUM",
      "message": "Function 'get_configuration' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.651235",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 46,
      "severity": "MEDIUM",
      "message": "Function 'get_config_value' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.651391",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 61,
      "severity": "MEDIUM",
      "message": "Function 'update_config_value' is too long (251 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.651456",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 128,
      "severity": "MEDIUM",
      "message": "Function 'get_network_config' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.651678",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 147,
      "severity": "MEDIUM",
      "message": "Function 'update_network_config' is too long (378 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.651747",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 244,
      "severity": "MEDIUM",
      "message": "Function 'get_alert_config' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.651938",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 267,
      "severity": "MEDIUM",
      "message": "Function 'update_alert_config' is too long (313 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652014",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 341,
      "severity": "MEDIUM",
      "message": "Function 'reset_configuration' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652172",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 380,
      "severity": "MEDIUM",
      "message": "Function 'test_email_config' is too long (251 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652258",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 454,
      "severity": "MEDIUM",
      "message": "Function 'test_webhook_config' is too long (141 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652358",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 498,
      "severity": "MEDIUM",
      "message": "Function 'test_push_config' is too long (167 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652421",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 559,
      "severity": "MEDIUM",
      "message": "Function 'restart_services' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652520",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 605,
      "severity": "MEDIUM",
      "message": "Function 'restart_system' is too long (168 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652642",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 675,
      "severity": "MEDIUM",
      "message": "Function 'reset_monitoring_data' is too long (199 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.652705",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/config.py",
      "line": 737,
      "severity": "MEDIUM",
      "message": "Function 'update_dashboard_title' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.662265",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 38,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/tunnels', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662314",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 90,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/tunnels/<tunnel_id>/start', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662332",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 112,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/tunnels/<tunnel_id>/stop', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662350",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/tunnels/<tunnel_id>/clients', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662422",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 244,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/certificates', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662445",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/certificates/<cert_id>/revoke', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662463",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 297,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/auth/login', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662495",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 343,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/auth/logout', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662526",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 389,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@remote_bp.route('/auth/api-keys', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662638",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 14,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "remote_bp = Blueprint('remote', __name__, url_prefix='/api/remote')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.662643",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 15,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "remote_ui_bp = Blueprint('remote_ui', __name__, url_prefix='/remote')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666610",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_tunnels():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666622",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_tunnel():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666638",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 69,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_tunnel(tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666652",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 92,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_tunnel(tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666664",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 114,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_tunnel(tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 136,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_tunnel_client(tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666694",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 168,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_client_config(tunnel_id, client_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666713",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 203,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_tunnel(tunnel_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666728",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 229,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def list_certificates():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666739",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 246,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_certificate():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666756",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 277,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def revoke_certificate(cert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666769",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 299,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def login():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666793",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 345,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def logout():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 364,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_current_user():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 391,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_api_key():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666837",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 423,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def revoke_api_key(key_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666849",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 444,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def remote_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666863",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 463,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def tunnel_management():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666873",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 480,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def certificate_management():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666884",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 497,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def login_page():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666892",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 509,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_page():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666905",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 532,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def unauthorized(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666910",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 536,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def forbidden(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666914",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 540,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def not_found(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.666918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 544,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def internal_error(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.667452",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.667455",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import tempfile"
    },
    {
      "timestamp": "2025-09-21T07:59:50.667458",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.667461",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:50.667464",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from remote_access import get_tunnel_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:50.667467",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.670379",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 23,
      "severity": "MEDIUM",
      "message": "Function 'list_tunnels' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670467",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 40,
      "severity": "MEDIUM",
      "message": "Function 'create_tunnel' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670519",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 69,
      "severity": "MEDIUM",
      "message": "Function 'get_tunnel' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670579",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 92,
      "severity": "MEDIUM",
      "message": "Function 'start_tunnel' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670637",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 114,
      "severity": "MEDIUM",
      "message": "Function 'stop_tunnel' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670715",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 136,
      "severity": "MEDIUM",
      "message": "Function 'add_tunnel_client' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670796",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function 'get_client_config' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670860",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 203,
      "severity": "MEDIUM",
      "message": "Function 'delete_tunnel' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670896",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 229,
      "severity": "MEDIUM",
      "message": "Function 'list_certificates' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.670972",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 246,
      "severity": "MEDIUM",
      "message": "Function 'create_certificate' is too long (120 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671024",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 277,
      "severity": "MEDIUM",
      "message": "Function 'revoke_certificate' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671122",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 299,
      "severity": "MEDIUM",
      "message": "Function 'login' is too long (160 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671164",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 345,
      "severity": "MEDIUM",
      "message": "Function 'logout' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671218",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 364,
      "severity": "MEDIUM",
      "message": "Function 'get_current_user' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671282",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 391,
      "severity": "MEDIUM",
      "message": "Function 'create_api_key' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671325",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 423,
      "severity": "MEDIUM",
      "message": "Function 'revoke_api_key' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671364",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 444,
      "severity": "MEDIUM",
      "message": "Function 'remote_dashboard' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671400",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 463,
      "severity": "MEDIUM",
      "message": "Function 'tunnel_management' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671452",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 480,
      "severity": "MEDIUM",
      "message": "Function 'certificate_management' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.671518",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/remote.py",
      "line": 509,
      "severity": "MEDIUM",
      "message": "Function 'setup_page' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.680241",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 85,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@maintenance_bp.route('/database/cleanup', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.680314",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 181,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@maintenance_bp.route('/database/optimize', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.680362",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 251,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@maintenance_bp.route('/system/health-check', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.680491",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 442,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@maintenance_bp.route('/logs/cleanup', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.680577",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 20,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "maintenance_bp = Blueprint('maintenance', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684681",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 143,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Manual cleanup complete: {monitoring_deleted + alerts_deleted + perf_deleted} records deleted, {space_saved_mb}MB saved\")"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684712",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_database_health():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 87,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def manual_database_cleanup():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684791",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 183,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def manual_database_optimize():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 253,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def manual_health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684892",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 386,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_system_resources():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684921",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 444,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_logs():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.684951",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 502,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_maintenance_recommendations(db_size_mb, total_monitoring, data_span_days):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685498",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685501",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685504",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685510",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685513",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sqlite3"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685519",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.db_config import DatabaseOptimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685522",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.query_cache import query_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:50.685525",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.688349",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 24,
      "severity": "MEDIUM",
      "message": "Function 'get_database_health' is too long (255 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.688580",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 87,
      "severity": "MEDIUM",
      "message": "Function 'manual_database_cleanup' is too long (364 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.688729",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 183,
      "severity": "MEDIUM",
      "message": "Function 'manual_database_optimize' is too long (247 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.689010",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 253,
      "severity": "MEDIUM",
      "message": "Function 'manual_health_check' is too long (472 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.689160",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 386,
      "severity": "MEDIUM",
      "message": "Function 'get_system_resources' is too long (248 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.689296",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 444,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_logs' is too long (216 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.689364",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/maintenance.py",
      "line": 502,
      "severity": "MEDIUM",
      "message": "Function '_get_maintenance_recommendations' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.698545",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 11,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "health_bp = Blueprint('health', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702789",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 258,
      "severity": "LOW",
      "message": "Line too long (154 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "response_time = latest_data.response_time if latest_data and latest_data.response_time is not None and latest_data.response_time > 0 else None"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702801",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 506,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'trend': 'improving' if response_time_change < 0 else 'degrading' if response_time_change > 0 else 'stable'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_bandwidth():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702846",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 59,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_bandwidth_monitoring():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702855",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor_bandwidth():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702867",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 80,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_health_overview():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702920",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 192,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_health_score():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702945",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 241,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_topology():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702968",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 285,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def calculate_health_score(devices_online, total_devices, avg_response_time, active_alerts, uptime_percentage):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.702985",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 315,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_recent_network_activity(limit=50):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 364,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_trends(since_time):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703032",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 404,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_status_summary(health_score, critical_alerts):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703050",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 437,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def calculate_historical_comparisons(last_24h, yesterday_start, yesterday_end, last_week):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703097",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 536,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_time_ago(timestamp):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703644",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703648",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703651",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703654",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.703657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.706325",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 23,
      "severity": "MEDIUM",
      "message": "Function 'get_network_bandwidth' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.706567",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 80,
      "severity": "MEDIUM",
      "message": "Function 'get_health_overview' is too long (326 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.706665",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 192,
      "severity": "MEDIUM",
      "message": "Function 'get_health_score' is too long (152 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.706770",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 241,
      "severity": "MEDIUM",
      "message": "Function 'get_network_topology' is too long (162 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.706828",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 285,
      "severity": "MEDIUM",
      "message": "Function 'calculate_health_score' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.706946",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 315,
      "severity": "MEDIUM",
      "message": "Function 'get_recent_network_activity' is too long (179 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.707015",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 364,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_trends' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.707058",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 404,
      "severity": "MEDIUM",
      "message": "Function 'get_status_summary' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.707294",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 437,
      "severity": "MEDIUM",
      "message": "Function 'calculate_historical_comparisons' is too long (388 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.707364",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/health.py",
      "line": 536,
      "severity": "MEDIUM",
      "message": "Function 'get_time_ago' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.737910",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 86,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/scan', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.737957",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 133,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/reload-config', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.738243",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 557,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/<int:alert_id>/acknowledge', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.738263",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 582,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/acknowledge-all', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.738281",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 606,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/<int:alert_id>/resolve', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.738401",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 792,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/cleanup-duplicates', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.738957",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1631,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/recalculate-priorities', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.739035",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1724,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/bulk-acknowledge', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.739072",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1762,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/bulk-resolve', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.739108",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1799,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/bulk-delete', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.739149",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1849,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/bulk-update-priority', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.739196",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1909,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@monitoring_bp.route('/alerts/suppressions', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:50.739514",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 15,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "monitoring_bp = Blueprint('monitoring', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757371",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 928,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "headers={'Content-Disposition': f'attachment; filename=homeNetMon_data_{datetime.now().strftime(\"%Y%m%d_%H%M%S\")}.csv'}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757393",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1516,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'current_total_mbps': round((current_result[0] + current_result[1]), 2) if current_result[0] and current_result[1] else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757410",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2012,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "suppression.start_time = datetime.fromisoformat(data['start_time'].replace('Z', '+00:00')).replace(tzinfo=None)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757413",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2021,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "suppression.end_time = datetime.fromisoformat(data['end_time'].replace('Z', '+00:00')).replace(tzinfo=None)"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757437",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2191,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status_color = 'success' if notification.delivery_status == 'success' else 'danger' if notification.delivery_status == 'failed' else 'secondary'"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757440",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2196,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': f'{notification.notification_type.replace(\"_\", \" \").title()} notification {notification.delivery_status}',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757443",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2197,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'icon': 'bi-bell' if notification.delivery_status == 'success' else 'bi-bell-slash' if notification.delivery_status == 'failed' else 'bi-bell',"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757468",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_cached_background_activity():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757476",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cache_background_activity(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 37,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_current_network_range():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757488",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 47,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_device_in_network_range(device_ip, network_range):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757496",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 56,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def filter_devices_by_network_range(query, network_range=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757513",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 88,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_network_scan():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757527",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 112,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_scan():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757540",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 135,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reload_scanner_config():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757558",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 171,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_monitoring_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 231,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_monitoring_statistics():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757606",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 261,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cached_live_ping_scan(network_range_str, cache_key):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757617",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 279,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_live_network_stats(network_range):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757628",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 297,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_quick_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757673",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 384,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_chart_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757693",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 421,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_monitoring_timeline():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 517,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757764",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 559,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def acknowledge_alert(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 584,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def acknowledge_all_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757792",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 608,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def resolve_alert(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757805",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 630,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_alert(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757833",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 683,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_all_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757861",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 722,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_delete_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757896",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 794,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_duplicate_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757913",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 824,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_monitoring_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757937",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 872,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def export_monitoring_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.757969",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 936,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_background_activity():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758017",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1033,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_topology_test():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758072",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1145,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_topology():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758138",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1282,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_bandwidth_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1324,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_bandwidth_timeline():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758208",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1420,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_bandwidth_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758264",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1533,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_bandwidth_rankings():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758305",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1614,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alert_priority_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758316",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1633,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def recalculate_alert_priorities():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758333",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1664,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alerts_by_priority():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758349",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1694,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alert_priority_details(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758366",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1726,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_acknowledge_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758387",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1764,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_resolve_alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758406",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1801,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_delete_alerts_by_ids():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758432",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1851,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_update_alert_priority():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758454",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1893,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alert_suppressions():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758465",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1911,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_alert_suppression():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758496",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1971,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_alert_suppression(suppression_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2042,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def delete_alert_suppression(suppression_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758544",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2065,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_active_suppressions():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2084,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_alert_timeline(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2162,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_unified_alert_timeline(alert_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758642",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2260,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_monitoring_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.758675",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2325,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_recent_activity():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.760997",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import func"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761002",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.monitor import DeviceMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761009",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761015",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from concurrent.futures import ThreadPoolExecutor"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import lru_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761021",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761024",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limited_endpoints import create_endpoint_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761040",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761044",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 44,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761068",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 91,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761079",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 110,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761095",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 138,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761301",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 571,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761325",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 617,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761343",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 649,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761354",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 667,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761376",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 704,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761412",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 776,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761424",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 797,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761463",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 875,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from io import StringIO"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761466",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 876,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import csv"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761469",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 877,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Response"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761503",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 945,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1617,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_priority import AlertPriorityScorer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761836",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1636,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_priority import AlertPriorityScorer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761876",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1703,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_priority import AlertPriorityScorer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761961",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1867,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_priority import AlertPriorityScorer"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761978",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1896,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AlertSuppression"
    },
    {
      "timestamp": "2025-09-21T07:59:50.761989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1914,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AlertSuppression"
    },
    {
      "timestamp": "2025-09-21T07:59:50.762022",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1974,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AlertSuppression"
    },
    {
      "timestamp": "2025-09-21T07:59:50.762061",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2045,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AlertSuppression"
    },
    {
      "timestamp": "2025-09-21T07:59:50.762075",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2068,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AlertSuppression"
    },
    {
      "timestamp": "2025-09-21T07:59:50.762137",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2185,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import NotificationHistory"
    },
    {
      "timestamp": "2025-09-21T07:59:50.774291",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 56,
      "severity": "MEDIUM",
      "message": "Function 'filter_devices_by_network_range' is too long (137 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.774381",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 88,
      "severity": "MEDIUM",
      "message": "Function 'trigger_network_scan' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.774437",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 135,
      "severity": "MEDIUM",
      "message": "Function 'reload_scanner_config' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.774557",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 171,
      "severity": "MEDIUM",
      "message": "Function 'get_monitoring_data' is too long (181 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.774624",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function 'get_monitoring_statistics' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.774675",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 261,
      "severity": "MEDIUM",
      "message": "Function '_cached_live_ping_scan' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.774859",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 297,
      "severity": "MEDIUM",
      "message": "Function 'get_quick_stats' is too long (235 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.774942",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 384,
      "severity": "MEDIUM",
      "message": "Function 'get_chart_data' is too long (126 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775164",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 421,
      "severity": "MEDIUM",
      "message": "Function 'get_monitoring_timeline' is too long (359 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775275",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 517,
      "severity": "MEDIUM",
      "message": "Function 'get_alerts' is too long (170 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775333",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 559,
      "severity": "MEDIUM",
      "message": "Function 'acknowledge_alert' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775385",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 584,
      "severity": "MEDIUM",
      "message": "Function 'acknowledge_all_alerts' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775434",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 608,
      "severity": "MEDIUM",
      "message": "Function 'resolve_alert' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775549",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 630,
      "severity": "MEDIUM",
      "message": "Function 'delete_alert' is too long (145 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775628",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 683,
      "severity": "MEDIUM",
      "message": "Function 'delete_all_alerts' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775808",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 722,
      "severity": "MEDIUM",
      "message": "Function 'bulk_delete_alerts' is too long (256 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.775887",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 794,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_duplicate_alerts' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.776013",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 824,
      "severity": "MEDIUM",
      "message": "Function 'get_monitoring_status' is too long (155 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.776170",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 872,
      "severity": "MEDIUM",
      "message": "Function 'export_monitoring_data' is too long (203 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.776411",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 936,
      "severity": "MEDIUM",
      "message": "Function 'get_background_activity' is too long (302 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.776639",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1033,
      "severity": "MEDIUM",
      "message": "Function 'get_topology_test' is too long (324 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.776926",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1145,
      "severity": "MEDIUM",
      "message": "Function 'get_network_topology' is too long (417 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.777039",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1282,
      "severity": "MEDIUM",
      "message": "Function 'get_bandwidth_data' is too long (158 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.777293",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1324,
      "severity": "MEDIUM",
      "message": "Function 'get_bandwidth_timeline' is too long (371 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.777533",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1420,
      "severity": "MEDIUM",
      "message": "Function 'get_bandwidth_summary' is too long (386 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.777723",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1533,
      "severity": "MEDIUM",
      "message": "Function 'get_device_bandwidth_rankings' is too long (291 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.777769",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1614,
      "severity": "MEDIUM",
      "message": "Function 'get_alert_priority_summary' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.777843",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1633,
      "severity": "MEDIUM",
      "message": "Function 'recalculate_alert_priorities' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.777956",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1664,
      "severity": "MEDIUM",
      "message": "Function 'get_alerts_by_priority' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778037",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1694,
      "severity": "MEDIUM",
      "message": "Function 'get_alert_priority_details' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778140",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1726,
      "severity": "MEDIUM",
      "message": "Function 'bulk_acknowledge_alerts' is too long (126 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778226",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1764,
      "severity": "MEDIUM",
      "message": "Function 'bulk_resolve_alerts' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778347",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1801,
      "severity": "MEDIUM",
      "message": "Function 'bulk_delete_alerts_by_ids' is too long (159 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778452",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1851,
      "severity": "MEDIUM",
      "message": "Function 'bulk_update_alert_priority' is too long (148 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778500",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1893,
      "severity": "MEDIUM",
      "message": "Function 'get_alert_suppressions' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778649",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1911,
      "severity": "MEDIUM",
      "message": "Function 'create_alert_suppression' is too long (229 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778834",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 1971,
      "severity": "MEDIUM",
      "message": "Function 'update_alert_suppression' is too long (281 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778892",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2042,
      "severity": "MEDIUM",
      "message": "Function 'delete_alert_suppression' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.778944",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2065,
      "severity": "MEDIUM",
      "message": "Function 'get_active_suppressions' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.779114",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2084,
      "severity": "MEDIUM",
      "message": "Function 'get_alert_timeline' is too long (260 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.779331",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2162,
      "severity": "MEDIUM",
      "message": "Function 'get_unified_alert_timeline' is too long (331 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.779475",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2260,
      "severity": "MEDIUM",
      "message": "Function 'get_monitoring_summary' is too long (208 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.779623",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/api/monitoring.py",
      "line": 2325,
      "severity": "MEDIUM",
      "message": "Function 'get_recent_activity' is too long (213 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.792515",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 11,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "analytics_routes = Blueprint('analytics_routes', __name__, url_prefix='/analytics')"
    },
    {
      "timestamp": "2025-09-21T07:59:50.793277",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analytics_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.793293",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 37,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def usage_analytics_page():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.793306",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 57,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def quota_management():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.793318",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 76,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def usage_reports():"
    },
    {
      "timestamp": "2025-09-21T07:59:50.793432",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from usage_analytics import usage_analytics"
    },
    {
      "timestamp": "2025-09-21T07:59:50.793435",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:50.793981",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 14,
      "severity": "MEDIUM",
      "message": "Function 'analytics_dashboard' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.794033",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 37,
      "severity": "MEDIUM",
      "message": "Function 'usage_analytics_page' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.794070",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 57,
      "severity": "MEDIUM",
      "message": "Function 'quota_management' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.794115",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/routes/analytics.py",
      "line": 76,
      "severity": "MEDIUM",
      "message": "Function 'usage_reports' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:50.804388",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/sdk/homenetmon-sdk.js",
      "line": 460,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`SDK Request [${attempt + 1}/${this.config.retryAttempts}]:`, {"
    },
    {
      "timestamp": "2025-09-21T07:59:50.804597",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/sdk/homenetmon-sdk.js",
      "line": 790,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "*     console.log('Devices updated:', devices);"
    },
    {
      "timestamp": "2025-09-21T07:59:50.804604",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/sdk/homenetmon-sdk.js",
      "line": 795,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "*     console.log('App is offline, queueing actions');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.804610",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/sdk/homenetmon-sdk.js",
      "line": 799,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "*     console.log('App is back online, syncing data');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.807007",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/sdk/homenetmon-sdk.js",
      "line": 741,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "return Math.random().toString(36).substr(2, 9);"
    },
    {
      "timestamp": "2025-09-21T07:59:50.813093",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/sdk/homenetmon-sdk.js",
      "line": 741,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "return Math.random().toString(36).substr(2, 9);"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832362",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 496,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd14 Alerts page loaded');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832396",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 523,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[AlertsManager ${timestamp}] ${message}`, data || '');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832921",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1327,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udc1b Alerts Debug Mode Enabled');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832925",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1328,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Use getDebugInfo() to see current state');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832929",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1329,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Use disableDebugMode() to turn off debug mode');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832936",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1334,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udc1b Alerts Debug Mode Disabled');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832948",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1349,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\ude80 Initializing AlertsManager...');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832955",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1352,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\u2705 AlertsManager initialized successfully');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832961",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1356,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udc1b Alerts Debug Mode Enabled');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832965",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1357,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Use getDebugInfo() to see current state');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832969",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1358,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Use disableDebugMode() to turn off debug mode');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.832974",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 1360,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udca1 Enable debug mode with: enableDebugMode()');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841362",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 429,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn-modern btn-danger-bold\" onclick=\"deleteAllAlerts()\" id=\"delete-all-btn\" title=\"Delete ALL alerts - Use with caution!\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841366",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 434,
      "severity": "LOW",
      "message": "Line too long (152 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn-modern btn-danger dropdown-toggle\" type=\"button\" id=\"bulkDeleteDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841369",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 439,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"bulkDeleteByType('performance')\">Delete All Performance Alerts</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841372",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 440,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"bulkDeleteByType('device_recovery')\">Delete All Recovery Alerts</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841391",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 441,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"bulkDeleteByStatus(true)\">Delete All Resolved Alerts</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841393",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 442,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"bulkDeleteByStatus(false)\">Delete All Unresolved Alerts</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841396",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 444,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item text-warning\" href=\"#\" onclick=\"bulkDeleteBySeverity('info')\">Delete All Info Alerts</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841399",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 445,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item text-danger\" href=\"#\" onclick=\"bulkDeleteBySeverity('warning')\">Delete All Warning Alerts</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841415",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 857,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"alert-message\">${this.escapeHtml(alert.message || 'No additional details available.')}</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841418",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 863,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${isResolved ? `<span class=\"text-muted\">\u2022 Resolved ${this.getTimeAgo(alert.resolved_at)}</span>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:50.841422",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/alerts.html",
      "line": 920,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const allSelected = this.filteredAlerts.length > 0 && this.selectedAlerts.size === this.filteredAlerts.length;"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877630",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 439,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "background: linear-gradient(90deg, rgba(255, 255, 255, 0.1) 25%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.1) 75%);"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877644",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 531,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"breadcrumb-item\"><a href=\"{{ url_for('alerts') }}\"><i class=\"bi bi-exclamation-triangle\"></i> Alerts & Issues</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877648",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 532,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"breadcrumb-item active\" aria-current=\"page\"><i class=\"bi bi-arrow-up-right-circle\"></i> Escalation Rules</li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877652",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 555,
      "severity": "LOW",
      "message": "Line too long (146 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"loadTemplate('basic_notification_failure')\">Basic Notification Failure</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877655",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 556,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"loadTemplate('critical_alert')\">Critical Alert Escalation</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 557,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"loadTemplate('high_failure_rate')\">High Failure Rate</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877662",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 608,
      "severity": "LOW",
      "message": "Line too long (154 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#advanced-filters\" aria-expanded=\"false\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877664",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 617,
      "severity": "LOW",
      "message": "Line too long (147 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"text\" class=\"form-control\" id=\"filter-search\" placeholder=\"Search by name or description...\" onkeyup=\"applyFilters()\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877668",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 643,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<select class=\"form-select form-select-sm\" id=\"filter-priority-min\" onchange=\"applyFilters()\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877671",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 653,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<select class=\"form-select form-select-sm\" id=\"filter-priority-max\" onchange=\"applyFilters()\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 666,
      "severity": "LOW",
      "message": "Line too long (163 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"text\" class=\"form-control form-control-sm\" id=\"filter-created-by\" placeholder=\"Username or email...\" onkeyup=\"applyFilters()\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877683",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 885,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const triggerBadge = `<span class=\"badge bg-info trigger-type-badge\">${rule.trigger_type.replace('_', ' ')}</span>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877686",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 900,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"checkbox\" class=\"rule-checkbox\" value=\"${rule.id}\" onchange=\"toggleRuleSelection(${rule.id})\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 962,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"checkbox\" class=\"rule-checkbox me-2\" value=\"${rule.id}\" onchange=\"toggleRuleSelection(${rule.id})\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877693",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 985,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"me-3\"><i class=\"bi bi-clock\"></i> ${rule.escalation_interval_minutes}min intervals</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877699",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 1086,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const selectAllCheckbox = document.getElementById('select-all-rules') || document.getElementById('table-select-all');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.877707",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 1261,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if (!confirm(`Are you sure you want to delete ${selectedRules.size} selected rules? This action cannot be undone.`)) {"
    },
    {
      "timestamp": "2025-09-21T07:59:50.881693",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rules.html",
      "line": 1048,
      "severity": "HIGH",
      "message": "JavaScript dom xss",
      "details": "Pattern: innerHTML\\s*=\\s*[^;]*\\+",
      "code_snippet": "nextItem.innerHTML = `<a class=\"page-link\" href=\"#\" onclick=\"changePage(${pagination.page + 1})\">Next</a>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929006",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2005,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: Initializing dashboard system...');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929051",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2032,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: System initialization completed successfully');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929069",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2043,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: DOM loaded, starting initialization...');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929106",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2076,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: Dashboard fully initialized and running');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929644",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2798,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: WebSocket connected');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929651",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2803,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: WebSocket disconnected');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929786",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 3006,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: Searching for:', searchTerm);"
    },
    {
      "timestamp": "2025-09-21T07:59:50.929924",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 3212,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('NOC: Script initialization completed');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949478",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1090,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<i class=\"bi bi-arrow-up text-success trend-arrow\" id=\"trend-arrow\" style=\"display: none;\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949488",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1186,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<select class=\"form-select form-select-sm bg-dark border-secondary text-light\" id=\"search-sort\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949494",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1283,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-secondary btn-sm\" id=\"alert-sound-toggle\" title=\"Toggle alert sounds\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949497",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1294,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong>CRITICAL ALERT:</strong> <span id=\"critical-alert-text\">Network issues detected</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949501",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1314,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-secondary btn-sm ms-2\" id=\"acknowledge-all-btn\" title=\"Acknowledge all visible alerts\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949504",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1337,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal fade\" id=\"nocDeviceModal\" data-bs-theme=\"dark\" tabindex=\"-1\" aria-labelledby=\"nocDeviceModalLabel\" aria-hidden=\"true\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949507",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1339,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal-content\" style=\"background: var(--noc-bg-secondary); border: 1px solid var(--noc-accent-cyan);\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949510",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1344,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949513",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1386,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<h6 class=\"text-uppercase mb-3\" style=\"color: var(--noc-accent-green); letter-spacing: 1px;\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1390,
      "severity": "LOW",
      "message": "Line too long (196 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input class=\"form-check-input\" type=\"checkbox\" id=\"modal-monitoring-toggle\" style=\"background-color: var(--noc-bg-primary); border-color: var(--noc-accent-cyan);\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949520",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1417,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"stat-value\" id=\"modal-response-time\" style=\"color: var(--noc-accent-cyan);\">--</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949523",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1425,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"stat-value\" id=\"modal-last-seen\" style=\"color: var(--noc-accent-yellow);\">--</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949526",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1429,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"stat-value\" id=\"modal-alerts-count\" style=\"color: var(--noc-accent-red);\">--</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949529",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1446,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal fade\" id=\"actionResultsModal\" data-bs-theme=\"dark\" tabindex=\"-1\" aria-labelledby=\"actionResultsModalLabel\" aria-hidden=\"true\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1448,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal-content\" style=\"background: var(--noc-bg-secondary); border: 1px solid var(--noc-accent-cyan);\">"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949534",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1453,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949537",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 1466,
      "severity": "LOW",
      "message": "Line too long (255 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<pre id=\"results-content\" style=\"background: var(--noc-bg-primary); color: var(--noc-text-primary); padding: 15px; border-radius: 8px; border: 1px solid var(--noc-border); max-height: 400px; overflow-"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949568",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2440,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"noc-badge\">${device.alerts_count} alert${device.alerts_count !== 1 ? 's' : ''}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:50.949594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 3223,
      "severity": "LOW",
      "message": "Line too long (146 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "alert('Keyboard Shortcuts:\\n\\nArrow Keys - Navigate devices\\nEnter/Space - Open device details\\nF11 - Toggle fullscreen\\nESC - Close modals');"
    },
    {
      "timestamp": "2025-09-21T07:59:50.959066",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/noc_view.html",
      "line": 2544,
      "severity": "HIGH",
      "message": "JavaScript dom xss",
      "details": "Pattern: innerHTML\\s*=\\s*[^;]*\\+",
      "code_snippet": "moreIndicator.innerHTML = `<small>+${devices.length - maxNodes} more devices</small>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.001991",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 534,
      "severity": "LOW",
      "message": "Line too long (149 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"breadcrumb-item\"><a href=\"{{ url_for('escalation_rules') }}\"><i class=\"bi bi-arrow-up-right-circle\"></i> Escalation Rules</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 542,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<h1><i class=\"bi bi-{{ 'pencil' if rule_id else 'plus-circle' }}\"></i> {{ 'Edit' if rule_id else 'Create' }} Escalation Rule</h1>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 543,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<p class=\"text-muted\">{{ 'Modify' if rule_id else 'Set up automated escalation workflows for notifications and alerts' }}</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002014",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 582,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<label for=\"rule-name\" class=\"form-label\">Rule Name <span class=\"text-danger\">*</span></label>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002016",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 583,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"text\" class=\"form-control\" id=\"rule-name\" required placeholder=\"e.g., Critical Alert Escalation\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002020",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 589,
      "severity": "LOW",
      "message": "Line too long (165 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<textarea class=\"form-control\" id=\"rule-description\" rows=\"3\" placeholder=\"Describe when and how this rule should be used...\"></textarea>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002023",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 595,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<label for=\"rule-priority\" class=\"form-label\">Priority <span class=\"text-danger\">*</span></label>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002026",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 619,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"text\" class=\"form-control\" id=\"rule-created-by\" placeholder=\"Your name or identifier\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002029",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 627,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<p class=\"text-muted\">Choose a pre-configured template to get started quickly, or continue with a blank rule.</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002032",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 642,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<label for=\"trigger-type\" class=\"form-label\">Trigger Type <span class=\"text-danger\">*</span></label>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002052",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 654,
      "severity": "LOW",
      "message": "Line too long (152 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input class=\"form-check-input\" type=\"checkbox\" id=\"filter-device-types\" onchange=\"toggleFilterSection('device-types')\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002055",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 660,
      "severity": "LOW",
      "message": "Line too long (164 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input class=\"form-check-input\" type=\"checkbox\" id=\"filter-notification-types\" onchange=\"toggleFilterSection('notification-types')\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002058",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 666,
      "severity": "LOW",
      "message": "Line too long (158 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input class=\"form-check-input\" type=\"checkbox\" id=\"filter-severity-levels\" onchange=\"toggleFilterSection('severity-levels')\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002062",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 693,
      "severity": "LOW",
      "message": "Line too long (195 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"col-md-2\"><div class=\"form-check\"><input class=\"form-check-input\" type=\"checkbox\" value=\"critical\"><label class=\"form-check-label\">Critical</label></div></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002064",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 694,
      "severity": "LOW",
      "message": "Line too long (187 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"col-md-2\"><div class=\"form-check\"><input class=\"form-check-input\" type=\"checkbox\" value=\"high\"><label class=\"form-check-label\">High</label></div></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002067",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 695,
      "severity": "LOW",
      "message": "Line too long (191 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"col-md-2\"><div class=\"form-check\"><input class=\"form-check-input\" type=\"checkbox\" value=\"medium\"><label class=\"form-check-label\">Medium</label></div></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002069",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 696,
      "severity": "LOW",
      "message": "Line too long (185 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"col-md-2\"><div class=\"form-check\"><input class=\"form-check-input\" type=\"checkbox\" value=\"low\"><label class=\"form-check-label\">Low</label></div></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002071",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 697,
      "severity": "LOW",
      "message": "Line too long (187 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"col-md-2\"><div class=\"form-check\"><input class=\"form-check-input\" type=\"checkbox\" value=\"info\"><label class=\"form-check-label\">Info</label></div></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002075",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 725,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-primary btn-sm dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002078",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 754,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"number\" class=\"form-control\" id=\"delay-minutes\" min=\"0\" max=\"1440\" value=\"0\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002081",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 765,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"number\" class=\"form-control\" id=\"escalation-interval\" min=\"1\" max=\"1440\" value=\"60\" required>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002084",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 775,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"number\" class=\"form-control\" id=\"max-escalations\" min=\"1\" max=\"10\" value=\"3\" required>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002089",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 841,
      "severity": "LOW",
      "message": "Line too long (190 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<textarea class=\"form-control\" id=\"test-context\" rows=\"10\" placeholder='{\"notification_type\": \"device_down\", \"device_type\": \"router\", \"severity\": \"critical\"}'></textarea>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002101",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1156,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<label class=\"form-check-label\" for=\"notification-type-${type}\">${data.descriptions[type] || type}</label>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002105",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1188,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<option value=\"failure_count\" ${condition.field === 'failure_count' ? 'selected' : ''}>Failure Count</option>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002108",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1189,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<option value=\"duration_minutes\" ${condition.field === 'duration_minutes' ? 'selected' : ''}>Duration (minutes)</option>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002110",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1190,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<option value=\"error_message\" ${condition.field === 'error_message' ? 'selected' : ''}>Error Message</option>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002112",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1191,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<option value=\"failure_rate\" ${condition.field === 'failure_rate' ? 'selected' : ''}>Failure Rate</option>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002115",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1196,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<option value=\"greater_than\" ${condition.operator === 'greater_than' ? 'selected' : ''}>Greater Than</option>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002121",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1284,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "onchange=\"updateActionConfig(${index}, '${field}', this.value)\">${Array.isArray(value) ? value.join(', ') : value}</textarea>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002124",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1292,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<select class=\"form-select form-select-sm\" onchange=\"updateActionConfig(${index}, '${field}', this.value)\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002131",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1439,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "showToast(`${actionTypes[action.action_type].name} action ${index + 1} is missing ${field}`, 'error');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002136",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1538,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const selected = Array.from(document.querySelectorAll('#device-types-checkboxes input:checked')).map(cb => cb.value);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002139",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1543,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const selected = Array.from(document.querySelectorAll('#notification-types-checkboxes input:checked')).map(cb => cb.value);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002142",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1548,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const selected = Array.from(document.querySelectorAll('#severity-levels-checkboxes input:checked')).map(cb => cb.value);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002145",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1564,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${formData.description ? `<tr><td><strong>Description:</strong></td><td>${formData.description}</td></tr>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002148",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1569,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Type:</strong></td><td>${triggerTypes[formData.trigger_type]?.name || formData.trigger_type}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.002150",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_rule_form.html",
      "line": 1571,
      "severity": "LOW",
      "message": "Line too long (148 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "`<tr><td><strong>Conditions:</strong></td><td>${Object.keys(formData.trigger_conditions).length} conditions</td></tr>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.027745",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/system_info.html",
      "line": 624,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "repoElement.innerHTML = `<a href=\"${data.application.repository}\" target=\"_blank\" class=\"text-decoration-none\">${data.application.repository}</a>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.027762",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/system_info.html",
      "line": 702,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "statusElement.innerHTML = `<i class=\"bi ${statusIcon} me-1\"></i><span class=\"${statusClass}\">${statusText}</span>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.052293",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/notification_analytics.html",
      "line": 424,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"breadcrumb-item\"><a href=\"{{ url_for('notifications') }}\"><i class=\"bi bi-bell\"></i> Notification History</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.052304",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/notification_analytics.html",
      "line": 468,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-secondary granularity-btn active\" data-granularity=\"hour\">Hourly</button>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.052310",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/notification_analytics.html",
      "line": 543,
      "severity": "LOW",
      "message": "Line too long (208 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div id=\"loading-overlay\" class=\"position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center\" style=\"background: rgba(255,255,255,0.9); z-index: 9999; display: none !impo"
    },
    {
      "timestamp": "2025-09-21T07:59:51.052315",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/notification_analytics.html",
      "line": 613,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const response = await fetch(`/api/notifications/analytics/trends?hours=${currentTimeframe}&granularity=${currentGranularity}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.052323",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/notification_analytics.html",
      "line": 810,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"fw-bold\">${data.trend_direction.charAt(0).toUpperCase() + data.trend_direction.slice(1)}</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.052327",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/notification_analytics.html",
      "line": 842,
      "severity": "LOW",
      "message": "Line too long (194 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"h2 mb-1 text-${summary.overall_success_rate >= 95 ? 'success' : summary.overall_success_rate >= 85 ? 'warning' : 'danger'}\">${summary.overall_success_rate}%</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.052331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/notification_analytics.html",
      "line": 878,
      "severity": "LOW",
      "message": "Line too long (152 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"badge bg-${successRate >= 95 ? 'success' : successRate >= 85 ? 'warning' : 'danger'}\">${successRate.toFixed(1)}%</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.066350",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/ai_dashboard.html",
      "line": 581,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('AI detection result:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.070389",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/ai_dashboard.html",
      "line": 419,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"anomaly-severity severity-${anomaly.severity || 'medium'}\">${anomaly.severity || 'Medium'}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.079970",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/base_beautiful.html",
      "line": 455,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Loading:', message);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.079985",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/base_beautiful.html",
      "line": 459,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Loading complete');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.079997",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/base_beautiful.html",
      "line": 471,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Success:', message);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.082620",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/base_beautiful.html",
      "line": 276,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "background: linear-gradient(90deg, rgba(255,255,255,0.05) 25%, rgba(255,255,255,0.1) 50%, rgba(255,255,255,0.05) 75%);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.101605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/settings.html",
      "line": 368,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-sm\" onclick=\"setNetworkRange('192.168.1.0/24')\">192.168.1.x</button>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.101614",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/settings.html",
      "line": 369,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-sm\" onclick=\"setNetworkRange('192.168.86.0/24')\">192.168.86.x</button>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.101617",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/settings.html",
      "line": 370,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-sm\" onclick=\"setNetworkRange('10.0.0.0/24')\">10.0.0.x</button>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.101620",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/settings.html",
      "line": 380,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<p class=\"mb-2\">HomeNetMon continuously monitors your network in the background. Configure how frequently monitoring operations run:</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.101623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/settings.html",
      "line": 415,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-sm\" onclick=\"setScanInterval(1800)\">30m</button>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.101630",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/settings.html",
      "line": 568,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<p>A comprehensive home network monitoring solution designed to keep track of all devices on your network.</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.114005",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/about.html",
      "line": 234,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<img src=\"{{ url_for('static', filename='images/shaky8-logo.jpg') }}?v=20250830fix\" alt=\"SHAKY8\" height=\"200\" width=\"200\" class=\"mb-4 shaky8-logo\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.114013",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/about.html",
      "line": 236,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<p class=\"mb-0\" style=\"opacity: 0.8;\">Professional-grade network monitoring for home and small business environments</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.114017",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/about.html",
      "line": 271,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"mb-2\"><i class=\"bi bi-check-circle text-success me-2\"></i>Real-time Monitoring</li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.114023",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/about.html",
      "line": 272,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"mb-2\"><i class=\"bi bi-check-circle text-success me-2\"></i>Smart Anomaly Detection</li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.114026",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/about.html",
      "line": 280,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"mb-2\"><i class=\"bi bi-check-circle text-success me-2\"></i>Performance Analytics</li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.139097",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance.html",
      "line": 617,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const allRecommendations = [...(data.analyzer_recommendations || []), ...(data.database_recommendations || [])];"
    },
    {
      "timestamp": "2025-09-21T07:59:51.139108",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance.html",
      "line": 646,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "tableBody.innerHTML = '<tr><td colspan=\"7\" class=\"text-center text-muted\">No metrics data available</td></tr>';"
    },
    {
      "timestamp": "2025-09-21T07:59:51.139118",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance.html",
      "line": 918,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<p><strong>Severity:</strong> <span class=\"badge bg-${getSeverityColor(alert.severity)}\">${alert.severity}</span></p>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.139122",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance.html",
      "line": 954,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<p><strong>Impact Assessment:</strong> ${recommendation.impact_assessment || 'Not specified'}</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.139129",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance.html",
      "line": 1082,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "toast.className = `toast align-items-center text-white bg-${type === 'error' ? 'danger' : type === 'success' ? 'success' : 'primary'} border-0`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.139131",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance.html",
      "line": 1087,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\"></button>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179044",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1641,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(\"Network graph initialized\", {"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179091",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1688,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(\"Loading topology data...\");"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179101",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1697,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(\"Topology data loaded:\", data);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179113",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1709,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`Retrying... (${this.retryCount}/${this.maxRetries})`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179189",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1814,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`Processed ${this.nodes.length} nodes and ${this.links.length} links`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179512",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2287,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`Switching to ${layout} layout`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179554",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2345,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`Filtered to ${this.nodes.length} nodes and ${this.links.length} links`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179562",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2352,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(\"Refreshing topology data...\");"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179621",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2438,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`Resized to ${this.width} x ${this.height}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.179681",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2522,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(\"Initializing Network Topology...\");"
    },
    {
      "timestamp": "2025-09-21T07:59:51.187526",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1801,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "x: Math.random() * this.width,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.187531",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1802,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "y: Math.random() * this.height"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 586,
      "severity": "LOW",
      "message": "Line too long (257 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-w"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195757",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 947,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn-modern dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" title=\"Filter Device Types\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195762",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1013,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn-modern dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" title=\"Change Layout\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195765",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1034,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn-modern dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" title=\"Ping Devices\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195772",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1159,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal fade\" id=\"pingProgressModal\" tabindex=\"-1\" aria-labelledby=\"pingProgressModalLabel\" aria-hidden=\"true\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195776",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1205,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"card border-0 shadow-lg\" style=\"max-width: 300px; background: rgba(26, 26, 46, 0.95); backdrop-filter: blur(20px);\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1210,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"device-icon-container me-3 p-2 rounded-circle d-flex align-items-center justify-content-center\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.195797",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1758,
      "severity": "LOW",
      "message": "Line too long (179 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-primary-modern\" onclick=\"navigator.clipboard.writeText(document.getElementById('diagnostics-content').innerText)\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195809",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2090,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"badge\" style=\"background-color: ${this.getNodeColor(node)}\">${node.status}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195812",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2097,
      "severity": "LOW",
      "message": "Line too long (166 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Response Time:</strong></td><td>${node.response_time ? `${node.response_time.toFixed(1)}ms` : 'N/A'}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2098,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Uptime:</strong></td><td>${node.uptime ? `${node.uptime.toFixed(1)}%` : 'N/A'}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195817",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2099,
      "severity": "LOW",
      "message": "Line too long (167 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Last Seen:</strong></td><td>${node.last_seen ? new Date(node.last_seen).toLocaleString() : 'Unknown'}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2100,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Active Alerts:</strong></td><td>${node.alerts_count || 0}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.195823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 2107,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-primary-modern\" onclick=\"window.open('/device/${node.id}', '_blank')\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.208553",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1801,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "x: Math.random() * this.width,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.208565",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/topology.html",
      "line": 1802,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "y: Math.random() * this.height"
    },
    {
      "timestamp": "2025-09-21T07:59:51.217470",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 560,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Loading chart data for period:', period);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.217539",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 649,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Loading:', message);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.217545",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 653,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Loading complete');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.221413",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 189,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" id=\"ping-device-btn\"><i class=\"bi bi-wifi\"></i> Ping Device</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.221417",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 190,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" id=\"wake-device-btn\"><i class=\"bi bi-power\"></i> Wake on LAN</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.221420",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 191,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" id=\"port-scan-btn\"><i class=\"bi bi-search\"></i> Port Scan</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.221422",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 192,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" id=\"discover-info-btn\"><i class=\"bi bi-info-circle\"></i> Discover Info</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.221425",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 193,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" id=\"traceroute-btn\"><i class=\"bi bi-diagram-3\"></i> Traceroute</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.221427",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/device_detail.html",
      "line": 196,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn-modern btn-secondary\" id=\"edit-device-btn\" data-bs-toggle=\"modal\" data-bs-target=\"#editDeviceModal\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255072",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 680,
      "severity": "LOW",
      "message": "Line too long (149 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li class=\"breadcrumb-item\"><a href=\"{{ url_for('escalation_rules') }}\"><i class=\"bi bi-arrow-up-right-circle\"></i> Escalation Rules</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255084",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 711,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-warning\" onclick=\"showBulkActions()\" id=\"bulk-actions-toggle\" style=\"display: none;\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255089",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 762,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#execution-filters\" aria-expanded=\"false\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255093",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 823,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"text\" class=\"form-control\" id=\"filter-search\" placeholder=\"Search executions...\" onkeyup=\"applyFilters()\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255100",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 924,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal fade\" id=\"executionDetailsModal\" tabindex=\"-1\" aria-labelledby=\"executionDetailsModalLabel\" aria-hidden=\"true\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255102",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 936,
      "severity": "LOW",
      "message": "Line too long (139 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-warning\" id=\"cancel-execution-btn\" onclick=\"cancelExecution()\" style=\"display: none;\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255108",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1011,
      "severity": "LOW",
      "message": "Line too long (172 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "document.getElementById('in-progress-count').textContent = stats.total_executions - stats.completed_executions - stats.failed_executions - stats.pending_executions;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255113",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1087,
      "severity": "LOW",
      "message": "Line too long (153 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const statusBadge = `<span class=\"execution-status-badge status-${execution.status}\">${execution.status.replace('_', ' ').toUpperCase()}</span>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255116",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1104,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"checkbox\" class=\"execution-checkbox\" value=\"${execution.id}\" onchange=\"toggleExecutionSelection(${execution.id})\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1125,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-info\" onclick=\"viewExecutionDetails(${execution.id})\" title=\"View Details\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255122",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1129,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "`<button class=\"btn btn-outline-warning\" onclick=\"cancelExecution(${execution.id})\" title=\"Cancel\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255125",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1149,
      "severity": "LOW",
      "message": "Line too long (153 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const statusBadge = `<span class=\"execution-status-badge status-${execution.status}\">${execution.status.replace('_', ' ').toUpperCase()}</span>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255128",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1156,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<input type=\"checkbox\" class=\"execution-checkbox me-2\" value=\"${execution.id}\" onchange=\"toggleExecutionSelection(${execution.id})\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255131",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1176,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-fill bg-${getProgressColor(execution.status)}\" style=\"width: ${progress}%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255134",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1182,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"me-3\"><i class=\"bi bi-clock\"></i> ${new Date(execution.created_at).toLocaleDateString()}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255143",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1405,
      "severity": "LOW",
      "message": "Line too long (193 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Status:</strong></td><td><span class=\"execution-status-badge status-${execution.status}\">${execution.status.replace('_', ' ').toUpperCase()}</span></td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255145",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1406,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Current Level:</strong></td><td>Level ${execution.current_escalation_level + 1}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255148",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1407,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Actions Executed:</strong></td><td>${execution.total_actions_executed || 0}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255150",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1414,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Created:</strong></td><td>${new Date(execution.created_at).toLocaleString()}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255153",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1415,
      "severity": "LOW",
      "message": "Line too long (161 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Scheduled:</strong></td><td>${execution.scheduled_for ? new Date(execution.scheduled_for).toLocaleString() : 'N/A'}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255155",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1416,
      "severity": "LOW",
      "message": "Line too long (161 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Started:</strong></td><td>${execution.started_at ? new Date(execution.started_at).toLocaleString() : 'Not started'}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255157",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1417,
      "severity": "LOW",
      "message": "Line too long (169 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr><td><strong>Completed:</strong></td><td>${execution.completed_at ? new Date(execution.completed_at).toLocaleString() : 'Not completed'}</td></tr>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1444,
      "severity": "LOW",
      "message": "Line too long (160 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"badge bg-${log.status === 'success' ? 'success' : log.status === 'failed' ? 'danger' : 'warning'}\">${log.status}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255163",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1449,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${log.result ? `<div class=\"small mt-1\"><code>${JSON.stringify(log.result, null, 2)}</code></div>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.255168",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1534,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if (!confirm(`Are you sure you want to delete ${selectedExecutions.size} selected executions? This action cannot be undone.`)) {"
    },
    {
      "timestamp": "2025-09-21T07:59:51.259584",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/escalation_executions.html",
      "line": 1261,
      "severity": "HIGH",
      "message": "JavaScript dom xss",
      "details": "Pattern: innerHTML\\s*=\\s*[^;]*\\+",
      "code_snippet": "nextItem.innerHTML = `<a class=\"page-link\" href=\"#\" onclick=\"changePage(${pagination.page + 1})\">Next</a>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.292710",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 2180,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`Toast (${type}): ${message}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306319",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 328,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "background: linear-gradient(90deg, rgba(255, 255, 255, 0.1) 25%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.1) 75%);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306332",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 541,
      "severity": "LOW",
      "message": "Line too long (194 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"nav-link active\" id=\"overview-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#overview-panel\" type=\"button\" role=\"tab\" aria-controls=\"overview-panel\" aria-selected=\"true\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306336",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 544,
      "severity": "LOW",
      "message": "Line too long (197 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"nav-link\" id=\"performance-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#performance-panel\" type=\"button\" role=\"tab\" aria-controls=\"performance-panel\" aria-selected=\"false\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306343",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 547,
      "severity": "LOW",
      "message": "Line too long (185 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"nav-link\" id=\"devices-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#devices-panel\" type=\"button\" role=\"tab\" aria-controls=\"devices-panel\" aria-selected=\"false\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306345",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 550,
      "severity": "LOW",
      "message": "Line too long (191 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"nav-link\" id=\"bandwidth-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#bandwidth-panel\" type=\"button\" role=\"tab\" aria-controls=\"bandwidth-panel\" aria-selected=\"false\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306349",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 570,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div id=\"health-score-circle\" class=\"rounded-circle d-flex align-items-center justify-content-center\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.306351",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 580,
      "severity": "LOW",
      "message": "Line too long (190 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div id=\"health-score-description\" class=\"visually-hidden\">Network health score out of 100, calculated from device uptime, response times, and network stability</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306355",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 626,
      "severity": "LOW",
      "message": "Line too long (164 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-link p-0 ms-1\" data-bs-toggle=\"tooltip\" title=\"AI-powered recommendations based on your network performance data\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306359",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 653,
      "severity": "LOW",
      "message": "Line too long (182 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-link p-0 ms-1\" data-bs-toggle=\"tooltip\" title=\"Test your internet connection speed and get recommendations for optimal performance\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306361",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 661,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn-modern btn-danger\" id=\"cancel-speedtest-btn\" style=\"display: none;\" title=\"Cancel speed test\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306365",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 700,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-bar progress-bar-striped progress-bar-animated\" style=\"width: 0%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306368",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 712,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-outline-secondary\" id=\"refresh-rating-btn\" title=\"Refresh overall rating\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306373",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 782,
      "severity": "LOW",
      "message": "Line too long (199 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-link p-0 ms-1\" data-bs-toggle=\"tooltip\" title=\"Shows your most reliable devices and fastest performers based on uptime and response time statistics\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306375",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 786,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-outline-secondary\" data-bs-toggle=\"collapse\" data-bs-target=\"#device-insights\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306379",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 830,
      "severity": "LOW",
      "message": "Line too long (212 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-link p-0 ms-1\" data-bs-toggle=\"tooltip\" title=\"Analyze your network's activity patterns throughout the day to optimize performance and identify peak usage times\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306381",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 834,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-outline-secondary\" data-bs-toggle=\"collapse\" data-bs-target=\"#usage-patterns\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306386",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 912,
      "severity": "LOW",
      "message": "Line too long (150 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<canvas id=\"trends-chart\" aria-label=\"Network performance trends chart showing response time and success rate over time\"></canvas>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306389",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 931,
      "severity": "LOW",
      "message": "Line too long (184 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-sm btn-link p-0 ms-1\" data-bs-toggle=\"tooltip\" title=\"Monitor which devices are using the most bandwidth and track usage patterns over time\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306404",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1315,
      "severity": "LOW",
      "message": "Line too long (154 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description: `Your network health score is ${Math.round(healthScore)}. Consider checking device connectivity and network infrastructure.`,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306406",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1325,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description: `Success rate is ${metrics.success_rate}%. Some devices may have intermittent connectivity problems.`,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306409",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1335,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description: `Average response time is ${metrics.avg_response_time}ms. Your network may be experiencing congestion.`,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306412",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1345,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description: `You have ${metrics.active_alerts} active alert${metrics.active_alerts > 1 ? 's' : ''} requiring attention.`,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306415",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1356,
      "severity": "LOW",
      "message": "Line too long (139 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description: `Your network is performing excellently with a ${Math.round(healthScore)} health score and no active issues.`,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306421",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1470,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "reliabilityTrend.textContent = trendIcons[data.analysis.reliability_trend] || data.analysis.reliability_trend;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306431",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1737,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "speedRecommendations.innerHTML = '<div class=\"small text-muted\">Run a speed test to see recommendations</div>';"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306440",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 1944,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "element.innerHTML = `<span class=\"badge\" style=\"background-color: ${ratingData.color}\">${ratingData.rating.toUpperCase()}</span>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.306449",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics.html",
      "line": 2159,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "container.innerHTML = '<div class=\"text-center py-3 text-muted\">Bandwidth monitoring data will appear here once available</div>';"
    },
    {
      "timestamp": "2025-09-21T07:59:51.346515",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 994,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\ude80 Initializing Performance Dashboard');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.346550",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1015,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\u2705 Performance Dashboard initialized');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.346844",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1433,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Performance metrics update:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.346881",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1479,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd04 Refreshing all performance data');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347111",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1794,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udcca Loading health score heatmap');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347210",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1919,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udcca Loading component scores');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347252",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1974,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd0d Device drill-down for:', device.device_name);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347374",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2118,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83c\udfaf Performance Dashboard Features:');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347378",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2119,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udcca Real-time health score monitoring');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347383",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2120,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83c\udfc6 Top performers analysis');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347387",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2121,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udcc8 Interactive performance charts');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347391",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2122,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd0d Device drill-down capabilities');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347396",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2123,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\u26a1 Live metric collection');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347400",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2124,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udcc9 Health trend visualization');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.347403",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2125,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\u23f1\ufe0f Response time distribution');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.354274",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1641,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "healthData.push(85 + Math.random() * 10 + Math.sin(i / 4) * 3);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360811",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 563,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item time-range-option active\" href=\"#\" data-hours=\"24\">Last 24 Hours</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 694,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item top-performers-metric\" href=\"#\" data-metric=\"health_score\">Health Score</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 695,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item top-performers-metric\" href=\"#\" data-metric=\"responsiveness\">Responsiveness</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360826",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 696,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item top-performers-metric\" href=\"#\" data-metric=\"reliability\">Reliability</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 727,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-light dropdown-toggle\" data-bs-toggle=\"dropdown\" title=\"View Options\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360832",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 731,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"setHeatmapGrouping('type')\">Group by Device Type</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360835",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 732,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"setHeatmapGrouping('score')\">Group by Score Range</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360840",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 797,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-bar\" id=\"responsiveness-bar\" role=\"progressbar\" style=\"width: 0%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360844",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 869,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item device-type-filter\" href=\"#\" data-type=\"computer\">Computers</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360847",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 871,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item device-type-filter\" href=\"#\" data-type=\"iot\">IoT Devices</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360854",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 874,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item performance-status-filter\" href=\"#\" data-status=\"\">All Statuses</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360857",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 875,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item performance-status-filter\" href=\"#\" data-status=\"excellent\">Excellent</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360859",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 876,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item performance-status-filter\" href=\"#\" data-status=\"good\">Good</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 877,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item performance-status-filter\" href=\"#\" data-status=\"fair\">Fair</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360865",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 878,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item performance-status-filter\" href=\"#\" data-status=\"poor\">Poor</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360867",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 886,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item sort-option\" href=\"#\" data-sort=\"health_score\" data-order=\"desc\">Health Score (High to Low)</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360870",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 887,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item sort-option\" href=\"#\" data-sort=\"health_score\" data-order=\"asc\">Health Score (Low to High)</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360872",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 888,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item sort-option\" href=\"#\" data-sort=\"name\" data-order=\"asc\">Name (A to Z)</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360874",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 889,
      "severity": "LOW",
      "message": "Line too long (158 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item sort-option\" href=\"#\" data-sort=\"response_time\" data-order=\"asc\">Response Time (Fast to Slow)</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360891",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 890,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item sort-option\" href=\"#\" data-sort=\"uptime\" data-order=\"desc\">Uptime (High to Low)</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360904",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1200,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "enhanceChartAccessibility(healthDistributionChart, 'Health score distribution showing performance levels across all devices');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360923",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1785,
      "severity": "LOW",
      "message": "Line too long (151 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "enhanceChartAccessibility(responseDistributionChart, 'Response time distribution showing device counts across different response time ranges');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360929",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1892,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "cell.title = `${device.device_name}\\nIP: ${device.device_ip}\\nHealth Score: ${healthScore.toFixed(1)}\\nGrade: ${grade}\\nClick for details`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360935",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1978,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal fade\" id=\"devicePerformanceModal\" tabindex=\"-1\" aria-labelledby=\"devicePerformanceModalLabel\" aria-hidden=\"true\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360938",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2000,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"badge bg-secondary\">${device.device_type || 'Unknown'}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360941",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2004,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"badge ${getStatusClass(device.device_status)}\">${device.device_status}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360943",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2008,
      "severity": "LOW",
      "message": "Line too long (222 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"badge ${getGradeBadgeClass(getPerformanceGrade(device.performance_metrics.health_score))}\">${getPerformanceGrade(device.performance_metrics.health_score)}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360946",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2023,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span><i class=\"bi bi-speedometer2\"></i> Overall Health</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360949",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2024,
      "severity": "LOW",
      "message": "Line too long (158 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong class=\"text-primary\">${(device.performance_metrics.health_score || 0).toFixed(1)}</strong>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360952",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2027,
      "severity": "LOW",
      "message": "Line too long (154 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-bar ${getHealthScoreColorClass(device.performance_metrics.health_score)}\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.360954",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2028,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "style=\"width: ${device.performance_metrics.health_score || 0}%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360957",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2035,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span><i class=\"bi bi-lightning-charge\"></i> Responsiveness</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360960",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2036,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong>${(device.performance_metrics.responsiveness_score || 0).toFixed(1)}</strong>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360962",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2039,
      "severity": "LOW",
      "message": "Line too long (162 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-bar ${getHealthScoreColorClass(device.performance_metrics.responsiveness_score)}\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.360964",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2040,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "style=\"width: ${device.performance_metrics.responsiveness_score || 0}%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360967",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2048,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong>${(device.performance_metrics.reliability_score || 0).toFixed(1)}</strong>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360970",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2051,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-bar ${getHealthScoreColorClass(device.performance_metrics.reliability_score)}\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.360972",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2052,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "style=\"width: ${device.performance_metrics.reliability_score || 0}%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360975",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2060,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong>${(device.performance_metrics.efficiency_score || 0).toFixed(1)}</strong>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360978",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2063,
      "severity": "LOW",
      "message": "Line too long (158 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-bar ${getHealthScoreColorClass(device.performance_metrics.efficiency_score)}\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.360981",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2064,
      "severity": "LOW",
      "message": "Line too long (139 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "style=\"width: ${device.performance_metrics.efficiency_score || 0}%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360984",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2076,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-primary\" onclick=\"openDeviceDetailPage(${device.device_id})\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.360986",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 2079,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn btn-success\" onclick=\"triggerDeviceMetricsCollection(${device.device_id})\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.372267",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance_dashboard.html",
      "line": 1641,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "healthData.push(85 + Math.random() * 10 + Math.sin(i / 4) * 3);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.412783",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1232,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('CSRF Token from meta:', document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content'));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.412803",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1233,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('CSRF Token from cookie:', document.cookie.split('; ').find(row => row.startsWith('csrf_token=')));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.412808",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1234,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Final CSRF Token:', getCSRFToken());"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432504",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 307,
      "severity": "LOW",
      "message": "Line too long (176 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Monitor your network for security vulnerabilities, open ports, and suspicious activity. Regular scanning helps identify potential security risks.\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432511",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 319,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Start a comprehensive network scan to check all devices for open ports, services, and potential security risks\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432517",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 406,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "The security scanner is checking each device on your network for open ports and running services."
    },
    {
      "timestamp": "2025-09-21T07:59:51.432521",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 459,
      "severity": "LOW",
      "message": "Line too long (219 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Overall network security health based on recent scans and alerts. Secure = no critical issues, At Risk = security concerns found, Critical = immediate attention needed\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432525",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 478,
      "severity": "LOW",
      "message": "Line too long (188 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Number of network devices that have been security scanned in the selected time period. Regular scanning helps maintain network security.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432528",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 497,
      "severity": "LOW",
      "message": "Line too long (211 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Network ports that are accepting connections. Each open port represents a service that could be a potential entry point. Not all open ports are security risks.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432532",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 516,
      "severity": "LOW",
      "message": "Line too long (199 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Devices with security concerns that need attention. High risk typically means vulnerable services, suspicious ports, or outdated software detected.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432535",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 537,
      "severity": "LOW",
      "message": "Line too long (198 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Breakdown of security alerts by category: New Service (newly discovered services), Suspicious Port (risky open ports), Vulnerability (security weaknesses)\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432538",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 551,
      "severity": "LOW",
      "message": "Line too long (184 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Distribution of security issues by severity: Critical (immediate action required), High (review soon), Medium (monitor), Low (informational)\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432541",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 569,
      "severity": "LOW",
      "message": "Line too long (191 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Security status of all monitored devices including open ports, risk scores, and detected services. Use the scan button to check individual devices.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432544",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 598,
      "severity": "LOW",
      "message": "Line too long (209 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Security alerts generated by network scans. Review each alert to understand potential risks and take appropriate action. Acknowledging alerts marks them as reviewed.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432547",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 602,
      "severity": "LOW",
      "message": "Line too long (149 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Mark all security alerts as acknowledged. Use this when you've reviewed all alerts and understand the risks.\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432550",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 627,
      "severity": "LOW",
      "message": "Line too long (199 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"AI-generated security recommendations based on your network's current state and detected issues. Follow these suggestions to improve your security posture.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432553",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 647,
      "severity": "LOW",
      "message": "Line too long (208 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Configure security scan parameters. More frequent scans provide better monitoring but use more system resources. Higher port counts give more comprehensive results.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 657,
      "severity": "LOW",
      "message": "Line too long (188 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"How often to automatically scan the network. 24 hours is recommended for most home networks. More frequent scanning uses more resources.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 665,
      "severity": "LOW",
      "message": "Line too long (189 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Number of most common ports to check. Top 1000 provides good coverage for most threats. Higher numbers take longer but are more thorough.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432562",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 679,
      "severity": "LOW",
      "message": "Line too long (191 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Identify what services are running on open ports (e.g., web server, SSH). Provides more detailed security information but takes longer.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432564",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 689,
      "severity": "LOW",
      "message": "Line too long (199 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "data-bs-title=\"Detect software versions of running services. Helps identify outdated software with known vulnerabilities. Recommended for security monitoring.\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432581",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1180,
      "severity": "LOW",
      "message": "Line too long (148 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "toastEl.className = `toast align-items-center text-bg-${type === 'error' ? 'danger' : type === 'success' ? 'success' : 'primary'} border-0`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432585",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1232,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "console.log('CSRF Token from meta:', document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content'));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1279,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const newTooltips = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]:not([data-bs-original-title])'));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432592",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1305,
      "severity": "LOW",
      "message": "Line too long (160 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "button.setAttribute('data-bs-title', `Security scan in progress (${progress.progress}% complete). Started ${progress.duration_formatted} ago.`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432596",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1348,
      "severity": "LOW",
      "message": "Line too long (175 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "button.setAttribute('data-bs-title', 'Start a comprehensive network scan to check all devices for open ports, services, and potential security risks');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432599",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1378,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if (devicesProgressEl) devicesProgressEl.textContent = `${progress.devices_completed}/${progress.total_devices}`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432602",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1384,
      "severity": "LOW",
      "message": "Line too long (232 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "detailsText.textContent = `Scanned ${progress.devices_completed} of ${progress.total_devices} devices \u2022 Found ${progress.open_ports_found} open ports \u2022 Generated ${progress.alerts_generated} security "
    },
    {
      "timestamp": "2025-09-21T07:59:51.432606",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1389,
      "severity": "LOW",
      "message": "Line too long (164 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "button.setAttribute('data-bs-title', `Security scan in progress (${progress.progress}% complete). Started ${progress.duration_formatted} ago.`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432610",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1453,
      "severity": "LOW",
      "message": "Line too long (171 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "`<div class=\"risk-indicator ${totalAlerts >= 5 ? 'risk-critical' : totalAlerts >= 3 ? 'risk-high' : 'risk-medium'}\" style=\"font-size: 0.6rem;\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432613",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1467,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"risk-indicator ${highRiskDevices > 0 ? 'risk-critical' : 'risk-low'}\" style=\"font-size: 0.6rem;\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432615",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1472,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${highRiskDevices === 0 ? 'all devices secure' : (highRiskDevices === 1 ? 'device' : 'devices') + ' need attention'}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432622",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1626,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if (deviceProgressEl) deviceProgressEl.style.width = progress.current_device_progress + '%';"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432625",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1633,
      "severity": "LOW",
      "message": "Line too long (237 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "explanationText.textContent = `Currently checking ${progress.current_device} for open network ports. The scanner tests the most common ports to identify running services and potential security risks.`"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432628",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1647,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if (devicesProgressEl2) devicesProgressEl2.textContent = `${progress.devices_completed}/${progress.total_devices}`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432631",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1654,
      "severity": "LOW",
      "message": "Line too long (236 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "detailsText.textContent = `Scanned ${progress.devices_completed} of ${progress.total_devices} devices \u2022 Found ${progress.open_ports_found} open ports \u2022 Generated ${progress.alerts_generated} security "
    },
    {
      "timestamp": "2025-09-21T07:59:51.432649",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1672,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "document.getElementById('devices-progress').textContent = `${progress.total_devices}/${progress.total_devices}`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432653",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1685,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Analyzed ${progress.total_devices} devices, checked ${progress.total_ports_scanned} ports,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432655",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1686,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "found ${progress.open_ports_found} open services, and identified ${progress.alerts_generated} security concerns."
    },
    {
      "timestamp": "2025-09-21T07:59:51.432658",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1687,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${progress.duration_formatted ? ` Completed in ${progress.duration_formatted}.` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432661",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1697,
      "severity": "LOW",
      "message": "Line too long (198 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'The security scan has analyzed your entire network and identified any potential security issues. Review the alerts above to understand and address any risks found.';"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432664",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1728,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const errorMessage = progress.error_message || 'An unexpected error occurred during the security scan.';"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432667",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1736,
      "severity": "LOW",
      "message": "Line too long (153 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Try running the scan again. If the problem persists, check your network connectivity and scanner permissions."
    },
    {
      "timestamp": "2025-09-21T07:59:51.432669",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1745,
      "severity": "LOW",
      "message": "Line too long (211 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "explanationTextEl.textContent = 'The security scan encountered an error and could not complete. This may be due to network connectivity issues or scanner configuration problems.';"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1821,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "explanation = `${criticalIssues} critical security issue${criticalIssues > 1 ? 's' : ''} need immediate attention`;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1853,
      "severity": "LOW",
      "message": "Line too long (174 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "title: `Security Status: ${statusText}. ${explanation}. ${totalIssues > 0 ? 'Review the alerts below for details.' : 'Keep monitoring to maintain security.'}`"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432682",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 1948,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-primary btn-sm mt-2\" onclick=\"document.getElementById('run-security-scan').click()\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432687",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2007,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<small>${device.services.slice(0, 3).join(', ')}${device.services.length > 3 ? '...' : ''}</small>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2037,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<small>Your network appears secure for the selected time period. Keep monitoring with regular scans.</small>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432694",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2070,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<tr class=\"${alert.severity === 'critical' ? 'table-danger' : alert.severity === 'high' ? 'table-warning' : ''}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432697",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2096,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${alert.risk_score ? `<div class=\"mt-1\"><small class=\"text-muted\">Risk: ${alert.risk_score}/10</small></div>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432699",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2102,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${alert.port ? `<div><code class=\"bg-light px-1 rounded\">Port ${alert.port}</code></div>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432702",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2103,
      "severity": "LOW",
      "message": "Line too long (149 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${alert.service ? `<div class=\"mt-1\"><small class=\"text-muted\">Service: ${alert.service}</small></div>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432705",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2104,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${alert.version ? `<div><small class=\"text-muted\">Version: ${alert.version}</small></div>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432708",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2110,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<small class=\"text-muted\">${new Date(alert.created_at).toLocaleDateString()}</small>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432711",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2116,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'<span class=\"badge bg-success mb-1\"><i class=\"bi bi-check-circle\"></i> Reviewed</span>' :"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432713",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2117,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "`<button class=\"btn btn-outline-success btn-sm mb-1\" onclick=\"acknowledgeAlert(${alert.id})\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.432716",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2124,
      "severity": "LOW",
      "message": "Line too long (165 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "`<button class=\"btn btn-outline-primary btn-sm\" onclick=\"showRemediationInfo('${alert.alert_type}', '${alert.severity}')\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.432721",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2222,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"d-flex align-items-start mb-3 p-2 rounded\" style=\"background-color: rgba(var(--bs-primary-rgb), 0.05);\">"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2223,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<i class=\"bi bi-${rec.icon} ${priorityColors[rec.priority]} me-3 mt-1\" style=\"font-size: 1.1rem;\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432727",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2254,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${prioritizedRecommendations.length > 0 ? `<span class=\"badge bg-primary ms-2\">${prioritizedRecommendations.length}</span>` : ''}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432729",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2256,
      "severity": "LOW",
      "message": "Line too long (147 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "${recommendations || '<div class=\"text-muted\">No specific recommendations at this time. Keep monitoring your network regularly.</div>'}"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432737",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2440,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong>Why this matters:</strong> New services can introduce vulnerabilities or provide unauthorized access points."
    },
    {
      "timestamp": "2025-09-21T07:59:51.432740",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2458,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong>Why this matters:</strong> Suspicious ports often run services that are commonly targeted by attackers."
    },
    {
      "timestamp": "2025-09-21T07:59:51.432743",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2476,
      "severity": "LOW",
      "message": "Line too long (149 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong>Why this matters:</strong> Vulnerabilities can be exploited by attackers to gain unauthorized access to your network."
    },
    {
      "timestamp": "2025-09-21T07:59:51.432748",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2550,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "showToast(`Device scan completed. Found ${data.open_ports} open ports, ${data.security_alerts} security alerts.`, 'success');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432755",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2726,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "showToast(`Successfully acknowledged ${selectedAlerts.size} alert${selectedAlerts.size > 1 ? 's' : ''}`, 'success');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432758",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2746,
      "severity": "LOW",
      "message": "Line too long (158 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if (!confirm(`Are you sure you want to acknowledge all ${unacknowledgedAlerts.length} visible alert${unacknowledgedAlerts.length > 1 ? 's' : ''}?`)) {"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2760,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "showToast(`Successfully acknowledged ${unacknowledgedAlerts.length} alert${unacknowledgedAlerts.length > 1 ? 's' : ''}`, 'success');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432764",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2782,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<h6 class=\"text-success\"><i class=\"bi bi-shield-check\"></i> Understanding Security Levels</h6>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432766",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2784,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"mb-2\"><span class=\"badge bg-success\">SECURE</span> No significant issues found</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432769",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2785,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"mb-2\"><span class=\"badge bg-warning\">MODERATE</span> Minor security concerns to monitor</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432771",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2786,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"mb-2\"><span class=\"badge bg-danger\">AT RISK</span> Security issues need attention</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432774",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2787,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"mb-2\"><span class=\"badge bg-dark\">CRITICAL</span> Immediate action required</div>"
    },
    {
      "timestamp": "2025-09-21T07:59:51.432777",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/security.html",
      "line": 2825,
      "severity": "LOW",
      "message": "Line too long (175 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<strong><i class=\"bi bi-info-circle\"></i> Remember:</strong> When in doubt, it's safer to ask for help or disable services you don't recognize."
    },
    {
      "timestamp": "2025-09-21T07:59:51.468116",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 721,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Connected to server');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468137",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 726,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Disconnected from server');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468144",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 732,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Scan started:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468152",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 738,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Scan progress:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468180",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 771,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Scan completed:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468229",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 838,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Starting loadDevices function');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468234",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 840,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Fetching from /api/devices');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468239",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 842,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Response status:', response.status);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468243",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 843,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Response headers:', response.headers.get('content-type'));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468250",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 850,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Response text (first 100 chars):', text.substring(0, 100));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468441",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 1122,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Scan already in progress, ignoring request');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468464",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 1148,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd12 CSRF Token for scan:', csrfToken ? 'PRESENT' : 'MISSING');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468473",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 1157,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\ude80 Making scan request with headers:', headers);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468607",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 1349,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[${type.toUpperCase()}] ${message}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:51.468628",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 1375,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Scan in progress detected on page load');"
    },
    {
      "timestamp": "2025-09-21T07:59:51.473681",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 1252,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "scanProgressValue += Math.random() * 2 + 0.5;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.477943",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 832,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "document.getElementById('monitor-preset-security').addEventListener('click', () => applyMonitoringPreset('security'));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.477948",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 833,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "document.getElementById('monitor-preset-essential').addEventListener('click', () => applyMonitoringPreset('essential'));"
    },
    {
      "timestamp": "2025-09-21T07:59:51.485701",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/dashboard.html",
      "line": 1252,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "scanProgressValue += Math.random() * 2 + 0.5;"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505194",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 253,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.warning(f\"Large network detected ({network.num_addresses} addresses), using range scan with post-processing exclusion\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505203",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 270,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Excluding {len(excluded_ips)} sensitive devices from nmap scan: {', '.join(excluded_ips)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505215",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 514,
      "severity": "LOW",
      "message": "Line too long (160 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self._emit_scan_progress(progress, f'Processing device {i+1}/{len(all_devices)}...', len(all_devices), len(self._new_devices_found))"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505218",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 523,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self._emit_scan_progress(95, 'Finalizing results...', len(all_devices), len(self._new_devices_found))"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505221",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 532,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self._emit_scan_progress(100, 'Scan completed successfully!', len(all_devices), len(self._new_devices_found))"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505225",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 575,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.warning(f\"IP conflict detected: {ip} is already used by device {existing_device_with_ip.id}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505228",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 592,
      "severity": "LOW",
      "message": "Line too long (150 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "(device_id, old_ip_address, new_ip_address, change_reason, changed_at, detected_by, change_detected_at, change_source)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505230",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 593,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "VALUES (:device_id, :old_ip, :new_ip, :reason, :changed_at, :detected_by, :change_detected_at, :change_source)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 616,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Updated device {device.display_name} IP: {old_ip} -> {ip} (history logging failed)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505253",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 719,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.warning(f\"Added new device without MAC: {ip} ({hostname or 'unknown'}) - may create duplicates\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505257",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 781,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "summary_message = f\"Found {new_device_count - 5} additional new devices. Check the dashboard for full details.\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.505277",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505290",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 36,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emit_scan_progress(self, progress, stage, devices_found=0, new_devices=0):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505300",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_config_value(self, key, default):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 74,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _check_config_changes(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505328",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 99,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_network_range_change(self, old_range, new_range):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505335",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 107,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_adaptive_scan_interval(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505349",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reload_config(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505355",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 138,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_arp_table(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505376",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 180,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_sensitive_device(self, device_info):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505388",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 199,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_excluded_device_ips(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505406",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_scan_targets_excluding_ips(self, network_range, excluded_ips):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505423",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 262,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def nmap_scan(self, network_range):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505455",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 324,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def resolve_hostname(self, ip):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505462",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 333,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_mac_vendor(self, mac):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505468",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 340,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def classify_device_type(self, device_info):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505521",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 447,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scan_network(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 550,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def process_discovered_device(self, device_info):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505671",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 747,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _send_scan_completion_notifications(self, total_devices):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505696",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 793,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_push_service_config(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 803,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_continuous_scan(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 836,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505727",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 842,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _trigger_rule_engine_for_new_device(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.505752",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 888,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _trigger_rule_engine_for_scan_completion(self, total_devices, new_devices):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506087",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 625,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if device and mac and not device.mac_address:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506399",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 330,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506405",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 337,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506700",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import nmap"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506707",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506709",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506712",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506715",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506718",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506721",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506724",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from manuf import manuf"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506727",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506730",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506836",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 236,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.506887",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 327,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:51.507127",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 817,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import traceback"
    },
    {
      "timestamp": "2025-09-21T07:59:51.507145",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 850,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rule_engine import TriggerContext"
    },
    {
      "timestamp": "2025-09-21T07:59:51.507159",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 873,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.507173",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 896,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rule_engine import TriggerContext"
    },
    {
      "timestamp": "2025-09-21T07:59:51.507182",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 910,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.512178",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 17,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512238",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function '_emit_scan_progress' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512301",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 51,
      "severity": "MEDIUM",
      "message": "Function 'get_config_value' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512373",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 74,
      "severity": "MEDIUM",
      "message": "Function '_check_config_changes' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512441",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 107,
      "severity": "MEDIUM",
      "message": "Function 'get_adaptive_scan_interval' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512550",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 138,
      "severity": "MEDIUM",
      "message": "Function 'get_arp_table' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512591",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 180,
      "severity": "MEDIUM",
      "message": "Function 'is_sensitive_device' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512666",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 199,
      "severity": "MEDIUM",
      "message": "Function '_get_excluded_device_ips' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512718",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 232,
      "severity": "MEDIUM",
      "message": "Function '_get_scan_targets_excluding_ips' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.512832",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 262,
      "severity": "MEDIUM",
      "message": "Function 'nmap_scan' is too long (183 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.513159",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 340,
      "severity": "MEDIUM",
      "message": "Function 'classify_device_type' is too long (504 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.513403",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 447,
      "severity": "MEDIUM",
      "message": "Function 'scan_network' is too long (404 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.513794",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 550,
      "severity": "MEDIUM",
      "message": "Function 'process_discovered_device' is too long (663 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.513893",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 747,
      "severity": "MEDIUM",
      "message": "Function '_send_scan_completion_notifications' is too long (145 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.513996",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 803,
      "severity": "MEDIUM",
      "message": "Function 'start_continuous_scan' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.514084",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 842,
      "severity": "MEDIUM",
      "message": "Function '_trigger_rule_engine_for_new_device' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.514144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/scanner.py",
      "line": 888,
      "severity": "MEDIUM",
      "message": "Function '_trigger_rule_engine_for_scan_completion' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.538503",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 103,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Ping successful for {device.ip_address} on attempt {attempt + 1}: {response_time_ms}ms\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 110,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Ping successful for {device.ip_address} on attempt {attempt + 1} (no time parsed)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538523",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 197,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self._trigger_rule_engine_for_status_change(device_obj, previous_status, current_status, response_time)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538526",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 225,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Monitored {device.ip_address}: {response_time}ms\" if response_time else f\"Monitored {device.ip_address}: NO RESPONSE\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538530",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 256,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if any(vendor_pattern in vendor for vendor_pattern in ['cisco', 'netgear', 'linksys', 'asus', 'tp-link', 'ubiquiti']):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538533",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 272,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "iot_patterns = ['ring-', 'nest-', 'chromecast', 'echo-', 'alexa', 'google-home', 'wyze', 'sonos', 'roku', 'firetv', 'samsung', 'lg-']"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538536",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 278,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "iot_vendors = ['ring', 'nest', 'wyze', 'sonos', 'roku', 'amazon', 'google', 'samsung', 'lg electronics', 'xiaomi']"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538554",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 742,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Triggered rule engine for status change: {device.display_name} {previous_status} -> {current_status}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 814,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'avg_response_time': sum(r.get('response_time', 0) for r in monitoring_results if r.get('response_time')) / max(1, successful_pings)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538566",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 946,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Batch processed {len(monitoring_records)} monitoring records and {len(device_updates)} device updates\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538584",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, socketio=None, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538596",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_config_value(self, key, default):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 44,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ping_device(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538656",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 149,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor_device(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538701",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 240,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _is_high_priority_device(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538714",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 261,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _is_low_priority_device(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538728",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 284,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_critical_device(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538737",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 296,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor_all_devices(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538802",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 398,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_data(self, aggressive=False):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538842",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 473,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_statistics(self, device_id, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538869",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 515,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_statistics(self, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538899",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 572,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538946",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 667,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538952",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 673,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def force_monitor_device(self, device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538962",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 689,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def queue_immediate_ping(self, device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538966",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 693,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _trigger_rule_engine_for_status_change(self, device, previous_status, current_status, response_time):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.538995",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 748,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emit_chart_data_updates(self, monitoring_results):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.539033",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 822,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reload_config(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.539045",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 841,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _ping_device_for_batch(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.539058",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 863,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _batch_process_monitoring_results(self, ping_results):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.539298",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 369,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if self.socketio and results and self.app:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.539621",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 41,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540072",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540076",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540079",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540082",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540085",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540090",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540094",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540097",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.iot_device_optimizer import iot_optimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540107",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.thread_pool_manager import get_monitoring_pool"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 47,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540188",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 189,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.query_cache import invalidate_device_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540205",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 219,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_throttle import websocket_throttle"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540281",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 375,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540286",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 379,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_throttle import websocket_throttle"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540325",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 455,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import PerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540387",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 582,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540409",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 622,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_retention_policy import alert_retention_policy"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540419",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 639,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_auto_resolver import alert_auto_resolver"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540428",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 651,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_throttle import websocket_throttle"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540454",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 701,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rule_engine import TriggerContext"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540474",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 733,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540487",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 756,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540574",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 936,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:51.540589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 959,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_throttle import websocket_throttle"
    },
    {
      "timestamp": "2025-09-21T07:59:51.545284",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 16,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.545579",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 44,
      "severity": "MEDIUM",
      "message": "Function 'ping_device' is too long (431 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.545734",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 149,
      "severity": "MEDIUM",
      "message": "Function 'monitor_device' is too long (240 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.545785",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 240,
      "severity": "MEDIUM",
      "message": "Function '_is_high_priority_device' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.545846",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 261,
      "severity": "MEDIUM",
      "message": "Function '_is_low_priority_device' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.545890",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 284,
      "severity": "MEDIUM",
      "message": "Function 'is_critical_device' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546100",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 296,
      "severity": "MEDIUM",
      "message": "Function 'monitor_all_devices' is too long (333 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546254",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 398,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_data' is too long (247 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546346",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 473,
      "severity": "MEDIUM",
      "message": "Function 'get_device_statistics' is too long (142 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546469",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 515,
      "severity": "MEDIUM",
      "message": "Function 'get_network_statistics' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546638",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 572,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (280 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546689",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 673,
      "severity": "MEDIUM",
      "message": "Function 'force_monitor_device' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546785",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 693,
      "severity": "MEDIUM",
      "message": "Function '_trigger_rule_engine_for_status_change' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.546960",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 748,
      "severity": "MEDIUM",
      "message": "Function '_emit_chart_data_updates' is too long (270 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.547006",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 822,
      "severity": "MEDIUM",
      "message": "Function 'reload_config' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.547045",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 841,
      "severity": "MEDIUM",
      "message": "Function '_ping_device_for_batch' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.547210",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/monitor.py",
      "line": 863,
      "severity": "MEDIUM",
      "message": "Function '_batch_process_monitoring_results' is too long (265 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.572555",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 61,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Device {device.display_name}: Not enough monitoring data ({len(monitoring_data)} < {required_failures})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572572",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 73,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Device {device.display_name}: Consecutive failures check: {consecutive_count}/{required_failures} = {result}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572577",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 108,
      "severity": "LOW",
      "message": "Line too long (301 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Alert decision for {device.display_name}: last_seen={device.last_seen < cutoff_time if device.last_seen else 'Never'}, consecutive_failures={self.has_consecutive_failures(device, consec"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572580",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 119,
      "severity": "LOW",
      "message": "Line too long (266 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Device {device.display_name}: last_seen={device.last_seen}, cutoff={cutoff_time}, consecutive_failures={self.has_consecutive_failures(device, consecutive_failures_required)}, existing_a"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572583",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 125,
      "severity": "LOW",
      "message": "Line too long (234 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message = f\"{device_type.title()} device {device.display_name} ({device.ip_address}) has been down for over {threshold_minutes} minutes with {consecutive_failures_required}+ consecutive monitoring fai"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 152,
      "severity": "LOW",
      "message": "Line too long (220 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.warning(f\"ALERT CREATED: Device down alert for {device.display_name} (threshold: {threshold_minutes}min, type: {device_type}, last_seen: {device.last_seen}, cutoff: {cutoff_time})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 154,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"ALERT SUPPRESSED: Device down alert for {device.display_name} due to correlation rules\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572593",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 208,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message=f\"Device {device.display_name} ({device.ip_address}) has high latency: {avg_latency:.0f}ms average\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.572597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 269,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message=f\"Device {device.display_name} ({device.ip_address}) is back online after being down\","
    },
    {
      "timestamp": "2025-09-21T07:59:51.572602",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 324,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"ALERT RESOLVED: Device down alert for {device.display_name} (last_seen: {device.last_seen}, recent_time: {recent_time})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 326,
      "severity": "LOW",
      "message": "Line too long (191 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Alert NOT resolved for {device.display_name}: device={device is not None}, last_seen={device.last_seen if device else None}, recent_time={recent_time}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572620",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 771,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Alert suppressed by rule '{suppression.name}': {alert_type} for device {device_id}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572624",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 823,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "alert.resolution_message = \"Auto-resolved: Recovery alerts are informational and should not remain unresolved\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.572628",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 867,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': 'Suppress performance warning alerts to reduce noise - only show critical performance issues',"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572633",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 921,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'description': 'Prevent performance alert storms - max 3 performance alerts per device per 30 minutes',"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572653",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572668",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 36,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_critical_device(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 47,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def has_consecutive_failures(self, device, required_failures=3):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572694",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 76,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_device_down_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572736",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 160,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_high_latency_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572772",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 235,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_device_recovery_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572806",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 301,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def resolve_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572835",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 358,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_email_alert(self, alert):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572863",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 407,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_webhook_alert(self, alert):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572882",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 443,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_alert_notifications(self, alert):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572894",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 463,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_push_notification(self, alert):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572923",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 521,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _send_device_recovery_push_notification(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572953",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 547,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _send_high_latency_push_notification(self, device, avg_latency):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572969",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 574,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_alerts(self, days=30):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572983",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 599,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_active_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572992",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 612,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def set_alert_pause(self, minutes):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.572997",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 617,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_alert_generation_paused(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573005",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 627,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573031",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 680,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573037",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 686,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _trigger_rule_engine_for_alert(self, alert, device, event_type, metadata=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573084",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 780,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_alert_correlation(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573092",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 792,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_duplicate_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573100",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 804,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_orphaned_recovery_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573118",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 836,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emit_alert_update(self, alert, action='created'):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573125",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 844,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_default_suppressions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573174",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 946,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reload_config(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573310",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 255,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if device and device.last_seen and device.last_seen >= recent_time:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.573345",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 321,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if device and device.last_seen and device.last_seen >= recent_time:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574122",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574125",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574128",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574132",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import smtplib"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574135",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574138",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from email.mime.text import MIMEText"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574142",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from email.mime.multipart import MIMEMultipart"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574146",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574149",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574466",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 694,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rule_engine import TriggerContext"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 719,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574495",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 744,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_correlation import AlertCorrelationService"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574507",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 763,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AlertSuppression"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574520",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 784,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_correlation import AlertCorrelationService"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574528",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 796,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_correlation import AlertCorrelationService"
    },
    {
      "timestamp": "2025-09-21T07:59:51.574556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 851,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AlertSuppression"
    },
    {
      "timestamp": "2025-09-21T07:59:51.579498",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function 'is_critical_device' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.579599",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 47,
      "severity": "MEDIUM",
      "message": "Function 'has_consecutive_failures' is too long (127 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.579801",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 76,
      "severity": "MEDIUM",
      "message": "Function 'check_device_down_alerts' is too long (326 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.579956",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 160,
      "severity": "MEDIUM",
      "message": "Function 'check_high_latency_alerts' is too long (237 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580076",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 235,
      "severity": "MEDIUM",
      "message": "Function 'check_device_recovery_alerts' is too long (186 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580214",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 301,
      "severity": "MEDIUM",
      "message": "Function 'resolve_alerts' is too long (218 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580339",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 358,
      "severity": "MEDIUM",
      "message": "Function 'send_email_alert' is too long (204 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580415",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 407,
      "severity": "MEDIUM",
      "message": "Function 'send_webhook_alert' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580462",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 443,
      "severity": "MEDIUM",
      "message": "Function 'send_alert_notifications' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580561",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 463,
      "severity": "MEDIUM",
      "message": "Function 'send_push_notification' is too long (164 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580622",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 521,
      "severity": "MEDIUM",
      "message": "Function '_send_device_recovery_push_notification' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580685",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 547,
      "severity": "MEDIUM",
      "message": "Function '_send_high_latency_push_notification' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580745",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 574,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_alerts' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580899",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 627,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.580993",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 686,
      "severity": "MEDIUM",
      "message": "Function '_trigger_rule_engine_for_alert' is too long (127 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.581044",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 734,
      "severity": "MEDIUM",
      "message": "Function '_should_create_alert' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.581096",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 756,
      "severity": "MEDIUM",
      "message": "Function '_is_alert_suppressed' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.581213",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 804,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_orphaned_recovery_alerts' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.581358",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 844,
      "severity": "MEDIUM",
      "message": "Function 'setup_default_suppressions' is too long (210 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.581409",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/alerts.py",
      "line": 946,
      "severity": "MEDIUM",
      "message": "Function 'reload_config' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.592440",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592459",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_config_value(self, key, default):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592467",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_interfaces(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592480",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 53,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_interface_stats(self, interface):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592498",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 85,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def calculate_bandwidth(self, current_stats, previous_stats):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 117,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_arp_device_map(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 142,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def estimate_device_bandwidth(self, total_bandwidth, devices):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592552",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 178,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor_bandwidth(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 249,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 262,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592606",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_summary(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592625",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 308,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reload_config(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 28,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592953",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592957",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592960",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592963",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592966",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.592970",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:51.593047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 163,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import random"
    },
    {
      "timestamp": "2025-09-21T07:59:51.594644",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 31,
      "severity": "MEDIUM",
      "message": "Function 'get_network_interfaces' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.594728",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 53,
      "severity": "MEDIUM",
      "message": "Function 'get_interface_stats' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.594804",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 85,
      "severity": "MEDIUM",
      "message": "Function 'calculate_bandwidth' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.594869",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function 'get_arp_device_map' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.594941",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 142,
      "severity": "MEDIUM",
      "message": "Function 'estimate_device_bandwidth' is too long (108 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.595078",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 178,
      "severity": "MEDIUM",
      "message": "Function 'monitor_bandwidth' is too long (221 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.595198",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/bandwidth_monitor.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Function 'get_network_summary' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.601062",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 68,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Applied {device_type} optimizations for {device.display_name}: timeout={settings['timeout']}s, interval={settings['interval']}s\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.601091",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.601133",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 111,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def re_evaluate_settings(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.601402",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.601405",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.601410",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:51.602650",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 39,
      "severity": "MEDIUM",
      "message": "Function 'identify_device_type' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.602749",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 54,
      "severity": "MEDIUM",
      "message": "Function 'get_optimized_settings' is too long (149 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.602805",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 92,
      "severity": "MEDIUM",
      "message": "Function 'record_ping_result' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.602930",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 111,
      "severity": "MEDIUM",
      "message": "Function 're_evaluate_settings' is too long (194 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.602987",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 154,
      "severity": "MEDIUM",
      "message": "Function 'should_skip_monitoring' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.603046",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 174,
      "severity": "MEDIUM",
      "message": "Function 'get_device_stats' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.603097",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/monitoring/iot_device_optimizer.py",
      "line": 197,
      "severity": "MEDIUM",
      "message": "Function 'export_optimization_report' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.612437",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 43,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_default_tracking_rules(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612460",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 75,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def before_request(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612468",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 85,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def after_request(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612480",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 105,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_request_usage(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612497",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 136,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_api_call(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612535",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_request(self, exception=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612545",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 218,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612557",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 237,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612567",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 255,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 273,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612591",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 292,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612604",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 312,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612621",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 340,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __enter__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612626",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 344,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __exit__(self, exc_type, exc_val, exc_tb):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612637",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 361,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612647",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 375,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def flush(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 390,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __enter__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612661",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 393,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __exit__(self, exc_type, exc_val, exc_tb):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612668",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 401,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_device_monitoring():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.612679",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 416,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_user_creation():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613109",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613113",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613122",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613126",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from threading import Lock"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613129",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613132",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tenant_models import UsageMetricType"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613135",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tenant_manager import get_current_tenant"
    },
    {
      "timestamp": "2025-09-21T07:59:51.613219",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 186,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:51.615087",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 213,
      "severity": "MEDIUM",
      "message": "Function 'track_usage' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.615164",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 252,
      "severity": "MEDIUM",
      "message": "Function 'track_api_usage' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.615237",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 288,
      "severity": "MEDIUM",
      "message": "Function 'track_storage_usage' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.615276",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 308,
      "severity": "MEDIUM",
      "message": "Function 'track_bandwidth_usage' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.615481",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 85,
      "severity": "MEDIUM",
      "message": "Function 'after_request' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.615550",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 105,
      "severity": "MEDIUM",
      "message": "Function 'track_request_usage' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.615620",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 150,
      "severity": "MEDIUM",
      "message": "Function 'matches_rule' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.615756",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/middleware/usage_tracking.py",
      "line": 216,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.625253",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 67,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "return hashlib.md5(key_str.encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.625811",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 67,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "return hashlib.md5(key_str.encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def touch(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626407",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 216,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626427",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 249,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626477",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 339,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_cache_cleanup():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626482",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 343,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_worker():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626880",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626884",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pickle"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626887",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626890",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626893",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626896",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626900",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from threading import Lock"
    },
    {
      "timestamp": "2025-09-21T07:59:51.626903",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import weakref"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627025",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_metrics_service import DeviceMetricsService"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627028",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 276,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627035",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 284,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_metrics_service import DeviceMetricsService"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627038",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 285,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627044",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 293,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_metrics_service import DeviceMetricsService"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 294,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627061",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 319,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627067",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 325,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:51.627077",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 341,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.628977",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 205,
      "severity": "MEDIUM",
      "message": "Function 'cached' is too long (147 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629124",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 354,
      "severity": "MEDIUM",
      "message": "Function 'get_cache_health' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629303",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 69,
      "severity": "MEDIUM",
      "message": "Function 'get' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629353",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 90,
      "severity": "MEDIUM",
      "message": "Function 'set' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629464",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 129,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_expired' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629504",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 145,
      "severity": "MEDIUM",
      "message": "Function 'get_stats' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629610",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 189,
      "severity": "MEDIUM",
      "message": "Function 'invalidate_query_pattern' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629690",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 214,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.629915",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 323,
      "severity": "MEDIUM",
      "message": "Function 'get_device_alerts' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.630078",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/cache_layer.py",
      "line": 216,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.636511",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __post_init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636545",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 85,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def service_wrapper():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636590",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 173,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_shutdown(self, signum, frame):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636872",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636876",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636880",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636883",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636886",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import signal"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636889",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636985",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 209,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.scanner import NetworkScanner"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636988",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 210,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.monitor import DeviceMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636991",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 211,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.alerts import AlertManager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.636994",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 212,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.bandwidth_monitor import BandwidthMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:51.638146",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 38,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.638204",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 50,
      "severity": "MEDIUM",
      "message": "Function 'register_service' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.638304",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 68,
      "severity": "MEDIUM",
      "message": "Function 'start_service' is too long (152 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.638367",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 107,
      "severity": "MEDIUM",
      "message": "Function 'stop_service' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.638545",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 179,
      "severity": "MEDIUM",
      "message": "Function 'health_check' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.638609",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 204,
      "severity": "MEDIUM",
      "message": "Function 'create_default' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.638841",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/service_manager.py",
      "line": 85,
      "severity": "MEDIUM",
      "message": "Function 'service_wrapper' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.645451",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 72,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: Processing scan request\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645462",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 73,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Method: {request.method}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645468",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 74,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Path: {request.path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645472",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 75,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Endpoint: {request.endpoint}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645476",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 76,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Headers: {dict(request.headers)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645480",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 77,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Content-Type: {request.content_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645484",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 78,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Content-Length: {request.content_length}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645488",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 79,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Has JSON: {request.is_json}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645494",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 83,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: Processing alerts request\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645497",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 84,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Method: {request.method}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645501",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 85,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Path: {request.path}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645505",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 86,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Endpoint: {request.endpoint}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645509",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 87,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Query args: {dict(request.args)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645513",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 88,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d Headers: {dict(request.headers)}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645517",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 89,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d User agent: {request.headers.get('User-Agent', 'None')}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645525",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 95,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: FAILED - Invalid host header: {request.host}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645534",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 102,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: Checking content type: {content_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645538",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 103,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: Is safe content type: {self._is_safe_content_type(content_type) if content_type else 'No content type'}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645545",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 107,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: FAILED - Unsafe content type: {content_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645550",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 109,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: FAILED - Unsafe content type: {content_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645558",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 115,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: Checking CSRF token...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645564",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 119,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: FAILED - CSRF token validation failed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645569",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 121,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: FAILED - CSRF token validation failed\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645574",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 124,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: CSRF token validation PASSED\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645581",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 129,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: Running input validation...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645585",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 131,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: Running input validation...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645591",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 135,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: FAILED - Input validation error: {validation_error}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645597",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 137,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: FAILED - Input validation error: {validation_error}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645602",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 140,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: Input validation PASSED\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645608",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 143,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: All security checks PASSED\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645613",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 145,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: All security checks PASSED\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645692",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 258,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: Checking query param '{key}' = '{value}'\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645699",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 262,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: MALICIOUS PATTERN in query param '{key}' = '{value}'\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645709",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 271,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: Checking form field '{key}' = '{value}'\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645716",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 275,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: MALICIOUS PATTERN in form field '{key}' = '{value}'\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645726",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 282,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: Checking JSON data...\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645736",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 290,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: MALICIOUS PATTERN in JSON: {validation_error}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645742",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 293,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: JSON content type but no JSON data (e.g., DELETE request) - skipping validation\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645747",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 296,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: Input validation completed - no issues found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.645800",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 370,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: MATCHED {category} PATTERN: '{pattern}' in value: '{value}'\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649086",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 42,
      "severity": "LOW",
      "message": "Line too long (299 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'content_security_policy': \"default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdn.socket.io; style-src 'self' 'unsafe-inline' https://cdn.jsde"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649093",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 103,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "print(f\"\ud83d\udd0d SCAN DEBUG: Is safe content type: {self._is_safe_content_type(content_type) if content_type else 'No content type'}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649097",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 151,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "response.headers['Strict-Transport-Security'] = f\"max-age={self.config['strict_transport_security_max_age']}; includeSubDomains\""
    },
    {
      "timestamp": "2025-09-21T07:59:51.649104",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 293,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "print(f\"\ud83d\udd0d SECURITY DEBUG: JSON content type but no JSON data (e.g., DELETE request) - skipping validation\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649148",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 67,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _before_request(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649188",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 147,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _after_request(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649220",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 210,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_expired_tokens(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649311",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 398,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_bad_request(self, error):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649316",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 403,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_payload_too_large(self, error):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649781",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649784",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649787",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649790",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649794",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from werkzeug.exceptions import BadRequest"
    },
    {
      "timestamp": "2025-09-21T07:59:51.649797",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.652070",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 16,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652117",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 48,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652369",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 67,
      "severity": "MEDIUM",
      "message": "Function '_before_request' is too long (426 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652429",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 147,
      "severity": "MEDIUM",
      "message": "Function '_after_request' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652493",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 193,
      "severity": "MEDIUM",
      "message": "Function '_generate_csrf_token' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652572",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 218,
      "severity": "MEDIUM",
      "message": "Function '_verify_csrf_token' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652697",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 249,
      "severity": "MEDIUM",
      "message": "Function '_validate_input' is too long (212 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652733",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 299,
      "severity": "MEDIUM",
      "message": "Function '_contains_malicious_pattern' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652780",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 334,
      "severity": "MEDIUM",
      "message": "Function '_debug_malicious_pattern' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652838",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 373,
      "severity": "MEDIUM",
      "message": "Function '_validate_json_data' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.652953",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/security_middleware.py",
      "line": 425,
      "severity": "MEDIUM",
      "message": "Function 'sanitize_filename' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.660496",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def set_sqlite_pragma(dbapi_conn, connection_record):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660513",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 147,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def before_cursor_execute(conn, cursor, statement, parameters, context, executemany):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660519",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 152,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def after_cursor_execute(conn, cursor, statement, parameters, context, executemany):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660853",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660856",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660861",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.engine import Engine"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660864",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Flask"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660867",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_sqlalchemy import SQLAlchemy"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660870",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660970",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 225,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import text"
    },
    {
      "timestamp": "2025-09-21T07:59:51.660980",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 241,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import text"
    },
    {
      "timestamp": "2025-09-21T07:59:51.662252",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 58,
      "severity": "MEDIUM",
      "message": "Function 'configure_app' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.662433",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 126,
      "severity": "MEDIUM",
      "message": "Function 'register_event_listeners' is too long (144 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.662501",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 174,
      "severity": "MEDIUM",
      "message": "Function 'get_pool_status' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.662564",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 194,
      "severity": "MEDIUM",
      "message": "Function 'check_health' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.662612",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 222,
      "severity": "MEDIUM",
      "message": "Function 'vacuum_database' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.662666",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'analyze_database' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.662727",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 259,
      "severity": "MEDIUM",
      "message": "Function 'optimize_tables' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.662805",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_config.py",
      "line": 130,
      "severity": "MEDIUM",
      "message": "Function 'set_sqlite_pragma' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.670413",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 36,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __post_init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670435",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 60,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _start_monitor(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670440",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 62,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitor():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670449",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 74,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _check_thread_health(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670484",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 139,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def thread_wrapper():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670564",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_shutdown(self, signum, frame):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670896",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670900",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670903",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670907",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670910",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670914",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import signal"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670916",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:51.670984",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 148,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import inspect"
    },
    {
      "timestamp": "2025-09-21T07:59:51.672695",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 44,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.672742",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 60,
      "severity": "MEDIUM",
      "message": "Function '_start_monitor' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.672795",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 74,
      "severity": "MEDIUM",
      "message": "Function '_check_thread_health' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.672865",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 89,
      "severity": "MEDIUM",
      "message": "Function 'register_thread' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.672904",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function 'start_thread' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.673020",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 132,
      "severity": "MEDIUM",
      "message": "Function '_start_thread_internal' is too long (175 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.673101",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 181,
      "severity": "MEDIUM",
      "message": "Function 'stop_thread' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.673235",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 237,
      "severity": "MEDIUM",
      "message": "Function 'get_all_statuses' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.673278",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 252,
      "severity": "MEDIUM",
      "message": "Function 'remove_thread' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.673324",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 267,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_stopped_threads' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.673442",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 304,
      "severity": "MEDIUM",
      "message": "Function 'get_metrics' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.673677",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/thread_manager.py",
      "line": 139,
      "severity": "MEDIUM",
      "message": "Function 'thread_wrapper' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.683059",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 219,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _before_request(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683072",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 223,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _after_request(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683130",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 334,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_error_stats(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683141",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 350,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __enter__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683145",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 353,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __exit__(self, exc_type, exc_val, exc_tb):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683163",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 386,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683168",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 390,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683563",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import traceback"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683566",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683569",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683576",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from werkzeug.exceptions import HTTPException"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:51.683748",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 387,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.685615",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 384,
      "severity": "MEDIUM",
      "message": "Function 'handle_errors' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.685698",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 54,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.685756",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 66,
      "severity": "MEDIUM",
      "message": "Function 'to_dict' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.685805",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 97,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.685895",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 138,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.685933",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 160,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.685993",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 176,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.686051",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 204,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.686096",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 223,
      "severity": "MEDIUM",
      "message": "Function '_after_request' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.686163",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 239,
      "severity": "MEDIUM",
      "message": "Function 'handle_app_error' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.686233",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 279,
      "severity": "MEDIUM",
      "message": "Function 'handle_generic_error' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.686298",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 320,
      "severity": "MEDIUM",
      "message": "Function '_update_error_stats' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.686399",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/error_handler.py",
      "line": 353,
      "severity": "MEDIUM",
      "message": "Function '__exit__' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.695938",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 391,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "docs_bp = Blueprint('api_docs', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.695964",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 408,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(docs_bp, url_prefix='/api')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.700996",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 394,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def openapi_spec():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.701007",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 399,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def swagger_ui():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.701012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 404,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def redoc_ui():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.701051",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 479,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.701844",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.701857",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from marshmallow import Schema"
    },
    {
      "timestamp": "2025-09-21T07:59:51.701860",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.702118",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 452,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from marshmallow import fields"
    },
    {
      "timestamp": "2025-09-21T07:59:51.704071",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 473,
      "severity": "MEDIUM",
      "message": "Function 'document_endpoint' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.704168",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 386,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.704209",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 412,
      "severity": "MEDIUM",
      "message": "Function 'add_path' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.704272",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 426,
      "severity": "MEDIUM",
      "message": "Function 'generate_schema_from_marshmallow' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.704327",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/api_documentation.py",
      "line": 450,
      "severity": "MEDIUM",
      "message": "Function '_marshmallow_to_openapi_type' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.711703",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 39,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def register_handlers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711714",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 43,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_connect():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711730",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 70,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_disconnect():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 95,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_join_room(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711756",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 113,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_leave_room(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711768",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 132,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711772",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 134,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapped(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 219,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def register_monitoring_events(self, monitor, alert_manager):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 224,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_device_status_request():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.711833",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 246,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_monitoring_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.712150",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.712157",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import request"
    },
    {
      "timestamp": "2025-09-21T07:59:51.712161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.712164",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.712168",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:51.712293",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 248,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:51.713690",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 15,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.713909",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 39,
      "severity": "MEDIUM",
      "message": "Function 'register_handlers' is too long (332 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.713982",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 130,
      "severity": "MEDIUM",
      "message": "Function 'rate_limit' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714029",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 157,
      "severity": "MEDIUM",
      "message": "Function 'broadcast' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714067",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 169,
      "severity": "MEDIUM",
      "message": "Function 'emit_to_session' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714187",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 203,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_stale_connections' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714283",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 219,
      "severity": "MEDIUM",
      "message": "Function 'register_monitoring_events' is too long (150 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714355",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 43,
      "severity": "MEDIUM",
      "message": "Function 'handle_connect' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714410",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 70,
      "severity": "MEDIUM",
      "message": "Function 'handle_disconnect' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714458",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 95,
      "severity": "MEDIUM",
      "message": "Function 'handle_join_room' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714506",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 113,
      "severity": "MEDIUM",
      "message": "Function 'handle_leave_room' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714569",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 132,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714641",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 224,
      "severity": "MEDIUM",
      "message": "Function 'handle_device_status_request' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714682",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 246,
      "severity": "MEDIUM",
      "message": "Function 'handle_monitoring_summary' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.714782",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_manager.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Function 'wrapped' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.722553",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 49,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.warning(f\"Connection limit exceeded for IP {client_ip}: {len(self._ip_connections[client_ip])} connections\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722564",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 245,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Cleaned up {cleanup_count} inactive connections, {len(empty_rooms)} empty rooms. GC collected {collected} objects.\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722584",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, socketio, max_connections_per_ip=10):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722665",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 186,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _start_cleanup_thread(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 199,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722682",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 210,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _run_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722705",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 254,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def shutdown(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722718",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 277,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def fix_websocket_memory_leaks(app, socketio):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722727",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 288,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_connect():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 300,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_disconnect():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722740",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 305,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_join_room(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 313,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_leave_room(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722755",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 325,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_websocket_resources(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.722761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 332,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def websocket_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.723096",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gc"
    },
    {
      "timestamp": "2025-09-21T07:59:51.723100",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import weakref"
    },
    {
      "timestamp": "2025-09-21T07:59:51.723103",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.723106",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.723109",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.723243",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 284,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import request"
    },
    {
      "timestamp": "2025-09-21T07:59:51.724847",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 277,
      "severity": "MEDIUM",
      "message": "Function 'fix_websocket_memory_leaks' is too long (204 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.724927",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 21,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725020",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 44,
      "severity": "MEDIUM",
      "message": "Function 'register_connection' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725090",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 74,
      "severity": "MEDIUM",
      "message": "Function 'unregister_connection' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725129",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 105,
      "severity": "MEDIUM",
      "message": "Function 'subscribe_to_room' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725169",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 121,
      "severity": "MEDIUM",
      "message": "Function 'unsubscribe_from_room' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725240",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 137,
      "severity": "MEDIUM",
      "message": "Function 'broadcast_to_room' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725295",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function 'get_connection_stats' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725449",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 210,
      "severity": "MEDIUM",
      "message": "Function '_run_cleanup' is too long (168 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725494",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 254,
      "severity": "MEDIUM",
      "message": "Function 'shutdown' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.725539",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 288,
      "severity": "MEDIUM",
      "message": "Function 'handle_connect' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.727042",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_memory_manager.py",
      "line": 331,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/websocket/stats')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732375",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732403",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 67,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_old_entries(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732417",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 89,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732456",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 167,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def record_failed_auth(self, request):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732465",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 180,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732469",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 182,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732489",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 221,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def apply_global_rate_limiting(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732494",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 225,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def check_global_rate_limits():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732777",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732781",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732786",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732790",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.732793",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.734155",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 177,
      "severity": "MEDIUM",
      "message": "Function 'rate_limit' is too long (184 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734249",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 221,
      "severity": "MEDIUM",
      "message": "Function 'apply_global_rate_limiting' is too long (128 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734373",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 27,
      "severity": "MEDIUM",
      "message": "Function 'is_allowed' is too long (143 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734413",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 67,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_old_entries' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734449",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 89,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734491",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 114,
      "severity": "MEDIUM",
      "message": "Function 'get_client_key' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734531",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 131,
      "severity": "MEDIUM",
      "message": "Function '_get_client_ip' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734580",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 150,
      "severity": "MEDIUM",
      "message": "Function 'is_allowed' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734708",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 180,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (176 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734784",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 225,
      "severity": "MEDIUM",
      "message": "Function 'check_global_rate_limits' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.734937",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/rate_limiter.py",
      "line": 182,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (172 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.744138",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 86,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_processing(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744157",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 100,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_processing(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744175",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 131,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _process_messages(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744186",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 148,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _process_batch(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744215",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _flush_all_batches(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744270",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 310,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_heartbeat(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744296",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 358,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_connections(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744308",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 375,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def register_events(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744313",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 379,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_subscribe(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744321",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 389,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_unsubscribe(data):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744328",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 398,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def handle_disconnect():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744661",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 286,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744726",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744729",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744732",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744736",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744743",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import request"
    },
    {
      "timestamp": "2025-09-21T07:59:51.744750",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:51.746813",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 53,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.746926",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 106,
      "severity": "MEDIUM",
      "message": "Function 'queue_message' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.746993",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 148,
      "severity": "MEDIUM",
      "message": "Function '_process_batch' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.747171",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 213,
      "severity": "MEDIUM",
      "message": "Function '_send_batched_messages' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.747224",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 250,
      "severity": "MEDIUM",
      "message": "Function '_send_single_message' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.747269",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 277,
      "severity": "MEDIUM",
      "message": "Function '_handle_failed_message' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.747434",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 333,
      "severity": "MEDIUM",
      "message": "Function 'health_check' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.747536",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/websocket_optimizer.py",
      "line": 375,
      "severity": "MEDIUM",
      "message": "Function 'register_events' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.757657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 196,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.757677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_to_response_headers(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.757696",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 250,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _before_request(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.757709",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 271,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _after_request(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.757725",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _teardown_request(self, exception):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.757754",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 353,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.757758",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 355,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.757826",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 85,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if self.include_extra and hasattr(record, 'extra') and record.extra:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758180",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758187",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758190",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758193",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758196",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758199",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758218",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from contextlib import contextmanager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758222",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758225",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:51.758228",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:51.760332",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 307,
      "severity": "MEDIUM",
      "message": "Function 'setup_structured_logging' is too long (138 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.760404",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 351,
      "severity": "MEDIUM",
      "message": "Function 'log_performance' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.760470",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 377,
      "severity": "MEDIUM",
      "message": "Function 'log_operation' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.760638",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function 'format' is too long (208 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.760677",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 99,
      "severity": "MEDIUM",
      "message": "Function '_get_request_context' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.760734",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 126,
      "severity": "MEDIUM",
      "message": "Function '_log_with_extra' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.760865",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 163,
      "severity": "MEDIUM",
      "message": "Function 'audit' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.760902",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 181,
      "severity": "MEDIUM",
      "message": "Function 'performance' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.761016",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 234,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.761056",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 250,
      "severity": "MEDIUM",
      "message": "Function '_before_request' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.761114",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 271,
      "severity": "MEDIUM",
      "message": "Function '_after_request' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.761197",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 353,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.761350",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/structured_logging.py",
      "line": 355,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.770605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 100,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _deserialize(self, value, attr, data, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.770627",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 118,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _deserialize(self, value, attr, data, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.770639",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 135,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _deserialize(self, value, attr, data, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.770689",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 236,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.770705",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 263,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.770729",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 307,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771113",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771117",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771120",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771124",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771127",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771132",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from marshmallow.fields import Field"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771245",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 246,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import g"
    },
    {
      "timestamp": "2025-09-21T07:59:51.771259",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 269,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import g"
    },
    {
      "timestamp": "2025-09-21T07:59:51.773168",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 232,
      "severity": "MEDIUM",
      "message": "Function 'validate_json' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773234",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 259,
      "severity": "MEDIUM",
      "message": "Function 'validate_query_params' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773285",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 282,
      "severity": "MEDIUM",
      "message": "Function 'sanitize_input' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773327",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 303,
      "severity": "MEDIUM",
      "message": "Function 'validate_content_type' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773493",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 49,
      "severity": "MEDIUM",
      "message": "Function 'validate_request' is too long (129 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773680",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 234,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773726",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 261,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773803",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 323,
      "severity": "MEDIUM",
      "message": "Function 'success' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773857",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 341,
      "severity": "MEDIUM",
      "message": "Function 'paginated' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.773979",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 236,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.774022",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validation_middleware.py",
      "line": 263,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.782609",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 172,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def profile_query(self, func):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.782625",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 177,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.782645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 209,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_all_devices_for_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.782655",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 224,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_for_dashboard(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.782699",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 308,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_performance_indexes(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.782720",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 343,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_tables(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783077",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783083",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.orm.attributes import InstrumentedAttribute"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783086",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.sql import func"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783089",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_sqlalchemy import SQLAlchemy"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783092",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783095",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783164",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 154,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783194",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 211,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783204",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 227,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import and_"
    },
    {
      "timestamp": "2025-09-21T07:59:51.783229",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 272,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:51.784760",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 28,
      "severity": "MEDIUM",
      "message": "Function 'optimize_query' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.784810",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 68,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_with_monitoring_data' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.784863",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 88,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_with_alerts' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.784954",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 108,
      "severity": "MEDIUM",
      "message": "Function 'get_device_summary' is too long (137 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.785001",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 144,
      "severity": "MEDIUM",
      "message": "Function 'batch_update_devices' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.785062",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 172,
      "severity": "MEDIUM",
      "message": "Function 'profile_query' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.785175",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 224,
      "severity": "MEDIUM",
      "message": "Function 'get_devices_for_dashboard' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.785294",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 270,
      "severity": "MEDIUM",
      "message": "Function 'get_device_metrics' is too long (142 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.785347",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 308,
      "severity": "MEDIUM",
      "message": "Function 'create_performance_indexes' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.785388",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 343,
      "severity": "MEDIUM",
      "message": "Function 'analyze_tables' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.785475",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/db_optimizer.py",
      "line": 177,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.791709",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 237,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@auth_bp.route('/api/auth/login', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.791730",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 254,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@auth_bp.route('/api/auth/refresh', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.791761",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 269,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@auth_bp.route('/api/auth/logout', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.792018",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 235,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "auth_bp = Blueprint('auth', __name__)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.792055",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 281,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "self.app.register_blueprint(auth_bp)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.794943",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 41,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.794971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 89,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_database_optimizations(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.794985",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 111,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_quality_management(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.794993",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 123,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_security(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795002",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 137,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_socketio(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 151,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_blueprints(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 161,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_services(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795029",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 178,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_additional_services(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 214,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_websockets(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795058",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 231,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _register_auth_endpoints(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795064",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def login():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795074",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 255,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def refresh():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795084",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 270,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def logout():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795094",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 284,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _register_routes(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795099",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 288,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def index():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795104",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 293,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795109",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def devices():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795114",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 303,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def device_detail(device_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 308,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def alerts():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795124",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 313,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def settings():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795129",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 318,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def topology():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795134",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 323,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def version():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795139",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 329,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _register_error_handlers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795143",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 333,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def not_found(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 340,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def internal_error(error):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795157",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 349,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_services(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795166",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 361,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_services(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795590",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795601",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_socketio import SocketIO"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795604",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795610",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.blueprint_registry import BlueprintRegistry"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795613",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.service_manager import ServiceManager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795615",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.websocket_manager import WebSocketManager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795618",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.thread_manager import ThreadManager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795621",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.security_middleware import SecurityMiddleware"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795626",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.websocket_optimizer import WebSocketBroadcastOptimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795629",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.query_profiler import global_profiler"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795632",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.quality_manager import QualityManager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795636",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from performance_middleware import PerformanceMiddleware"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795672",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 101,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.query_profiler import register_sqlalchemy_profiler"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795713",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 181,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.speedtest import speed_test_service"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795717",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 185,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.anomaly_detection import anomaly_detection_service"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 189,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.security_scanner import security_scanner"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795726",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 193,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rule_engine import rule_engine_service"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795731",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 197,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.configuration_service import configuration_service"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 201,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.alert_correlation import alert_correlation_service"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795739",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 205,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_monitor import performance_monitor"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795743",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 209,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rate_limiter import rate_limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:51.795841",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 409,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:51.797428",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 55,
      "severity": "MEDIUM",
      "message": "Function 'create_app' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.797624",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 178,
      "severity": "MEDIUM",
      "message": "Function '_initialize_additional_services' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.797662",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 214,
      "severity": "MEDIUM",
      "message": "Function '_initialize_websockets' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.797795",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function '_register_auth_endpoints' is too long (203 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.797877",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 284,
      "severity": "MEDIUM",
      "message": "Function '_register_routes' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.797929",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 329,
      "severity": "MEDIUM",
      "message": "Function '_register_error_handlers' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.798005",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 373,
      "severity": "MEDIUM",
      "message": "Function 'get_status' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.798121",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'login' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.798160",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/application.py",
      "line": 255,
      "severity": "MEDIUM",
      "message": "Function 'refresh' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.807587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 283,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_stats(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.807622",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 333,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.807627",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 335,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.807646",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 370,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def before_cursor_execute(conn, cursor, statement, parameters, context, executemany):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.807652",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 375,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def after_cursor_execute(conn, cursor, statement, parameters, context, executemany):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808066",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808071",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808074",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808081",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import event"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808085",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.engine import Engine"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808088",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808091",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808094",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.808229",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 300,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.810142",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 331,
      "severity": "MEDIUM",
      "message": "Function 'profile_query' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810214",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 363,
      "severity": "MEDIUM",
      "message": "Function 'register_sqlalchemy_profiler' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810288",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810330",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 63,
      "severity": "MEDIUM",
      "message": "Function 'normalize_query' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810372",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 79,
      "severity": "MEDIUM",
      "message": "Function 'extract_operation_type' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810519",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 120,
      "severity": "MEDIUM",
      "message": "Function 'record_query' is too long (184 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810559",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function 'get_slow_queries' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810636",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 184,
      "severity": "MEDIUM",
      "message": "Function 'get_query_stats' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810778",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'get_operation_stats' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810843",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 259,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_summary' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.810949",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 297,
      "severity": "MEDIUM",
      "message": "Function 'export_slow_queries' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.811002",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 333,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.811061",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 375,
      "severity": "MEDIUM",
      "message": "Function 'after_cursor_execute' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.811202",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/query_profiler.py",
      "line": 335,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.813921",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 26,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "app.register_blueprint(blueprint, **config)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814572",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814711",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 38,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.devices import devices_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814715",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 39,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.monitoring import monitoring_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814718",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.config import config_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814721",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 41,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.analytics import analytics_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814724",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 42,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.speedtest import speedtest_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814727",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 43,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.device_control import device_control_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814730",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 44,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.anomaly import anomaly_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814732",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 45,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.security import security_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 46,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.notifications import notifications_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814738",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 47,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.automation import automation_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 48,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.config_management import config_management_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 49,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.system import system_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814746",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 50,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.health import health_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814749",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.escalation import escalation_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814752",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 52,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.performance import performance_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814755",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 53,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.performance_optimization import performance_optimization_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814758",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 54,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.rate_limit_admin import rate_limit_admin_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 55,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.performance_dashboard import performance_dashboard_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.814764",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 56,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.health_check import health_check_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.815270",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 20,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.815378",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/blueprint_registry.py",
      "line": 33,
      "severity": "MEDIUM",
      "message": "Function 'create_default' is too long (186 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.825490",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 191,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setUp(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825503",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 201,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def tearDown(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825546",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 283,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_login_success(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825555",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 294,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_login_invalid_credentials(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825563",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 303,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_protected_endpoint_without_auth(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825568",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 308,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_protected_endpoint_with_auth(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 317,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setUp(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_list_devices(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 331,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_detail(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 340,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825604",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 354,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_invalid_ip(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825611",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 364,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_list_performance(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825618",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 372,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setUp(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825622",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 376,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_monitoring_summary(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825629",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 385,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_monitoring_data(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825636",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 394,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_ping_mock(self, mock_ping):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825644",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 404,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_basic_health_check(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825650",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 412,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_detailed_health_check(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825680",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 470,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def app():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825692",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 488,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def client(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.825697",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 493,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def authenticated_client(client):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826177",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import unittest"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826181",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826187",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826191",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Flask"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826194",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask.testing import FlaskClient"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826198",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from contextlib import contextmanager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826201",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826241",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 95,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826295",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 208,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.application import Application"
    },
    {
      "timestamp": "2025-09-21T07:59:51.826423",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 472,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.application import Application"
    },
    {
      "timestamp": "2025-09-21T07:59:51.828706",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 23,
      "severity": "MEDIUM",
      "message": "Function 'create_test_db' is too long (158 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.828834",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Function 'get' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.828882",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 146,
      "severity": "MEDIUM",
      "message": "Function 'post' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.828923",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 161,
      "severity": "MEDIUM",
      "message": "Function 'put' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.828958",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 176,
      "severity": "MEDIUM",
      "message": "Function 'delete' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.829179",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 252,
      "severity": "MEDIUM",
      "message": "Function 'benchmark_endpoint' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.829539",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 428,
      "severity": "MEDIUM",
      "message": "Function 'run_all_tests' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.829605",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/testing_framework.py",
      "line": 455,
      "severity": "MEDIUM",
      "message": "Function 'generate_test_report' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.837687",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 40,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Authentication manager initialized (admin_password={'set' if self.admin_password else 'not set'})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837714",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837731",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 42,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_default_admin(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837745",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 66,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def authenticate(self, username, password):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 92,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def login(self, user):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 124,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def logout(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837790",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 143,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_authenticated(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 168,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_current_user(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837809",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 174,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def has_role(self, role):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837814",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 178,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_expired_sessions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 197,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def login_required(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837829",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 200,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837839",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 215,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def admin_required(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837843",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 218,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837858",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 239,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_key_required(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 242,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.837918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 81,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if username == 'admin' and self.admin_password and password == self.admin_password:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838147",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838154",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838157",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838163",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838253",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838264",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 221,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:51.838280",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 249,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import APIKey"
    },
    {
      "timestamp": "2025-09-21T07:59:51.839610",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 197,
      "severity": "MEDIUM",
      "message": "Function 'login_required' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.839681",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 215,
      "severity": "MEDIUM",
      "message": "Function 'admin_required' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.839750",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 239,
      "severity": "MEDIUM",
      "message": "Function 'api_key_required' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.839831",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 29,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.839912",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 42,
      "severity": "MEDIUM",
      "message": "Function 'create_default_admin' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.839982",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 66,
      "severity": "MEDIUM",
      "message": "Function 'authenticate' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.840056",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 92,
      "severity": "MEDIUM",
      "message": "Function 'login' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.840124",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 124,
      "severity": "MEDIUM",
      "message": "Function 'logout' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.840164",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 143,
      "severity": "MEDIUM",
      "message": "Function 'is_authenticated' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.840241",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 178,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_expired_sessions' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.840287",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 200,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.840348",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 218,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.840412",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/auth.py",
      "line": 242,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.846015",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 141,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "self.app.register_blueprint(health_check_bp, url_prefix='/api')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848635",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 75,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _init_structured_logging(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848648",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 93,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _init_error_handling(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848654",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 100,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _init_validation_middleware(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848668",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 124,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _init_api_documentation(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848678",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 138,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _register_health_checks(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848746",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848751",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 279,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848770",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 314,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_input_quality(schema_class):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848773",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 316,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.848778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849176",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849183",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import Flask"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849188",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.error_handler import ErrorHandler"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849192",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.validation_middleware import ValidationMiddleware"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849197",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.structured_logging import setup_structured_logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849201",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.config_validation import ConfigurationManager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849205",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.api_documentation import APIDocumentation"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849285",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.api_documentation import DEVICE_API_PATHS"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849295",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 140,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from api.health_check import health_check_bp"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849371",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 276,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849377",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 280,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.structured_logging import get_logger"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849400",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 317,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849410",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 329,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import g"
    },
    {
      "timestamp": "2025-09-21T07:59:51.849414",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 332,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from core.error_handler import ValidationError"
    },
    {
      "timestamp": "2025-09-21T07:59:51.851036",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 273,
      "severity": "MEDIUM",
      "message": "Function 'monitor_quality' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851094",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 314,
      "severity": "MEDIUM",
      "message": "Function 'validate_input_quality' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851165",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 29,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851202",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 58,
      "severity": "MEDIUM",
      "message": "Function '_init_config_management' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851283",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 100,
      "severity": "MEDIUM",
      "message": "Function '_init_validation_middleware' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851376",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 145,
      "severity": "MEDIUM",
      "message": "Function 'get_quality_metrics' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851491",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 166,
      "severity": "MEDIUM",
      "message": "Function 'run_quality_checks' is too long (187 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851600",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 242,
      "severity": "MEDIUM",
      "message": "Function '_generate_recommendations' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851660",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851708",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 316,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851824",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 279,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.851871",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/quality_manager.py",
      "line": 321,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.860807",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 345,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'SQLALCHEMY_DATABASE_URI': self.settings.database.database_url or f'sqlite:///{self.settings.database.database_path}',"
    },
    {
      "timestamp": "2025-09-21T07:59:51.860842",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_database_path(cls, v):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.860871",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 54,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_network_range(cls, v):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.860901",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 91,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def parse_email_list(cls, v):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.860924",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 120,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_jwt_secret(cls, v):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.860933",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 127,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_admin_password(cls, v):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.860966",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 167,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_log_level(cls, v):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.860995",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 203,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def validate_secret_key(cls, v):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861578",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861584",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861595",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pydantic_settings import BaseSettings"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861599",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import yaml"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861602",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861636",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 56,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.861794",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 311,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.863856",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 28,
      "severity": "MEDIUM",
      "message": "Function 'validate_database_path' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.864120",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 217,
      "severity": "MEDIUM",
      "message": "Function 'load_config' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.864179",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 244,
      "severity": "MEDIUM",
      "message": "Function '_load_config_file' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.864251",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 264,
      "severity": "MEDIUM",
      "message": "Function 'save_config' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.864351",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 292,
      "severity": "MEDIUM",
      "message": "Function 'validate_runtime_config' is too long (157 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.864411",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/config_validation.py",
      "line": 337,
      "severity": "MEDIUM",
      "message": "Function 'get_flask_config' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.873588",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 339,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(f):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.873599",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 341,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorated_function(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.873983",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.873991",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.873994",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.873999",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from werkzeug.exceptions import BadRequest"
    },
    {
      "timestamp": "2025-09-21T07:59:51.874003",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import html"
    },
    {
      "timestamp": "2025-09-21T07:59:51.874179",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 336,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.876011",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 334,
      "severity": "MEDIUM",
      "message": "Function 'validate_request' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876143",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 71,
      "severity": "MEDIUM",
      "message": "Function 'validate_mac_address' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876190",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 88,
      "severity": "MEDIUM",
      "message": "Function 'validate_hostname' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876244",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 104,
      "severity": "MEDIUM",
      "message": "Function 'validate_username' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876285",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 120,
      "severity": "MEDIUM",
      "message": "Function 'validate_email' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876356",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 136,
      "severity": "MEDIUM",
      "message": "Function 'validate_password' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876395",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 161,
      "severity": "MEDIUM",
      "message": "Function 'sanitize_string' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876441",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 184,
      "severity": "MEDIUM",
      "message": "Function 'validate_integer' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876486",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 201,
      "severity": "MEDIUM",
      "message": "Function 'validate_float' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876523",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 218,
      "severity": "MEDIUM",
      "message": "Function 'validate_boolean' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876560",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 233,
      "severity": "MEDIUM",
      "message": "Function 'validate_device_type' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876625",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 253,
      "severity": "MEDIUM",
      "message": "Function 'validate_url' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876703",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 296,
      "severity": "MEDIUM",
      "message": "Function 'validate_search_query' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876765",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 311,
      "severity": "MEDIUM",
      "message": "Function 'validate_json_input' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.876834",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 339,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.877013",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/validators.py",
      "line": 341,
      "severity": "MEDIUM",
      "message": "Function 'decorated_function' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.886995",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.887006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:51.887010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import shlex"
    },
    {
      "timestamp": "2025-09-21T07:59:51.887013",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:51.887016",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:51.887020",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.888816",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 99,
      "severity": "MEDIUM",
      "message": "Function 'execute' is too long (239 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.888879",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 173,
      "severity": "MEDIUM",
      "message": "Function '_validate_target' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.889015",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 226,
      "severity": "MEDIUM",
      "message": "Function '_validate_arguments' is too long (110 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.889063",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 266,
      "severity": "MEDIUM",
      "message": "Function '_is_safe_value' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.889121",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 288,
      "severity": "MEDIUM",
      "message": "Function 'ping' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.889166",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 320,
      "severity": "MEDIUM",
      "message": "Function 'scan_network' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.889222",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/core/secure_executor.py",
      "line": 348,
      "severity": "MEDIUM",
      "message": "Function 'get_arp_table' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.895241",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 378,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: @app\\.route\\([^)]*POST[^)]*\\)",
      "code_snippet": "@app.route('/api/circuit-breakers/reset', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.895510",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 378,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@app.route('/api/circuit-breakers/reset', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898557",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 239,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'last_failure_time': self.metrics.last_failure_time.isoformat() if self.metrics.last_failure_time else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898563",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 240,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'last_success_time': self.metrics.last_success_time.isoformat() if self.metrics.last_success_time else None"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898609",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 71,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898638",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 125,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def target():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898678",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 200,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _move_to_open(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898684",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 207,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _move_to_half_open(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 213,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _move_to_closed(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898711",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 252,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898743",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 310,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_all(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898776",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 371,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def circuit_breaker_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.898783",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 379,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reset_circuit_breakers():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.899181",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.899184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.899187",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.899192",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.899195",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.899198",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:51.899201",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:51.901304",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 365,
      "severity": "MEDIUM",
      "message": "Function 'init_circuit_breakers' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.901392",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 51,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.901485",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 75,
      "severity": "MEDIUM",
      "message": "Function 'call' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.901562",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 112,
      "severity": "MEDIUM",
      "message": "Function '_execute_with_timeout' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.901631",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 145,
      "severity": "MEDIUM",
      "message": "Function '_record_success' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.901710",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function '_record_failure' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.901866",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 222,
      "severity": "MEDIUM",
      "message": "Function 'get_metrics' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.901987",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 285,
      "severity": "MEDIUM",
      "message": "Function 'get_circuit_breaker' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.902118",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 379,
      "severity": "MEDIUM",
      "message": "Function 'reset_circuit_breakers' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.903790",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 370,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/circuit-breakers/metrics')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.903800",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/circuit_breaker.py",
      "line": 378,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/circuit-breakers/reset', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.910391",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 563,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: @app\\.route\\([^)]*POST[^)]*\\)",
      "code_snippet": "@app.route('/api/cache/clear', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.910763",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 563,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@app.route('/api/cache/clear', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.913698",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 374,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "cache_key = hashlib.md5(\":\".join(key_parts).encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.913798",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 507,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "query_hash = hashlib.md5(\":\".join(query_parts).encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.914543",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 374,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "cache_key = hashlib.md5(\":\".join(key_parts).encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.914637",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 507,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "query_hash = hashlib.md5(\":\".join(query_parts).encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915196",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _evict_l1_entry(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915258",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 309,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_expired(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915280",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 348,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_worker(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915291",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 365,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915313",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 404,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915366",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 502,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915403",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 545,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cache_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.915417",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 564,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear_cache():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import redis"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916015",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pickle"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916021",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916024",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916026",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916032",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916035",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916038",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916042",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916045",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import zlib"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916218",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 380,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tenant_manager import get_current_tenant"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916237",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 413,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tenant_manager import get_current_tenant"
    },
    {
      "timestamp": "2025-09-21T07:59:51.916287",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 512,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tenant_manager import get_current_tenant"
    },
    {
      "timestamp": "2025-09-21T07:59:51.919197",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 360,
      "severity": "MEDIUM",
      "message": "Function 'cached' is too long (142 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919252",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 400,
      "severity": "MEDIUM",
      "message": "Function 'cache_invalidate' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919337",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 498,
      "severity": "MEDIUM",
      "message": "Function 'query_cache' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919409",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 539,
      "severity": "MEDIUM",
      "message": "Function 'init_cache' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919476",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 53,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919528",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 67,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919686",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 110,
      "severity": "MEDIUM",
      "message": "Function 'get' is too long (149 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919752",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 147,
      "severity": "MEDIUM",
      "message": "Function 'set' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919796",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 172,
      "severity": "MEDIUM",
      "message": "Function '_set_l1' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919894",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 203,
      "severity": "MEDIUM",
      "message": "Function 'delete' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.919987",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function 'clear' is too long (141 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.920061",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 270,
      "severity": "MEDIUM",
      "message": "Function '_update_metrics' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.920142",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 309,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_expired' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.920291",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 363,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (124 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.920331",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 402,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.920606",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 500,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.920855",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 365,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.920998",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 502,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.923290",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 544,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/cache/metrics')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.923304",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/cache_manager.py",
      "line": 563,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/cache/clear', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.926372",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 141,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_bp.route('/api/cache/clear', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.926393",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 159,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@performance_bp.route('/api/circuit-breakers/reset', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:51.926462",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 14,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "performance_bp = Blueprint('performance', __name__, url_prefix='/performance')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928302",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def performance_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def metrics_overview():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928328",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 56,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cache_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928338",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 71,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def circuit_breakers_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928348",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 86,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def load_balancers_dashboard():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928358",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_health():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928364",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 108,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_system_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928370",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 117,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_application_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928377",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 126,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_endpoint_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928383",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 134,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_cache_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928389",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 142,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_cache_clear():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928396",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 152,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_circuit_breaker_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928403",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 160,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_circuit_breaker_reset():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928413",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 177,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_load_balancer_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928420",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 186,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_realtime_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928680",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928685",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from performance.metrics_collector import metrics_collector"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928688",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from performance.cache_manager import cache_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from performance.circuit_breaker import circuit_breaker_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.928693",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from performance.load_balancing import load_balancer_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.929963",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 33,
      "severity": "MEDIUM",
      "message": "Function 'metrics_overview' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.930239",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 160,
      "severity": "MEDIUM",
      "message": "Function 'api_circuit_breaker_reset' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.930386",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/performance_dashboard.py",
      "line": 186,
      "severity": "MEDIUM",
      "message": "Function 'api_realtime_summary' is too long (206 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.943481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 396,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'min_response_time': metrics.min_response_time if metrics.min_response_time != float('inf') else 0.0,"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943556",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 113,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_collection(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943565",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 123,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_collection(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943572",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _collection_worker(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943580",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 141,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _collect_system_metrics(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943606",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 194,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _collect_application_metrics(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943642",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 267,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def before_request(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943649",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def after_request(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943667",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 307,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_request(self, exception=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943752",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 480,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943770",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 512,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943782",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 531,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def system_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943788",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 539,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def application_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943795",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 547,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def endpoint_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 554,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def custom_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943821",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 561,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def health_check():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943827",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 566,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def prometheus_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.943846",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 601,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_metrics(exception):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944447",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944450",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944454",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944457",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944463",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944466",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944468",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944471",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gc"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944474",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944478",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import resource"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944484",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944586",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 224,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from performance.cache_manager import cache_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:51.944594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 234,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import inspect"
    },
    {
      "timestamp": "2025-09-21T07:59:51.947493",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 476,
      "severity": "MEDIUM",
      "message": "Function 'record_metric' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.947681",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 525,
      "severity": "MEDIUM",
      "message": "Function 'init_metrics' is too long (229 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.947795",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 74,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948009",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 141,
      "severity": "MEDIUM",
      "message": "Function '_collect_system_metrics' is too long (191 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948169",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 194,
      "severity": "MEDIUM",
      "message": "Function '_collect_application_metrics' is too long (258 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948268",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Function 'after_request' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948365",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 323,
      "severity": "MEDIUM",
      "message": "Function 'get_system_metrics' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948418",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 349,
      "severity": "MEDIUM",
      "message": "Function 'get_application_metrics' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948504",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 374,
      "severity": "MEDIUM",
      "message": "Function 'get_endpoint_metrics' is too long (131 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948643",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 410,
      "severity": "MEDIUM",
      "message": "Function 'get_health_status' is too long (189 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948701",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 478,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.948865",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 566,
      "severity": "MEDIUM",
      "message": "Function 'prometheus_metrics' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.949034",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 480,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.951454",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 530,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/metrics/system')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.951466",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 538,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/metrics/application')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.951474",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 546,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/metrics/endpoints')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.951480",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 553,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/metrics/custom')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.951486",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 560,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/health')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.951492",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/metrics_collector.py",
      "line": 565,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/metrics')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.959761",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 146,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "return hashlib.md5(request_context['client_ip'].encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.959797",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 187,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "hash_value = int(hashlib.md5(client_ip.encode()).hexdigest(), 16)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.960477",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 146,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "return hashlib.md5(request_context['client_ip'].encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:51.960507",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 187,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "hash_value = int(hashlib.md5(client_ip.encode()).hexdigest(), 16)"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961138",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 177,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def connection_ratio(backend):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961149",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 192,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def avg_response_time(backend):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961164",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 219,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_health_checks(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 229,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_health_checks(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961178",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 236,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _health_check_worker(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961237",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 353,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _setup_default_load_balancers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961263",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 400,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def shutdown(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961282",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 433,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __exit__(self, exc_type, exc_val, exc_tb):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961292",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 448,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961306",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 472,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def load_balancer_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961313",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 480,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def shutdown_load_balancers(exception):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961384",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 135,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if self.config.session_affinity and request_context and backend:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961782",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import random"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961786",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961789",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961792",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961796",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961799",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961802",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961806",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961810",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:51.961922",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 250,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:51.964357",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 444,
      "severity": "MEDIUM",
      "message": "Function 'load_balanced' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.964489",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 72,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.964679",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 96,
      "severity": "MEDIUM",
      "message": "Function 'get_backend' is too long (216 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.964766",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 156,
      "severity": "MEDIUM",
      "message": "Function '_weighted_round_robin' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.964909",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 203,
      "severity": "MEDIUM",
      "message": "Function '_weighted_random' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.965057",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 247,
      "severity": "MEDIUM",
      "message": "Function '_check_backend_health' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.965199",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 295,
      "severity": "MEDIUM",
      "message": "Function 'get_stats' is too long (132 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.965481",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 446,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.965722",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 448,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.967737",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/performance/load_balancing.py",
      "line": 471,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/api/load-balancers/stats')"
    },
    {
      "timestamp": "2025-09-21T07:59:51.976957",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 58,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def app():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.976983",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 97,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def client(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.976990",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def runner(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.976995",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def db_session(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977014",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 144,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def sample_device_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977024",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 159,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def sample_device(db_session, sample_device_data):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977031",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 169,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def sample_devices(db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977053",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 211,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def sample_monitoring_data(db_session, sample_device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977065",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 231,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def sample_performance_metrics(db_session, sample_device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977078",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 254,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def sample_alert(db_session, sample_device):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977090",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 272,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def sample_configuration(db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977107",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 302,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_nmap():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977117",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 318,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_ping():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977124",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 326,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_smtp():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977130",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 335,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_requests():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977138",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_socketio():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977145",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 355,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_performance_monitor():"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977159",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 379,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_test_device(db_session, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977171",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 398,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_test_monitoring_data(db_session, device, count=5, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 420,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_test_performance_metrics(db_session, device, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977197",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 442,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def pytest_configure(config):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977205",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 452,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def pytest_collection_modifyitems(config, items):"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977491",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 139,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977651",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977654",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import tempfile"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977662",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977666",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977670",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:51.977677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:51.979595",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 58,
      "severity": "MEDIUM",
      "message": "Function 'app' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.979701",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function 'db_session' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.979787",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 169,
      "severity": "MEDIUM",
      "message": "Function 'sample_devices' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.979835",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 211,
      "severity": "MEDIUM",
      "message": "Function 'sample_monitoring_data' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.979875",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function 'sample_performance_metrics' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.979969",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 302,
      "severity": "MEDIUM",
      "message": "Function 'mock_nmap' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.980144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 398,
      "severity": "MEDIUM",
      "message": "Function 'create_test_monitoring_data' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.980180",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/conftest.py",
      "line": 420,
      "severity": "MEDIUM",
      "message": "Function 'create_test_performance_metrics' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:51.986170",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/examples/react-native-example.js",
      "line": 26,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "import { HomeNetMonSDK } from '../sdk/homenetmon-sdk';"
    },
    {
      "timestamp": "2025-09-21T07:59:52.004800",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/examples/web-app-example.html",
      "line": 431,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "<script src=\"../sdk/homenetmon-sdk.js\"></script>"
    },
    {
      "timestamp": "2025-09-21T07:59:52.010080",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/examples/web-app-example.html",
      "line": 487,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Devices updated:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:52.010089",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/examples/web-app-example.html",
      "line": 492,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Alerts updated:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:52.014749",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/examples/web-app-example.html",
      "line": 609,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "grid.innerHTML = '<div style=\"grid-column: 1/-1; text-align: center; padding: 40px; color: #6b7280;\">No devices found</div>';"
    },
    {
      "timestamp": "2025-09-21T07:59:52.014756",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/examples/web-app-example.html",
      "line": 689,
      "severity": "LOW",
      "message": "Line too long (160 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "alert(`Device: ${response.device.display_name}\\nStatus: ${response.device.status}\\nLast seen: ${response.device.last_seen || 'Never'}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:52.014761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/examples/web-app-example.html",
      "line": 734,
      "severity": "LOW",
      "message": "Line too long (182 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button onclick=\"this.parentElement.parentElement.remove()\" style=\"background: none; border: none; cursor: pointer; padding: 0; margin-left: auto;\">\u2715</button>"
    },
    {
      "timestamp": "2025-09-21T07:59:52.024774",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_performance_indexes():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.024859",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analyze_query_performance():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.024895",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 257,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def main():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.025230",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:52.025234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.025238",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from app import create_app"
    },
    {
      "timestamp": "2025-09-21T07:59:52.025241",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:52.025245",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.025381",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 306,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import traceback"
    },
    {
      "timestamp": "2025-09-21T07:59:52.026714",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 29,
      "severity": "MEDIUM",
      "message": "Function 'add_performance_indexes' is too long (356 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.026804",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 187,
      "severity": "MEDIUM",
      "message": "Function 'analyze_query_performance' is too long (134 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.026934",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/migrations/add_performance_indexes.py",
      "line": 257,
      "severity": "MEDIUM",
      "message": "Function 'main' is too long (210 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.066361",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 305,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Scanning device {i+1}/{total_devices}: {device.display_name} ({device.ip_address})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066377",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 317,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "open_ports_found=self.current_scan['open_ports_found'] + len([r for r in device_results if r.state == 'open'])"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066382",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 357,
      "severity": "LOW",
      "message": "Line too long (210 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Network security scan completed - scanned {total_devices} devices, found {len([r for r in scan_results if r.state == 'open'])} open ports, generated {len(security_alerts)} alerts\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066395",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 748,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def perform_compliance_assessment(self, device: Device, framework: ComplianceFramework = ComplianceFramework.CIS) -> List[ComplianceCheck]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066399",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 775,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def _perform_cis_controls_assessment(self, device: Device, open_ports: List[PortScanResult]) -> List[ComplianceCheck]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066404",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 861,
      "severity": "LOW",
      "message": "Line too long (151 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=\"Excessive open ports may indicate non-standard configuration\" if excessive_ports else \"Port configuration appears reasonable\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066407",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 869,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Review necessity of all open ports', 'Close unused services', 'Document approved services'] if excessive_ports else [],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066410",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 886,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=\"Unnecessary insecure services detected\" if unnecessary_services else \"No unnecessary insecure services detected\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066413",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 893,
      "severity": "LOW",
      "message": "Line too long (151 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Disable unnecessary services', 'Use secure alternatives', 'Document business justification'] if unnecessary_services else [],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066418",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 986,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'compliance_violations': len([v for v in vulnerabilities if json.loads(v.compliance_violations or '[]')])"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066421",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 998,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "summary['vulnerability_categories'][vuln.category] = summary['vulnerability_categories'].get(vuln.category, 0) + 1"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066427",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1096,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Review service configuration', 'Change default credentials if applicable', 'Disable unnecessary services'],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066430",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1123,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "finding_id=f\"service_vuln_{device.id}_{result.port}_{vuln['id']}_{int(datetime.utcnow().timestamp())}\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066434",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1167,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "finding_id=f\"ssl_expired_{device.id}_{result.port}_{int(datetime.utcnow().timestamp())}\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066437",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1182,
      "severity": "LOW",
      "message": "Line too long (146 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Renew SSL certificate immediately', 'Update certificate configuration', 'Verify certificate chain'],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066439",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1190,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "severity = SecuritySeverity.HIGH if ssl_info.days_until_expiry <= 7 else SecuritySeverity.MEDIUM"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066442",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1193,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "finding_id=f\"ssl_expiring_{device.id}_{result.port}_{int(datetime.utcnow().timestamp())}\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066445",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1199,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"SSL certificate on port {result.port} expires in {ssl_info.days_until_expiry} days\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066448",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1208,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Schedule certificate renewal', 'Update certificate before expiry', 'Monitor certificate status'],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066450",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1217,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "finding_id=f\"ssl_selfsigned_{device.id}_{result.port}_{int(datetime.utcnow().timestamp())}\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066454",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1231,
      "severity": "LOW",
      "message": "Line too long (162 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Replace with CA-signed certificate', 'Consider certificate authority validation', 'Review certificate trust chain'],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066473",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1262,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=\"Telnet service running alongside other services indicates poor security configuration\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.066477",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1269,
      "severity": "LOW",
      "message": "Line too long (161 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Disable telnet service', 'Use SSH for remote access', 'Review all service configurations', 'Implement security hardening'],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066480",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1292,
      "severity": "LOW",
      "message": "Line too long (162 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Review necessity of all open ports', 'Close unused services', 'Implement firewall rules', 'Follow principle of least exposure'],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066483",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1327,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=anomaly.get('description', 'Anomalous behavior detected that may indicate security issues'),"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066486",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1335,
      "severity": "LOW",
      "message": "Line too long (179 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation=['Investigate anomalous behavior', 'Review device activity logs', 'Consider device isolation if necessary', 'Monitor for continued anomalies'],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066491",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1418,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'remediation': ['Update OpenSSH to latest version', 'Implement fail2ban', 'Use key-based authentication']"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066494",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1431,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'remediation': ['Update Apache to 2.4.29 or later', 'Review .htaccess configurations', 'Implement WAF']"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066497",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1444,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'remediation': ['Update nginx to 1.13.3 or later', 'Review nginx configuration', 'Monitor for unusual requests']"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066500",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1465,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'remediation': [f'Update {service} to latest version', 'Review security advisories', 'Test compatibility before updating']"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066506",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1590,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "return remediation_map.get(port, ['Review service configuration', 'Implement access controls', 'Monitor service logs'])"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066514",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1795,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'last_assessment': max(v.discovered_at for v in vulnerabilities).isoformat() if vulnerabilities else None,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066587",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 136,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066630",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 213,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scanner_loop():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066641",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 229,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 234,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_scan_progress(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066650",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _reset_scan_progress(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066661",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 256,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _update_scan_progress(self, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066670",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 269,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_security_scan(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.066720",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 367,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_background_scan(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069236",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import nmap"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069243",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069246",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069248",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069251",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069266",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ssl"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069269",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069272",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069275",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069280",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069283",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069287",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import and_"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069290",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.anomaly_detection import AnomalyDetectionEngine"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069548",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 563,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import SecurityScan"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069604",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 671,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 703,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069627",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 705,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069739",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 926,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import DeviceOSInfo"
    },
    {
      "timestamp": "2025-09-21T07:59:52.069762",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 967,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import SecurityScan"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070019",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1473,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import ComplianceResult"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1522,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import ComplianceResult"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070065",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1551,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070090",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1595,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ssl"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070093",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1596,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070097",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1597,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070129",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1658,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import SecurityVulnerability"
    },
    {
      "timestamp": "2025-09-21T07:59:52.070150",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1693,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import SecurityVulnerability"
    },
    {
      "timestamp": "2025-09-21T07:59:52.079337",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 136,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (133 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.079403",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 204,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.079491",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 256,
      "severity": "MEDIUM",
      "message": "Function '_update_scan_progress' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.079688",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 269,
      "severity": "MEDIUM",
      "message": "Function 'run_security_scan' is too long (327 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.079731",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 367,
      "severity": "MEDIUM",
      "message": "Function 'start_background_scan' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.079913",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 389,
      "severity": "MEDIUM",
      "message": "Function 'scan_device_ports' is too long (287 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080073",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 465,
      "severity": "MEDIUM",
      "message": "Function 'analyze_security_results' is too long (244 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080119",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 528,
      "severity": "MEDIUM",
      "message": "Function 'calculate_risk_score' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080198",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 560,
      "severity": "MEDIUM",
      "message": "Function 'get_previous_scan_results' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080321",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 590,
      "severity": "MEDIUM",
      "message": "Function 'store_scan_results' is too long (192 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080358",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 649,
      "severity": "MEDIUM",
      "message": "Function 'process_security_alerts' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080418",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 668,
      "severity": "MEDIUM",
      "message": "Function 'create_security_alert' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080520",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 700,
      "severity": "MEDIUM",
      "message": "Function 'send_security_push_notification' is too long (164 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080608",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 748,
      "severity": "MEDIUM",
      "message": "Function 'perform_compliance_assessment' is too long (132 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080706",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 775,
      "severity": "MEDIUM",
      "message": "Function '_perform_cis_controls_assessment' is too long (162 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080794",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 831,
      "severity": "MEDIUM",
      "message": "Function '_perform_nist_assessment' is too long (144 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080861",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 875,
      "severity": "MEDIUM",
      "message": "Function '_perform_pci_dss_assessment' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080904",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 899,
      "severity": "MEDIUM",
      "message": "Function '_perform_iso27001_assessment' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.080967",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 923,
      "severity": "MEDIUM",
      "message": "Function '_store_os_detection' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.081123",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 945,
      "severity": "MEDIUM",
      "message": "Function 'get_security_summary' is too long (246 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.081196",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1006,
      "severity": "MEDIUM",
      "message": "Function 'perform_vulnerability_assessment' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.081348",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1041,
      "severity": "MEDIUM",
      "message": "Function '_assess_port_vulnerabilities' is too long (247 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.081445",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1107,
      "severity": "MEDIUM",
      "message": "Function '_assess_service_vulnerabilities' is too long (155 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.081667",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1150,
      "severity": "MEDIUM",
      "message": "Function '_assess_ssl_vulnerabilities' is too long (346 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.081803",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1242,
      "severity": "MEDIUM",
      "message": "Function '_assess_configuration_security' is too long (223 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.081907",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1303,
      "severity": "MEDIUM",
      "message": "Function '_assess_anomaly_based_vulnerabilities' is too long (164 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082014",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1346,
      "severity": "MEDIUM",
      "message": "Function 'manual_scan_device' is too long (161 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082113",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1403,
      "severity": "MEDIUM",
      "message": "Function '_check_service_version_vulnerabilities' is too long (163 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082233",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1470,
      "severity": "MEDIUM",
      "message": "Function 'get_compliance_summary' is too long (187 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082299",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1519,
      "severity": "MEDIUM",
      "message": "Function 'store_compliance_results' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082343",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1549,
      "severity": "MEDIUM",
      "message": "Function '_is_outdated_version' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082404",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1578,
      "severity": "MEDIUM",
      "message": "Function '_get_port_remediation' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082548",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1592,
      "severity": "MEDIUM",
      "message": "Function '_analyze_ssl_certificate' is too long (226 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082625",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1655,
      "severity": "MEDIUM",
      "message": "Function 'store_vulnerability_findings' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082726",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1690,
      "severity": "MEDIUM",
      "message": "Function 'get_vulnerability_summary' is too long (155 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082908",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1735,
      "severity": "MEDIUM",
      "message": "Function 'get_device_security_posture' is too long (270 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.082981",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_scanner.py",
      "line": 1803,
      "severity": "MEDIUM",
      "message": "Function '_generate_security_recommendations' is too long (110 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.131861",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 114,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'discovery_methods_used': [method for method, enabled in self.discovery_methods.items() if enabled]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131877",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 132,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Network topology discovery completed in {topology['discovery_metadata']['discovery_duration_seconds']:.2f}s\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131884",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 281,
      "severity": "LOW",
      "message": "Line too long (233 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'total_infrastructure_devices': sum(len(devices) for devices in infrastructure.values()) - len(infrastructure['statistics']) if 'statistics' in infrastructure else sum(len(devices) for devices in infr"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131894",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 507,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if device.id not in devices_with_parents and device.id not in [p['device_id'] for p in parent_child['root_devices']]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131905",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 797,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'estimated_hops': 3 if subnet1_gateway['device_id'] != subnet2_gateway['device_id'] else 2,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1163,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'details': f\"Found {len(redundancy_analysis['single_points_of_failure'])} critical single points of failure\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.131922",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1232,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'recommended_action': 'Consider load balancing or subnet segmentation' if bottleneck_level != 'low' else None"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131926",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1282,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'capacity_status': 'high' if capacity_utilization > 80 else 'medium' if capacity_utilization > 50 else 'low',"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131931",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1371,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "metrics['network_density'] = round(actual_connections / total_possible_connections, 3) if total_possible_connections > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131940",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1584,
      "severity": "LOW",
      "message": "Line too long (149 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "latency_similarity = 1 - min(1, abs(device_avg_response - other_avg_response) / max(device_avg_response, other_avg_response))"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131945",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1677,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "service_type = 'dns' if infra_ip.endswith('.2') else 'dhcp' if infra_ip.endswith('.3') else 'infrastructure'"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131952",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1847,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'pattern_stability': 'stable' if len(set(int(rt/10)*10 for rt in response_times)) <= 3 else 'variable'"
    },
    {
      "timestamp": "2025-09-21T07:59:52.131980",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.133722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1633,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if device1.vendor and device2.vendor and device1.vendor == device2.vendor:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.133789",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1763,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if device1.vendor and device2.vendor and device1.vendor == device2.vendor:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134104",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 394,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1399,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134783",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1773,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134808",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1814,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134911",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134915",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134921",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134924",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134927",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:52.134933",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_analytics import DeviceBehaviorAnalytics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.145323",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 32,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.145482",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 66,
      "severity": "MEDIUM",
      "message": "Function 'discover_network_topology' is too long (215 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.145646",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 140,
      "severity": "MEDIUM",
      "message": "Function '_discover_network_segments' is too long (254 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.145859",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 210,
      "severity": "MEDIUM",
      "message": "Function '_identify_infrastructure_devices' is too long (321 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.145912",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 290,
      "severity": "MEDIUM",
      "message": "Function '_discover_device_relationships' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146048",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 317,
      "severity": "MEDIUM",
      "message": "Function '_analyze_latency_relationships' is too long (214 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146131",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 382,
      "severity": "MEDIUM",
      "message": "Function '_analyze_subnet_relationships' is too long (128 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146293",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 434,
      "severity": "MEDIUM",
      "message": "Function '_build_parent_child_relationships' is too long (258 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146350",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 517,
      "severity": "MEDIUM",
      "message": "Function '_identify_dependency_chains' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146456",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 539,
      "severity": "MEDIUM",
      "message": "Function '_analyze_network_routes' is too long (162 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146547",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 583,
      "severity": "MEDIUM",
      "message": "Function '_analyze_network_paths' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146750",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 630,
      "severity": "MEDIUM",
      "message": "Function '_build_connectivity_matrix' is too long (325 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.146959",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 731,
      "severity": "MEDIUM",
      "message": "Function '_discover_route_mappings' is too long (330 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.147147",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 832,
      "severity": "MEDIUM",
      "message": "Function '_identify_critical_paths' is too long (310 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.147303",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 931,
      "severity": "MEDIUM",
      "message": "Function '_analyze_backup_paths' is too long (253 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.147514",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1002,
      "severity": "MEDIUM",
      "message": "Function '_calculate_path_metrics' is too long (342 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.147714",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1096,
      "severity": "MEDIUM",
      "message": "Function '_analyze_path_redundancy' is too long (334 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.147967",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1191,
      "severity": "MEDIUM",
      "message": "Function '_identify_network_bottlenecks' is too long (418 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148049",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1324,
      "severity": "MEDIUM",
      "message": "Function '_get_resilience_recommendations' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148199",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1353,
      "severity": "MEDIUM",
      "message": "Function '_calculate_topology_metrics' is too long (239 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148387",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1409,
      "severity": "MEDIUM",
      "message": "Function '_generate_visualization_data' is too long (306 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148483",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1492,
      "severity": "MEDIUM",
      "message": "Function 'analyze_device_relationships' is too long (154 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148624",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1546,
      "severity": "MEDIUM",
      "message": "Function '_analyze_direct_relationships' is too long (216 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148699",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1607,
      "severity": "MEDIUM",
      "message": "Function '_determine_relationship_type' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148882",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1638,
      "severity": "MEDIUM",
      "message": "Function '_analyze_device_dependencies' is too long (289 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.148951",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1720,
      "severity": "MEDIUM",
      "message": "Function '_find_subnet_peers' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.149041",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1754,
      "severity": "MEDIUM",
      "message": "Function '_calculate_peer_strength' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.149118",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1792,
      "severity": "MEDIUM",
      "message": "Function '_find_shared_characteristics' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.149254",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1819,
      "severity": "MEDIUM",
      "message": "Function '_analyze_communication_patterns' is too long (210 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.149349",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1867,
      "severity": "MEDIUM",
      "message": "Function '_determine_network_role' is too long (148 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.149475",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1902,
      "severity": "MEDIUM",
      "message": "Function '_assess_device_criticality' is too long (208 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.149539",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_topology.py",
      "line": 1955,
      "severity": "MEDIUM",
      "message": "Function 'monitor_topology_changes' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.160722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_optimizer.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_devices_optimized(db_session, limit=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.160744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_optimizer.py",
      "line": 35,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_with_recent_data(db_session, device_id, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.160759",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_optimizer.py",
      "line": 57,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_dashboard_data_optimized(db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.160871",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_optimizer.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import text"
    },
    {
      "timestamp": "2025-09-21T07:59:52.160877",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_optimizer.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.161271",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_optimizer.py",
      "line": 35,
      "severity": "MEDIUM",
      "message": "Function 'get_device_with_recent_data' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.168511",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.168540",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 63,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _start_cleanup_thread(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.168549",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 75,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_old_data(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.168651",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 286,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def flush_pending_updates(self, socketio, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.168677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 334,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.169033",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.169037",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.169041",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.170586",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 27,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.170691",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 75,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_old_data' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.170797",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 107,
      "severity": "MEDIUM",
      "message": "Function '_is_significant_change' is too long (159 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.170885",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 148,
      "severity": "MEDIUM",
      "message": "Function 'should_emit_device_update' is too long (130 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.170938",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 199,
      "severity": "MEDIUM",
      "message": "Function 'should_emit_global_event' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.170982",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function '_check_global_rate_limit' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.171063",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 256,
      "severity": "MEDIUM",
      "message": "Function 'get_pending_updates' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.171110",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 286,
      "severity": "MEDIUM",
      "message": "Function 'flush_pending_updates' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.171170",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_throttle.py",
      "line": 310,
      "severity": "MEDIUM",
      "message": "Function 'get_throttle_stats' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.199665",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 329,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Playbook execution completed: {result['success']}, {result['actions_succeeded']}/{result['actions_executed']} actions succeeded\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199696",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 973,
      "severity": "LOW",
      "message": "Line too long (153 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "remediation_data = json.loads(vulnerability.remediation) if isinstance(vulnerability.remediation, str) else vulnerability.remediation"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1110,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if incident.status == IncidentStatus.NEW and (current_time - incident.created_at).total_seconds() > 3600:  # 1 hour"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199707",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1111,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.update_incident_status(incident_id, IncidentStatus.ASSIGNED, \"Auto-escalated due to time threshold\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199710",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1114,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if incident.status == IncidentStatus.RESOLVED and (current_time - incident.last_updated).total_seconds() > 86400:  # 24 hours"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199712",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1115,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.update_incident_status(incident_id, IncidentStatus.CLOSED, \"Auto-closed after 24 hours in resolved state\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199781",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 120,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 161,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_response_engine(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.199818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 183,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_response_engine(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.200139",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 858,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _initialize_default_playbooks(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.200247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1085,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _response_processor_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.200258",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1101,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _incident_manager_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.200271",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1123,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _remediation_tracker_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.200285",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1146,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _escalation_monitor_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201516",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1014,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201523",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1022,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201552",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1076,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201694",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201698",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201701",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201707",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201712",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.201717",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.escalation_manager import escalation_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:52.202059",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 742,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.202063",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 743,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:52.202066",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 744,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:52.208915",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 120,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.208983",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 161,
      "severity": "MEDIUM",
      "message": "Function 'start_response_engine' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209083",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function 'process_security_threat' is too long (131 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209189",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 233,
      "severity": "MEDIUM",
      "message": "Function '_threat_matches_conditions' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209380",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 270,
      "severity": "MEDIUM",
      "message": "Function '_execute_playbook' is too long (276 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209478",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 341,
      "severity": "MEDIUM",
      "message": "Function '_execute_response_action' is too long (150 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209622",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 371,
      "severity": "MEDIUM",
      "message": "Function '_create_security_incident' is too long (232 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209693",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 436,
      "severity": "MEDIUM",
      "message": "Function 'create_remediation_task' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209790",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 475,
      "severity": "MEDIUM",
      "message": "Function 'update_incident_status' is too long (150 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.209958",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 514,
      "severity": "MEDIUM",
      "message": "Function 'get_security_response_dashboard' is too long (253 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210022",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 587,
      "severity": "MEDIUM",
      "message": "Function '_block_ip_address' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210079",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 620,
      "severity": "MEDIUM",
      "message": "Function '_rate_limit_ip' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210128",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 651,
      "severity": "MEDIUM",
      "message": "Function '_isolate_device' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210164",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 681,
      "severity": "MEDIUM",
      "message": "Function '_enhance_monitoring' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210239",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 704,
      "severity": "MEDIUM",
      "message": "Function '_collect_evidence' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210323",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 736,
      "severity": "MEDIUM",
      "message": "Function '_notify_administrator' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210372",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 779,
      "severity": "MEDIUM",
      "message": "Function '_escalate_incident' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210418",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 808,
      "severity": "MEDIUM",
      "message": "Function '_backup_security_logs' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210469",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 828,
      "severity": "MEDIUM",
      "message": "Function '_quarantine_device' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210570",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 858,
      "severity": "MEDIUM",
      "message": "Function '_initialize_default_playbooks' is too long (180 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210661",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 963,
      "severity": "MEDIUM",
      "message": "Function '_generate_remediation_steps' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210752",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 997,
      "severity": "MEDIUM",
      "message": "Function '_capture_network_state' is too long (127 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210815",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1031,
      "severity": "MEDIUM",
      "message": "Function '_get_device_forensics' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210876",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1059,
      "severity": "MEDIUM",
      "message": "Function '_extract_relevant_logs' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.210964",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1101,
      "severity": "MEDIUM",
      "message": "Function '_incident_manager_loop' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.211013",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1123,
      "severity": "MEDIUM",
      "message": "Function '_remediation_tracker_loop' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.211062",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1146,
      "severity": "MEDIUM",
      "message": "Function '_escalation_monitor_loop' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.211139",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1178,
      "severity": "MEDIUM",
      "message": "Function 'get_incident_details' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.211199",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1205,
      "severity": "MEDIUM",
      "message": "Function 'get_remediation_task_details' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.211246",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1233,
      "severity": "MEDIUM",
      "message": "Function 'update_remediation_task_status' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.211330",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1251,
      "severity": "MEDIUM",
      "message": "Function 'create_custom_playbook' is too long (137 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.211476",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/security_response.py",
      "line": 1286,
      "severity": "MEDIUM",
      "message": "Function 'get_response_statistics' is too long (235 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.236503",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 425,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'avg_uptime_percentage': round(statistics.mean(uptime_percentages), 2) if uptime_percentages else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236521",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 614,
      "severity": "LOW",
      "message": "Line too long (146 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "critical_threshold = float(self.get_config_value('performance_alert_critical_threshold', '15'))  # Only extremely poor performance"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236525",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 615,
      "severity": "LOW",
      "message": "Line too long (137 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "warning_threshold = float(self.get_config_value('performance_alert_warning_threshold', '25'))   # Only significant issues"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236527",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 616,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recovery_threshold = float(self.get_config_value('performance_alert_recovery_threshold', '40'))  # Faster recovery"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236533",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 696,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Not enough recent data for {device.display_name}: {len(recent_records)} < {consecutive_periods}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236536",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 724,
      "severity": "LOW",
      "message": "Line too long (165 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Alert check for {device.display_name} ({alert_subtype}): {consecutive_below}/{consecutive_periods} consecutive periods below {threshold}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236557",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None, socketio=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236570",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_config_value(self, key, default):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236578",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 44,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def collect_device_performance_metrics(self, device_id, collection_period_minutes=60):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236635",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 161,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _calculate_response_metrics(self, response_data):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236646",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 179,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _calculate_availability_metrics(self, response_data):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236659",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 201,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _calculate_bandwidth_metrics(self, bandwidth_data):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236672",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 222,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _calculate_quality_metrics(self, response_data):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 256,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _count_anomalies(self, response_data, bandwidth_data):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236707",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 286,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def collect_all_devices_performance(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236729",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 328,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_performance_data(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 353,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_network_performance_summary(self, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236791",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 448,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236810",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 482,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 488,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reload_config(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236826",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 505,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emit_device_performance_update(self, device, performance_record):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236841",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 530,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emit_network_performance_summary(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236856",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 553,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emit_performance_chart_updates(self, summary):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236880",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 598,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def set_socketio(self, socketio):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236885",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 602,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _check_performance_alerts(self, device, performance_record):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236919",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 670,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _should_create_alert(self, device, alert_subtype, current_value):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236950",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 732,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _create_performance_alert(self, device, alert_subtype, message, details):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.236990",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 811,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _resolve_performance_alerts(self, device, current_health_score):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237029",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 889,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_performance_alert_summary(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237525",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 41,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237968",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237974",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237978",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237982",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.237985",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:52.242575",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 44,
      "severity": "MEDIUM",
      "message": "Function 'collect_device_performance_metrics' is too long (360 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.242631",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 161,
      "severity": "MEDIUM",
      "message": "Function '_calculate_response_metrics' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.242689",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 179,
      "severity": "MEDIUM",
      "message": "Function '_calculate_availability_metrics' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.242752",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 201,
      "severity": "MEDIUM",
      "message": "Function '_calculate_bandwidth_metrics' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.242823",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 222,
      "severity": "MEDIUM",
      "message": "Function '_calculate_quality_metrics' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.242910",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 256,
      "severity": "MEDIUM",
      "message": "Function '_count_anomalies' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.242992",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 286,
      "severity": "MEDIUM",
      "message": "Function 'collect_all_devices_performance' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243053",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 328,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_performance_data' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243208",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 353,
      "severity": "MEDIUM",
      "message": "Function 'get_network_performance_summary' is too long (250 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243270",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 448,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243326",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 488,
      "severity": "MEDIUM",
      "message": "Function 'reload_config' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243371",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 505,
      "severity": "MEDIUM",
      "message": "Function '_emit_device_performance_update' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243494",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 553,
      "severity": "MEDIUM",
      "message": "Function '_emit_performance_chart_updates' is too long (152 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243630",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 602,
      "severity": "MEDIUM",
      "message": "Function '_check_performance_alerts' is too long (210 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243767",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 670,
      "severity": "MEDIUM",
      "message": "Function '_should_create_alert' is too long (223 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.243891",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 732,
      "severity": "MEDIUM",
      "message": "Function '_create_performance_alert' is too long (201 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.244061",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 811,
      "severity": "MEDIUM",
      "message": "Function '_resolve_performance_alerts' is too long (273 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.244150",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_monitor.py",
      "line": 889,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_alert_summary' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.255212",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 173,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.warning(f\"Sustained high CPU usage: {cpu_percent:.1f}% for {self.thresholds['cpu_duration']} seconds\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255226",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 304,
      "severity": "LOW",
      "message": "Line too long (8112 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "deleted_count = db.session.execute(\\n                    text(\\\"DELETE FROM monitoring_data WHERE timestamp < :cutoff_date\\\"),\\n                    {'cutoff_date': cutoff_date}\\n                ).rowc"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255263",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 52,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255271",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 64,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255279",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 77,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _monitor_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 180,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _perform_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255346",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 206,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _perform_memory_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255357",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 223,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _perform_disk_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255369",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 243,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emergency_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255380",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 262,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _emergency_disk_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255392",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 279,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_high_cpu(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255629",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 127,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 304,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "deleted_count = db.session.execute(\\n                    text(\\\"DELETE FROM monitoring_data WHERE timestamp < :cutoff_date\\\"),\\n                    {'cutoff_date': cutoff_date}\\n                ).rowc"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255736",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255739",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gc"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255749",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.255754",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:52.256815",
      "test_type": "syntax",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_monitor.py",
      "line": 304,
      "severity": "HIGH",
      "message": "Syntax error: unexpected character after line continuation character",
      "details": "File contains syntax errors",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.291068",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 166,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'enabled': Configuration.get_value('anomaly_response_time_enabled', 'true').lower() == 'true',"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291083",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 167,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'threshold_multiplier': float(Configuration.get_value('anomaly_response_time_threshold', '2.5')),"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291087",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 168,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'min_change_threshold': float(Configuration.get_value('anomaly_response_time_min_change', '100')),"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291090",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 171,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'medium': float(Configuration.get_value('anomaly_response_time_medium_threshold', '2.5')),"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291093",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 173,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'critical': float(Configuration.get_value('anomaly_response_time_critical_threshold', '5.0'))"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291095",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 177,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'enabled': Configuration.get_value('anomaly_uptime_pattern_enabled', 'true').lower() == 'true',"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291098",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 178,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'unexpected_down_threshold': float(Configuration.get_value('anomaly_uptime_down_threshold', '0.9')),"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291100",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 179,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'unexpected_up_threshold': float(Configuration.get_value('anomaly_uptime_up_threshold', '0.9'))"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291102",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 182,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'enabled': Configuration.get_value('anomaly_connectivity_pattern_enabled', 'true').lower() == 'true',"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291105",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 183,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'unusual_pattern_threshold': float(Configuration.get_value('anomaly_connectivity_threshold', '1.5'))"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291111",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 330,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def detect_response_time_anomaly(self, device: Device, baseline_start: datetime, recent_start: datetime) -> Optional[AnomalyAlert]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291116",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 397,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message = f\"Response time {direction} significantly from {baseline_mean:.1f}ms to {recent_mean:.1f}ms (z-score: {z_score:.2f})\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.291119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 412,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def detect_uptime_pattern_anomaly(self, device: Device, baseline_start: datetime, recent_start: datetime) -> Optional[AnomalyAlert]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291122",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 439,
      "severity": "LOW",
      "message": "Line too long (154 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message = f\"Device unexpectedly down during typical uptime period (expected {expected_uptime*100:.1f}% uptime, got {current_uptime*100:.1f}%)\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.291125",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 455,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def detect_connectivity_pattern_anomaly(self, device: Device, baseline_start: datetime, recent_start: datetime) -> Optional[AnomalyAlert]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291129",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 480,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message = f\"Unusually low connection frequency ({recent_freq:.1f} vs baseline {baseline_freq:.1f} connections/hour)\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.291131",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 483,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message = f\"Unusually high connection frequency ({recent_freq:.1f} vs baseline {baseline_freq:.1f} connections/hour)\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.291141",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 765,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Triggered rule engine for anomaly: {anomaly.device_name} - {anomaly.anomaly_type} ({anomaly.severity})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291145",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 819,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'max_severity': max([a.severity.value for a in device_anomalies]) if device_anomalies else 'none',"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291148",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 820,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'avg_confidence': round(statistics.mean([a.confidence for a in device_anomalies]), 3) if device_anomalies else 0.0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 858,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Enhanced anomaly detection completed: {len(detection_results['anomalies'])} anomalies found\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291156",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 936,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Statistical anomaly detected using Z-score analysis (max z-score: {max_z_score:.2f})\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.291172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1413,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "multi_anomaly_devices = {device_id: count for device_id, count in device_anomaly_counts.items() if count > 1}"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291223",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 79,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291261",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 151,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def load_configuration(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291285",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 195,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _load_default_configuration(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291303",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 227,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def reload_configuration(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291323",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291332",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 244,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def detection_loop():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291342",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 260,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.291348",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 265,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_detection_cycle(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293164",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 688,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293634",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293638",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293641",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293644",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293649",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293652",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293656",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293660",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_analytics import DeviceBehaviorAnalytics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293663",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.predictive_failure import FailurePredictionEngine"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293729",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 156,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293771",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 241,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293774",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 242,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293905",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 507,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import case"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293939",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 574,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 609,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293962",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 611,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:52.293984",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 652,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:52.294018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 720,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.rule_engine import TriggerContext"
    },
    {
      "timestamp": "2025-09-21T07:59:52.294038",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 756,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.294144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 973,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sklearn.ensemble import IsolationForest"
    },
    {
      "timestamp": "2025-09-21T07:59:52.294178",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1037,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sklearn.neighbors import LocalOutlierFactor"
    },
    {
      "timestamp": "2025-09-21T07:59:52.302301",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 79,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (159 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.302431",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 151,
      "severity": "MEDIUM",
      "message": "Function 'load_configuration' is too long (177 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.302467",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 195,
      "severity": "MEDIUM",
      "message": "Function '_load_default_configuration' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.302528",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 232,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.302614",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 265,
      "severity": "MEDIUM",
      "message": "Function 'run_detection_cycle' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.302683",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 296,
      "severity": "MEDIUM",
      "message": "Function 'detect_device_anomalies' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.302869",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 330,
      "severity": "MEDIUM",
      "message": "Function 'detect_response_time_anomaly' is too long (281 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.302968",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 412,
      "severity": "MEDIUM",
      "message": "Function 'detect_uptime_pattern_anomaly' is too long (153 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303073",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 455,
      "severity": "MEDIUM",
      "message": "Function 'detect_connectivity_pattern_anomaly' is too long (166 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303150",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 503,
      "severity": "MEDIUM",
      "message": "Function 'get_hourly_uptime_pattern' is too long (108 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303196",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 530,
      "severity": "MEDIUM",
      "message": "Function 'get_connection_frequency' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303241",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 547,
      "severity": "MEDIUM",
      "message": "Function 'process_anomalies' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303306",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 571,
      "severity": "MEDIUM",
      "message": "Function 'create_anomaly_alert' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303402",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 606,
      "severity": "MEDIUM",
      "message": "Function 'send_anomaly_push_notification' is too long (149 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303533",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 649,
      "severity": "MEDIUM",
      "message": "Function 'get_anomaly_statistics' is too long (205 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303646",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 712,
      "severity": "MEDIUM",
      "message": "Function '_trigger_rule_engine_for_anomaly' is too long (182 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303856",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 773,
      "severity": "MEDIUM",
      "message": "Function 'detect_enhanced_anomalies' is too long (329 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.303942",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 866,
      "severity": "MEDIUM",
      "message": "Function '_detect_enhanced_device_anomalies' is too long (132 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304093",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 906,
      "severity": "MEDIUM",
      "message": "Function '_detect_advanced_statistical_anomalies' is too long (241 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304235",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 968,
      "severity": "MEDIUM",
      "message": "Function '_detect_isolation_forest_anomalies' is too long (228 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304377",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1032,
      "severity": "MEDIUM",
      "message": "Function '_detect_local_outlier_anomalies' is too long (229 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304433",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1099,
      "severity": "MEDIUM",
      "message": "Function '_detect_advanced_behavioral_anomalies' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304525",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1127,
      "severity": "MEDIUM",
      "message": "Function '_detect_communication_pattern_anomalies' is too long (149 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304619",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1171,
      "severity": "MEDIUM",
      "message": "Function '_detect_usage_pattern_anomalies' is too long (153 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304709",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1215,
      "severity": "MEDIUM",
      "message": "Function '_detect_device_role_anomalies' is too long (145 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304753",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1266,
      "severity": "MEDIUM",
      "message": "Function '_detect_advanced_temporal_anomalies' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304791",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1287,
      "severity": "MEDIUM",
      "message": "Function '_detect_traffic_anomalies' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304830",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1305,
      "severity": "MEDIUM",
      "message": "Function '_detect_security_anomalies' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304876",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1323,
      "severity": "MEDIUM",
      "message": "Function '_detect_enhanced_network_anomalies' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.304950",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1357,
      "severity": "MEDIUM",
      "message": "Function '_enhanced_anomaly_to_dict' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.305120",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1377,
      "severity": "MEDIUM",
      "message": "Function '_analyze_anomaly_correlations' is too long (264 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.305344",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1438,
      "severity": "MEDIUM",
      "message": "Function '_generate_enhanced_network_summary' is too long (381 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.305467",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/anomaly_detection.py",
      "line": 1532,
      "severity": "MEDIUM",
      "message": "Function '_generate_enhanced_recommendations' is too long (207 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.319582",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 112,
      "severity": "LOW",
      "message": "Line too long (150 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "hit_rate = self._stats['hits'] / (self._stats['hits'] + self._stats['misses']) if (self._stats['hits'] + self._stats['misses']) > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319614",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, default_ttl=300, max_size=10000):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319663",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_stats(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319671",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 121,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_expired(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319696",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 139,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _evict_lru(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 149,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _estimate_memory_usage(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319713",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 163,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cached_property(ttl=300, key_func=None, invalidate_on=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319719",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 172,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 174,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 195,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cached_query(ttl=60, key_func=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 203,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 205,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319758",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 231,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319780",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 270,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319784",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 274,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_system_metrics(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319795",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 290,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def should_reduce_cache_size(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319801",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def adjust_cache_settings(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319816",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 323,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_cache_performance_metrics():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.319824",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 334,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _generate_performance_recommendations(system_metrics, cache_stats):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320082",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 157,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 295,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320191",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320194",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320197",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320202",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320205",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320207",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320210",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:52.320277",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 152,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:52.321922",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 163,
      "severity": "MEDIUM",
      "message": "Function 'cached_property' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322004",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 195,
      "severity": "MEDIUM",
      "message": "Function 'cached_query' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322074",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 334,
      "severity": "MEDIUM",
      "message": "Function '_generate_performance_recommendations' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322181",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 35,
      "severity": "MEDIUM",
      "message": "Function 'get' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322231",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 63,
      "severity": "MEDIUM",
      "message": "Function 'set' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322293",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 81,
      "severity": "MEDIUM",
      "message": "Function 'invalidate' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322345",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function 'get_stats' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322392",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 121,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_expired' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322491",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 172,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322557",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 203,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322673",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 274,
      "severity": "MEDIUM",
      "message": "Function 'get_system_metrics' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322744",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 298,
      "severity": "MEDIUM",
      "message": "Function 'adjust_cache_settings' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322829",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 174,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.322898",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_cache.py",
      "line": 205,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.332153",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 245,
      "severity": "LOW",
      "message": "Line too long (142 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'tracking_coverage_percent': (len(notifications_with_receipts) / total_notifications * 100) if total_notifications > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332190",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332198",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 36,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_tracking_token(self, notification_id, metadata=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332224",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 86,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def track_interaction(self, tracking_token, interaction_type, user_agent=None, ip_address=None, metadata=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332261",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 160,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_notification_engagement(self, notification_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332290",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_engagement_analytics(self, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332347",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 335,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_old_receipts(self, days=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332364",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 363,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def generate_tracking_pixel_url(self, tracking_token, base_url):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332374",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 376,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _anonymize_ip(self, ip_address):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332770",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 385,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332783",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import secrets"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332786",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332789",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.332792",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.334613",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function 'generate_tracking_token' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.334771",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 86,
      "severity": "MEDIUM",
      "message": "Function 'track_interaction' is too long (238 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.334874",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 160,
      "severity": "MEDIUM",
      "message": "Function 'get_notification_engagement' is too long (149 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.335140",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 217,
      "severity": "MEDIUM",
      "message": "Function 'get_engagement_analytics' is too long (421 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.335186",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/read_receipt_service.py",
      "line": 335,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_old_receipts' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.353891",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 838,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "def generate_device_fingerprint(self, device_id: int, days: int = 14) -> Dict[str, Any]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.353918",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 856,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "response_fingerprint = self._calculate_response_fingerprint(monitoring_data)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.353925",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 859,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "temporal_fingerprint = self._calculate_temporal_fingerprint(monitoring_data)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.353932",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 862,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "failure_fingerprint = self._calculate_failure_fingerprint(monitoring_data)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.353938",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 865,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "network_fingerprint = self._calculate_network_fingerprint(device, monitoring_data)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.353963",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 893,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "def _calculate_response_fingerprint(self, monitoring_data: List) -> Dict[str, Any]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.354003",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 943,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "def _calculate_temporal_fingerprint(self, monitoring_data: List) -> Dict[str, Any]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.354046",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 997,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "def _calculate_failure_fingerprint(self, monitoring_data: List) -> Dict[str, Any]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.354088",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1054,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "def _calculate_network_fingerprint(self, device: Device, monitoring_data: List) -> Dict[str, Any]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.354175",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1170,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "fp1 = self.generate_device_fingerprint(device_id1, days)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.354179",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1171,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "fp2 = self.generate_device_fingerprint(device_id2, days)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.354262",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1278,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "fingerprint = self.generate_device_fingerprint(device.id)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.360491",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1141,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "signature_hash = hashlib.md5(signature_str.encode()).hexdigest()[:12]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.362490",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1141,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "signature_hash = hashlib.md5(signature_str.encode()).hexdigest()[:12]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363555",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 470,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'average_interval': (timestamps[-1] - timestamps[0]).total_seconds() / len(timestamps) if len(timestamps) > 1 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 485,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "time_patterns['trend_direction'] = 'improving' if moving_averages[-1] < moving_averages[0] else 'degrading'"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363564",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 549,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def _calculate_classification_confidence(self, characteristics: DeviceCharacteristics, device: Device) -> Dict[str, float]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363582",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 588,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if characteristics.hostname_patterns and characteristics.hostname_patterns.get('hostname_classification') == device_type:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363592",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 825,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'trend_direction': 'improving' if trend_change < -5 else 'degrading' if trend_change > 5 else 'stable',"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363608",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1280,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Generated fingerprint for {device.display_name}: {fingerprint['fingerprint_hash']}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363641",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 48,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def to_dict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.363653",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 64,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.364222",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1257,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_continuous_analysis(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.364226",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1259,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def analysis_loop():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.365563",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.365567",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.365571",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.365574",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.365577",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.365582",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.365586",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:52.366111",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1122,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.372317",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 64,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.372484",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Function '_load_classification_rules' is too long (303 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.372553",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 212,
      "severity": "MEDIUM",
      "message": "Function '_initialize_device_patterns' is too long (124 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.372685",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 254,
      "severity": "MEDIUM",
      "message": "Function 'analyze_device_behavior' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.372797",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 323,
      "severity": "MEDIUM",
      "message": "Function '_analyze_response_patterns' is too long (176 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.372922",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 359,
      "severity": "MEDIUM",
      "message": "Function '_analyze_uptime_patterns' is too long (185 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373031",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 408,
      "severity": "MEDIUM",
      "message": "Function '_analyze_failure_patterns' is too long (169 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 453,
      "severity": "MEDIUM",
      "message": "Function '_analyze_timing_characteristics' is too long (172 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373233",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 489,
      "severity": "MEDIUM",
      "message": "Function '_analyze_vendor_patterns' is too long (133 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373296",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 520,
      "severity": "MEDIUM",
      "message": "Function '_analyze_hostname_patterns' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373460",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 549,
      "severity": "MEDIUM",
      "message": "Function '_calculate_classification_confidence' is too long (256 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373538",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 609,
      "severity": "MEDIUM",
      "message": "Function 'classify_device' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373653",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 650,
      "severity": "MEDIUM",
      "message": "Function '_generate_classification_reasoning' is too long (185 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373698",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 685,
      "severity": "MEDIUM",
      "message": "Function 'get_device_insights' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373788",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 707,
      "severity": "MEDIUM",
      "message": "Function '_generate_recommendations' is too long (144 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373861",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 741,
      "severity": "MEDIUM",
      "message": "Function '_generate_monitoring_suggestions' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.373995",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 781,
      "severity": "MEDIUM",
      "message": "Function '_analyze_performance_trends' is too long (208 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374099",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 838,
      "severity": "MEDIUM",
      "message": "Function 'generate_device_fingerprint' is too long (162 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374251",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 893,
      "severity": "MEDIUM",
      "message": "Function '_calculate_response_fingerprint' is too long (236 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374403",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 943,
      "severity": "MEDIUM",
      "message": "Function '_calculate_temporal_fingerprint' is too long (232 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374521",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 997,
      "severity": "MEDIUM",
      "message": "Function '_calculate_failure_fingerprint' is too long (186 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374665",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1054,
      "severity": "MEDIUM",
      "message": "Function '_calculate_network_fingerprint' is too long (229 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374737",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1120,
      "severity": "MEDIUM",
      "message": "Function '_create_device_signature' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374799",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1145,
      "severity": "MEDIUM",
      "message": "Function '_calculate_fingerprint_confidence' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374907",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1167,
      "severity": "MEDIUM",
      "message": "Function 'compare_device_fingerprints' is too long (171 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.374966",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1211,
      "severity": "MEDIUM",
      "message": "Function '_calculate_response_similarity' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.375053",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1239,
      "severity": "MEDIUM",
      "message": "Function '_calculate_network_similarity' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.375144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1257,
      "severity": "MEDIUM",
      "message": "Function 'start_continuous_analysis' is too long (141 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.375403",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_analytics.py",
      "line": 1259,
      "severity": "MEDIUM",
      "message": "Function 'analysis_loop' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.387923",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 131,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _init_redis_client(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.387952",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 164,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _rate_limit_handler(self, view_func):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.387980",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 213,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _handle_rate_limit_exceeded(self, e):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.387989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 224,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_strict(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.387993",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 228,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_moderate(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.387998",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 232,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def api_relaxed(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388002",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 236,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitoring_data(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388007",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 240,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def device_control(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 244,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def config_changes(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388015",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 248,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def bulk_operations(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388020",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 252,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def speedtest(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388024",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 256,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def security_scan(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388405",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388408",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388412",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_limiter import Limiter"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388415",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_limiter.util import get_remote_address"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388418",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388422",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import redis"
    },
    {
      "timestamp": "2025-09-21T07:59:52.388427",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.390017",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 49,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.390101",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 79,
      "severity": "MEDIUM",
      "message": "Function '_get_storage_uri' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.390171",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 131,
      "severity": "MEDIUM",
      "message": "Function '_init_redis_client' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.390297",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 178,
      "severity": "MEDIUM",
      "message": "Function '_track_rate_limit_stats' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.390458",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 262,
      "severity": "MEDIUM",
      "message": "Function 'get_rate_limit_status' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.390555",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rate_limiter.py",
      "line": 296,
      "severity": "MEDIUM",
      "message": "Function 'get_abuse_stats' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.400422",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, db, socketio):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.400561",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 287,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _build_device_data(self, device, response_time, last_monitoring, alert_count, health_score):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.400580",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 318,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _calculate_status(self, device, response_time, last_monitoring):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.400591",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 334,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _calculate_performance_grade(self, health_score):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.400604",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 357,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _calculate_performance_status(self, health_score):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.400628",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 402,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_device_data_fallback(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.400638",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 417,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear_update_cache(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.400646",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 426,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_websocket_optimizer(db, socketio):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.401070",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.401073",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.401076",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.401081",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.401094",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.query_cache import get_cached_device_list"
    },
    {
      "timestamp": "2025-09-21T07:59:52.401098",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:52.401274",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 404,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:52.403096",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 27,
      "severity": "MEDIUM",
      "message": "Function 'get_optimized_device_data' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.403250",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 47,
      "severity": "MEDIUM",
      "message": "Function '_get_device_data_fallback_optimized' is too long (214 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.403357",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 123,
      "severity": "MEDIUM",
      "message": "Function 'get_device_delta_update' is too long (159 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.403443",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 179,
      "severity": "MEDIUM",
      "message": "Function 'get_optimized_alert_data' is too long (129 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.403592",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 221,
      "severity": "MEDIUM",
      "message": "Function 'get_optimized_chart_data' is too long (225 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.403662",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 287,
      "severity": "MEDIUM",
      "message": "Function '_build_device_data' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.403731",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_optimizer.py",
      "line": 334,
      "severity": "MEDIUM",
      "message": "Function '_calculate_performance_grade' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.416735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 427,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description = self._template_string(config.get('description', 'Escalation triggered'), execution.trigger_context)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416770",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416783",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 43,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416792",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 55,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 76,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416813",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 89,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def trigger_escalation(self, trigger_type, trigger_context):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416833",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 127,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _create_escalation_execution(self, rule, trigger_context):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416848",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 151,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execution_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416863",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 170,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _process_pending_escalations(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416875",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 190,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_escalation(self, execution):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416905",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 249,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_action(self, execution, action, escalation_level):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416933",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 301,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_email_action(self, execution, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416949",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 328,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_webhook_action(self, execution, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416972",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 370,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_push_notification_action(self, execution, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.416988",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 398,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_sms_action(self, execution, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417002",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 422,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_create_ticket_action(self, execution, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 450,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execute_run_script_action(self, execution, config):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417038",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 486,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _template_string(self, template, context):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 499,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _mark_execution_failed(self, execution, error_message):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417055",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 509,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_old_executions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417067",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 528,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cancel_execution(self, execution_id):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417497",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 295,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417633",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417636",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417640",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417648",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417651",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417654",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417798",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 310,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.email_service import send_email"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417834",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 379,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import PushNotificationService"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417853",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 406,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.sms_service import send_sms"
    },
    {
      "timestamp": "2025-09-21T07:59:52.417869",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 431,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.ticketing_service import create_ticket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.420447",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 24,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.420529",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 55,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.420626",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 89,
      "severity": "MEDIUM",
      "message": "Function 'trigger_escalation' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.420675",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 127,
      "severity": "MEDIUM",
      "message": "Function '_create_escalation_execution' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.420717",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 151,
      "severity": "MEDIUM",
      "message": "Function '_execution_loop' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.420769",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 170,
      "severity": "MEDIUM",
      "message": "Function '_process_pending_escalations' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.420906",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 190,
      "severity": "MEDIUM",
      "message": "Function '_execute_escalation' is too long (206 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421026",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 249,
      "severity": "MEDIUM",
      "message": "Function '_execute_action' is too long (189 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421080",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 301,
      "severity": "MEDIUM",
      "message": "Function '_execute_email_action' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421155",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 328,
      "severity": "MEDIUM",
      "message": "Function '_execute_webhook_action' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421211",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 370,
      "severity": "MEDIUM",
      "message": "Function '_execute_push_notification_action' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421254",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 398,
      "severity": "MEDIUM",
      "message": "Function '_execute_sms_action' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421312",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 422,
      "severity": "MEDIUM",
      "message": "Function '_execute_create_ticket_action' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421383",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 450,
      "severity": "MEDIUM",
      "message": "Function '_execute_run_script_action' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421490",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 509,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_old_executions' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.421551",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/escalation_service.py",
      "line": 528,
      "severity": "MEDIUM",
      "message": "Function 'cancel_execution' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.444232",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 767,
      "severity": "LOW",
      "message": "Line too long (173 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description = f\"Latency between {source_site.name} and {dest_site.name} is {value:.1f}ms (threshold: {connection.alert_thresholds.get('latency_ms', 200)}ms)\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.444350",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 208,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444376",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 253,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444389",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 271,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444438",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 367,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _monitoring_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444455",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 396,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _sync_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444467",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 415,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "async def _monitor_all_sites(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444490",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 458,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "async def _monitor_inter_site_connections(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444512",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 499,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "async def _sync_all_sites(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444658",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 798,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _process_cross_site_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.444706",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 892,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _update_statistics(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445826",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445828",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445831",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import websockets"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445837",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445840",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445843",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445846",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import aiohttp"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445849",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ssl"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445855",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urlparse"
    },
    {
      "timestamp": "2025-09-21T07:59:52.445859",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.notification import notification_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.446175",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 687,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.446193",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 718,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:52.450925",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 208,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (128 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.450977",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 253,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451077",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 283,
      "severity": "MEDIUM",
      "message": "Function 'add_site' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451151",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 311,
      "severity": "MEDIUM",
      "message": "Function 'remove_site' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451204",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 343,
      "severity": "MEDIUM",
      "message": "Function 'add_inter_site_connection' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451256",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 367,
      "severity": "MEDIUM",
      "message": "Function '_monitoring_loop' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451296",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 396,
      "severity": "MEDIUM",
      "message": "Function '_sync_loop' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451394",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 604,
      "severity": "MEDIUM",
      "message": "Function '_calculate_site_health_score' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451460",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 709,
      "severity": "MEDIUM",
      "message": "Function '_validate_site_config' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451644",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 756,
      "severity": "MEDIUM",
      "message": "Function '_create_connection_alert' is too long (205 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451702",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 798,
      "severity": "MEDIUM",
      "message": "Function '_process_cross_site_alerts' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451741",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 825,
      "severity": "MEDIUM",
      "message": "Function '_check_connection_status_for_alert' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451803",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 843,
      "severity": "MEDIUM",
      "message": "Function '_process_remote_alert' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451865",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 867,
      "severity": "MEDIUM",
      "message": "Function '_send_cross_site_alert_notification' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.451931",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 892,
      "severity": "MEDIUM",
      "message": "Function '_update_statistics' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.452010",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 915,
      "severity": "MEDIUM",
      "message": "Function 'get_sites_summary' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.452079",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 948,
      "severity": "MEDIUM",
      "message": "Function 'get_site_details' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.452126",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 979,
      "severity": "MEDIUM",
      "message": "Function 'get_cross_site_alerts' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.452199",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/multi_site_manager.py",
      "line": 998,
      "severity": "MEDIUM",
      "message": "Function 'get_site_comparison' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.490753",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 363,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Brute force attack detected from {ip_address}: {len(recent_attempts)} failed login attempts in 15 minutes\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490773",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 430,
      "severity": "LOW",
      "message": "Line too long (163 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Suspicious network behavior detected from {device.display_name}: {anomaly.get('description', 'Anomalous activity')}\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490794",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1056,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Multiple connections to suspicious ports detected: {len(suspicious_connections)} connections\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490800",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1166,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Connection anomaly detected in {metric}: current={current_value}, mean={mean_value:.1f}, std={std_value:.1f}\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1172,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'deviation_factor': abs(current_value - mean_value) / std_value if std_value > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490808",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1237,
      "severity": "LOW",
      "message": "Line too long (148 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Bandwidth anomaly detected on {device.display_name}: {max_bw:.1f} Mbps (avg: {mean_bw:.1f} Mbps)\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490813",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1313,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Unusual {protocol.upper()} protocol activity: {current_count} connections (avg: {mean_count:.1f})\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1382,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Severe response time degradation detected on {device.display_name}: {recent_mean:.1f}ms (avg: {mean_response:.1f}ms)\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490822",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1438,
      "severity": "LOW",
      "message": "Line too long (174 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Unusual activity time detected on {device.display_name}: online at {hour_of_day}:00 (historically {online_percentage:.1f}% uptime)\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490825",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1455,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def _successful_brute_force(self, failed_attempts: Dict[str, List[datetime]], success_attempts: List[Tuple[str, datetime]]):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490828",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1464,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recent_failures = [ts for ts in failed_attempts.get(success_ip, []) if ts >= window_start and ts < success_time]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490831",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1473,
      "severity": "LOW",
      "message": "Line too long (153 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Successful brute force attack from {success_ip}: {len(recent_failures)} failures followed by successful login\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.490900",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 90,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490927",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 136,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490940",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 158,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490945",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 163,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _log_analysis_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490955",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 179,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _behavior_analysis_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490966",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 197,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _threat_correlation_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490976",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 212,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _real_time_analysis_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.490985",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 227,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_auth_logs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 273,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_network_logs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491020",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 289,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_firewall_logs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491040",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 324,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_application_logs(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491082",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 406,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_connection_patterns(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491122",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 451,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_current_connections(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491220",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 655,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _correlate_security_events(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 692,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _identify_attack_campaigns(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491281",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 774,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _update_threat_intelligence(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491296",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 800,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_old_threat_indicators(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491309",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 822,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _detect_active_attacks(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491323",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 845,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _monitor_resource_usage(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491484",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1184,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_traffic_anomalies(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491493",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1197,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_bandwidth_anomalies(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491523",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1256,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_protocol_distribution_anomalies(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.491560",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1330,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_device_behavior(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.492992",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 973,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493340",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493344",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493348",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493351",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493354",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493357",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493359",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493362",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493368",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493373",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.anomaly_detection import AnomalyDetectionEngine"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493375",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.security_scanner import security_scanner"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493667",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 627,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493671",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 628,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 629,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:52.493959",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1205,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import PerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.494034",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1352,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:52.494067",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1411,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:52.494141",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1556,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import SecurityIncident"
    },
    {
      "timestamp": "2025-09-21T07:59:52.494161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1591,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import SecurityIncident"
    },
    {
      "timestamp": "2025-09-21T07:59:52.494181",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1625,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import SecurityIncident"
    },
    {
      "timestamp": "2025-09-21T07:59:52.502028",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 90,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502096",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 136,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502174",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 179,
      "severity": "MEDIUM",
      "message": "Function '_behavior_analysis_loop' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502330",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 227,
      "severity": "MEDIUM",
      "message": "Function '_analyze_auth_logs' is too long (145 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502372",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 273,
      "severity": "MEDIUM",
      "message": "Function '_analyze_network_logs' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502442",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 289,
      "severity": "MEDIUM",
      "message": "Function '_analyze_firewall_logs' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502485",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 324,
      "severity": "MEDIUM",
      "message": "Function '_analyze_application_logs' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502570",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 346,
      "severity": "MEDIUM",
      "message": "Function '_detect_brute_force_attacks' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502639",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 376,
      "severity": "MEDIUM",
      "message": "Function '_detect_port_scanning_from_firewall' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502744",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 406,
      "severity": "MEDIUM",
      "message": "Function '_analyze_connection_patterns' is too long (167 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502786",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 451,
      "severity": "MEDIUM",
      "message": "Function '_analyze_current_connections' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502848",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 469,
      "severity": "MEDIUM",
      "message": "Function '_process_threat' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.502931",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 501,
      "severity": "MEDIUM",
      "message": "Function '_create_security_event' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503011",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 539,
      "severity": "MEDIUM",
      "message": "Function '_create_threat_alert' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503078",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 577,
      "severity": "MEDIUM",
      "message": "Function '_determine_response_actions' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503126",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 606,
      "severity": "MEDIUM",
      "message": "Function '_execute_response_action' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503195",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 624,
      "severity": "MEDIUM",
      "message": "Function '_send_threat_notification' is too long (108 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503289",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 655,
      "severity": "MEDIUM",
      "message": "Function '_correlate_security_events' is too long (139 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503386",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 711,
      "severity": "MEDIUM",
      "message": "Function '_analyze_attack_progression' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503470",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 738,
      "severity": "MEDIUM",
      "message": "Function '_detect_attack_kill_chain' is too long (124 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503534",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 774,
      "severity": "MEDIUM",
      "message": "Function '_update_threat_intelligence' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503585",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 800,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_old_threat_indicators' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503646",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 822,
      "severity": "MEDIUM",
      "message": "Function '_detect_active_attacks' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503725",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 845,
      "severity": "MEDIUM",
      "message": "Function '_monitor_resource_usage' is too long (120 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503773",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 878,
      "severity": "MEDIUM",
      "message": "Function '_create_resource_exhaustion_threat' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503858",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 904,
      "severity": "MEDIUM",
      "message": "Function 'get_monitoring_statistics' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.503927",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 936,
      "severity": "MEDIUM",
      "message": "Function 'get_recent_threats' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504013",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 986,
      "severity": "MEDIUM",
      "message": "Function '_parse_netstat_output' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504069",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1002,
      "severity": "MEDIUM",
      "message": "Function '_parse_ss_output' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504173",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1019,
      "severity": "MEDIUM",
      "message": "Function '_analyze_connection_patterns_from_netstat' is too long (166 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504296",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1071,
      "severity": "MEDIUM",
      "message": "Function '_check_suspicious_connections' is too long (198 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504462",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1128,
      "severity": "MEDIUM",
      "message": "Function '_check_connection_anomalies' is too long (242 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504602",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1197,
      "severity": "MEDIUM",
      "message": "Function '_analyze_bandwidth_anomalies' is too long (194 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504683",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1256,
      "severity": "MEDIUM",
      "message": "Function '_analyze_protocol_distribution_anomalies' is too long (126 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504771",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1292,
      "severity": "MEDIUM",
      "message": "Function '_detect_protocol_anomalies' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.504923",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1349,
      "severity": "MEDIUM",
      "message": "Function '_check_device_response_anomalies' is too long (184 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.505044",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1399,
      "severity": "MEDIUM",
      "message": "Function '_check_device_uptime_anomalies' is too long (194 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.505135",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1455,
      "severity": "MEDIUM",
      "message": "Function '_successful_brute_force' is too long (144 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.505220",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1489,
      "severity": "MEDIUM",
      "message": "Function '_analyze_application_security_event' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.505344",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1553,
      "severity": "MEDIUM",
      "message": "Function '_create_coordinated_attack_incident' is too long (145 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.505433",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1588,
      "severity": "MEDIUM",
      "message": "Function '_create_distributed_attack_incident' is too long (140 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.505503",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/network_security_monitor.py",
      "line": 1622,
      "severity": "MEDIUM",
      "message": "Function '_create_security_incident' is too long (110 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.536238",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 152,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if self.config['schedule_weekly_summaries'] and current_time.weekday() == 0 and current_time.hour == 7:  # Monday 7 AM"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536254",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 155,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "if self.config['schedule_monthly_detailed'] and current_time.day == 1 and current_time.hour == 8:  # 1st of month 8 AM"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536265",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 447,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'failed_controls_detail': failed_results if report_type == ReportType.DETAILED_TECHNICAL else failed_results[:10],"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536270",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 470,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(f\"IMMEDIATE ACTION REQUIRED: Address {scores.critical_failures} critical compliance failures\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536272",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 471,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(\"Consider implementing emergency security measures until critical issues are resolved\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536275",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 478,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(\"Overall compliance is below acceptable threshold (70%). Implement comprehensive remediation plan\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536278",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 481,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(\"Focus on addressing remaining compliance gaps to achieve industry best practices (85%+)\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536281",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 485,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(\"Compliance trend is declining. Review and strengthen compliance monitoring processes\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536284",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 490,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "framework_recommendations = self._get_framework_specific_recommendations(compliance_data['framework'], scores)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536287",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 498,
      "severity": "LOW",
      "message": "Line too long (139 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(f\"Address {len(high_risk_vulns)} high-risk security vulnerabilities that may impact compliance\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536294",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 655,
      "severity": "LOW",
      "message": "Line too long (147 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'average_compliance': round(sum(d['compliance_percentage'] for d in trend_data) / len(trend_data), 1) if trend_data else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536301",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 841,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def _identify_top_priorities(self, compliance_data: Dict[str, Any], scores: ComplianceScore) -> List[Dict[str, Any]]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536307",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 948,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(\"Address PCI DSS compliance gaps immediately to avoid payment card industry penalties\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536311",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 988,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": ".metric {{ display: inline-block; margin: 10px; padding: 15px; background-color: #e9ecef; border-radius: 5px; }}"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1006,
      "severity": "LOW",
      "message": "Line too long (174 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Compliance Score: <strong>{report.compliance_scores.get(report.framework.value, type('obj', (object,), {'overall_score': 0})).overall_score}%</strong>"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536317",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1009,
      "severity": "LOW",
      "message": "Line too long (189 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Compliance Rate: <strong>{report.compliance_scores.get(report.framework.value, type('obj', (object,), {'compliance_percentage': 0})).compliance_percentage}%</strong>"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536320",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1012,
      "severity": "LOW",
      "message": "Line too long (193 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "Critical Issues: <span class=\"critical\">{report.compliance_scores.get(report.framework.value, type('obj', (object,), {'critical_failures': 0})).critical_failures}</span>"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536323",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1025,
      "severity": "LOW",
      "message": "Line too long (232 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "{''.join(f'<h4>{finding[\"category\"]}</h4><p>Score: {finding[\"category_score\"]:.1f}% | Failed: {finding[\"failed_controls\"]} | Critical: {finding[\"critical_failures\"]}</p>' for finding in report.detaile"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536327",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1072,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "writer.writerow(['Category', 'Score', 'Total Controls', 'Failed Controls', 'Critical Failures', 'High Failures'])"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536375",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 84,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536399",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 128,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_reporting_scheduler(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536408",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 142,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _reporting_scheduler_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1097,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _schedule_daily_scorecard(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536869",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1102,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _schedule_weekly_summary(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536874",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1107,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _schedule_monthly_detailed_report(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536879",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1112,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _process_scheduled_reports(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536884",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1117,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_old_reports(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536968",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 152,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if self.config['schedule_weekly_summaries'] and current_time.weekday() == 0 and current_time.hour == 7:  # Monday 7 AM"
    },
    {
      "timestamp": "2025-09-21T07:59:52.536974",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 155,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if self.config['schedule_monthly_detailed'] and current_time.day == 1 and current_time.hour == 8:  # 1st of month 8 AM"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538013",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538016",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538022",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538025",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538504",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1045,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import csv"
    },
    {
      "timestamp": "2025-09-21T07:59:52.538508",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 1046,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import io"
    },
    {
      "timestamp": "2025-09-21T07:59:52.540346",
      "test_type": "syntax",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/compliance_reporting.py",
      "line": 458,
      "severity": "HIGH",
      "message": "Syntax error: unexpected character after line continuation character",
      "details": "File contains syntax errors",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.548702",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 179,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Device {device.display_name} has recovered - {required_successes} consecutive successful checks\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.548725",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.548753",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 70,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_auto_resolution_cycle(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.548869",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 303,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def enable(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.548875",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 308,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def disable(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.549189",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.552222",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 17,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552341",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 70,
      "severity": "MEDIUM",
      "message": "Function 'run_auto_resolution_cycle' is too long (153 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552415",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 113,
      "severity": "MEDIUM",
      "message": "Function '_should_auto_resolve_alert' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552462",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 138,
      "severity": "MEDIUM",
      "message": "Function '_get_alert_rule_type' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552533",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 159,
      "severity": "MEDIUM",
      "message": "Function '_check_device_recovery' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552667",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 184,
      "severity": "MEDIUM",
      "message": "Function '_check_response_time_recovery' is too long (196 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552743",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 230,
      "severity": "MEDIUM",
      "message": "Function '_check_connectivity_recovery' is too long (110 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552816",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 259,
      "severity": "MEDIUM",
      "message": "Function '_resolve_alert' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.552886",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_auto_resolver.py",
      "line": 285,
      "severity": "MEDIUM",
      "message": "Function 'get_stats' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.562159",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 64,
      "severity": "HIGH",
      "message": "Potential hardcoded secrets",
      "details": "Pattern: api_key\\s*=\\s*[\\\"'][^\\\"']+[\\\"']",
      "code_snippet": "API_KEY = \"api_key\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.562879",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 67,
      "severity": "HIGH",
      "message": "Potential hardcoded secrets",
      "details": "Pattern: token\\s*=\\s*[\\\"'][^\\\"']+[\\\"']",
      "code_snippet": "BEARER_TOKEN = \"bearer_token\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.574692",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 540,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=integration.timeout_seconds)) as session:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574701",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 577,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=integration.timeout_seconds)) as session:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574706",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 645,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=integration.timeout_seconds)) as session:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574710",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 685,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=integration.timeout_seconds)) as session:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574717",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 878,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=integration.timeout_seconds)) as session:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 964,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"success_rate\": (stats.successful_requests / stats.total_requests * 100) if stats.total_requests > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574801",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 154,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574820",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_integration_manager(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 201,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_integration_manager(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574879",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 296,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _sync_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574892",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 317,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _process_event_queue(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.574936",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 407,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _register_builtin_handlers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.575163",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 886,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "async def _perform_health_checks(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.575172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 898,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_auth_cache(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576224",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576229",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576232",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576235",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576238",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576241",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576246",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576250",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576253",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import base64"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576256",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import aiohttp"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576260",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ssl"
    },
    {
      "timestamp": "2025-09-21T07:59:52.576264",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.notification import notification_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.581596",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 154,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.581731",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 210,
      "severity": "MEDIUM",
      "message": "Function 'register_integration' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.581791",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 244,
      "severity": "MEDIUM",
      "message": "Function 'unregister_integration' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.581874",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 267,
      "severity": "MEDIUM",
      "message": "Function 'send_event' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.581990",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 407,
      "severity": "MEDIUM",
      "message": "Function '_register_builtin_handlers' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.582061",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 798,
      "severity": "MEDIUM",
      "message": "Function '_check_rate_limit' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.582123",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 825,
      "severity": "MEDIUM",
      "message": "Function '_apply_field_mappings' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.582199",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 898,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_auth_cache' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.582269",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 914,
      "severity": "MEDIUM",
      "message": "Function '_validate_integration_config' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.582358",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 950,
      "severity": "MEDIUM",
      "message": "Function 'get_integrations_summary' is too long (137 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.582412",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/integration_manager.py",
      "line": 981,
      "severity": "MEDIUM",
      "message": "Function 'get_integration_stats' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.593258",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 172,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'location': f\"{data.get('server', {}).get('city', 'Unknown')}, {data.get('server', {}).get('country', 'Unknown')}\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.593270",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 179,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'location': f\"{data.get('client', {}).get('city', 'Unknown')}, {data.get('client', {}).get('country', 'Unknown')}\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.593274",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 193,
      "severity": "LOW",
      "message": "Line too long (162 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Speed test completed: {result_data['download_mbps']} Mbps down, {result_data['upload_mbps']} Mbps up, {result_data['ping_ms']} ms ping\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593279",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 270,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "auto_test_enabled = Configuration.get_value('speedtest_auto_enabled', 'false').lower() == 'true'"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593296",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593304",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def is_speedtest_available(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593311",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def install_speedtest_cli(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593321",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 48,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_speed_test(self, test_type='comprehensive'):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593398",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_recent_results(self, limit=10):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593402",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 221,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_speed_statistics(self, hours=24):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593421",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 256,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_automatic_testing(self, interval_hours=6):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593428",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 264,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_periodic_tests():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593446",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 297,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_automatic_testing(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593452",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 302,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_service_status(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593754",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593757",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593760",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593763",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593766",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593770",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:52.593772",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.595653",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 32,
      "severity": "MEDIUM",
      "message": "Function 'install_speedtest_cli' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.596144",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 48,
      "severity": "MEDIUM",
      "message": "Function 'run_speed_test' is too long (834 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.596261",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 221,
      "severity": "MEDIUM",
      "message": "Function 'get_speed_statistics' is too long (151 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.596348",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 256,
      "severity": "MEDIUM",
      "message": "Function 'start_automatic_testing' is too long (136 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.596469",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/speedtest.py",
      "line": 264,
      "severity": "MEDIUM",
      "message": "Function 'run_periodic_tests' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.599612",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 27,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "return hashlib.md5(key_data).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:52.599757",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 27,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "return hashlib.md5(key_data).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:52.599925",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 82,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.599930",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.600036",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.600039",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.600043",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import OrderedDict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.600046",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pickle"
    },
    {
      "timestamp": "2025-09-21T07:59:52.600048",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.600622",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 80,
      "severity": "MEDIUM",
      "message": "Function 'cached_query' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.600746",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 29,
      "severity": "MEDIUM",
      "message": "Function 'get' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.600874",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/ultra_cache.py",
      "line": 82,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.605322",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 183,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: print\\s*\\(",
      "code_snippet": "print(f\"Error calculating uptime for alert priority device {getattr(device, 'id', 'unknown')}: {e}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.607596",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.607733",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 316,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_score(alert):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.608059",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.608065",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.608153",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 195,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:52.609435",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.609569",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 69,
      "severity": "MEDIUM",
      "message": "Function 'calculate_priority_score' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.609679",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 139,
      "severity": "MEDIUM",
      "message": "Function '_calculate_device_criticality' is too long (166 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.609742",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function '_calculate_frequency_penalty' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.609784",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 219,
      "severity": "MEDIUM",
      "message": "Function '_calculate_time_modifier' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.609859",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 243,
      "severity": "MEDIUM",
      "message": "Function '_calculate_network_impact' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.609926",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_priority.py",
      "line": 291,
      "severity": "MEDIUM",
      "message": "Function 'get_priority_summary' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.620891",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 96,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Recorded user feedback for device {device.display_name}: {predicted_type} -> {actual_type}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.620900",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 152,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Updated learning model for device {device_id}: type={most_common_actual}, accuracy={prediction_accuracy:.2f}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.620908",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 324,
      "severity": "LOW",
      "message": "Line too long (159 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Historical training completed: {training_results['devices_processed']} devices, {training_results['patterns_learned']} patterns\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.620913",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 390,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'imported_feedback_records': sum(len(feedback) for feedback in import_data.get('user_feedback', {}).values()),"
    },
    {
      "timestamp": "2025-09-21T07:59:52.620916",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 409,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.accuracy_metrics['total_predictions'] * 100) if self.accuracy_metrics['total_predictions'] > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.620918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 412,
      "severity": "LOW",
      "message": "Line too long (135 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self.accuracy_metrics['total_predictions'] * 100) if self.accuracy_metrics['total_predictions'] > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.620921",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 422,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "learning_coverage = (total_training_records / total_monitored_devices * 100) if total_monitored_devices > 0 else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.620944",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621147",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 448,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_continuous_learning(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 450,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def learning_loop():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621632",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621636",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621639",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621642",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.621651",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_analytics import DeviceBehaviorAnalytics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.624014",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624139",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 56,
      "severity": "MEDIUM",
      "message": "Function 'record_user_feedback' is too long (177 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624260",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function '_update_device_learning_model' is too long (178 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624327",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 157,
      "severity": "MEDIUM",
      "message": "Function '_extract_device_characteristics' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624396",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 183,
      "severity": "MEDIUM",
      "message": "Function '_categorize_hostname' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624434",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 202,
      "severity": "MEDIUM",
      "message": "Function '_categorize_ip_pattern' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624565",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 230,
      "severity": "MEDIUM",
      "message": "Function 'get_learned_classification' is too long (159 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624689",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Function 'train_on_historical_data' is too long (190 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624757",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 332,
      "severity": "MEDIUM",
      "message": "Function '_extract_historical_patterns' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624800",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 349,
      "severity": "MEDIUM",
      "message": "Function 'export_learning_data' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.624896",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 371,
      "severity": "MEDIUM",
      "message": "Function 'import_learning_data' is too long (139 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.625015",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 401,
      "severity": "MEDIUM",
      "message": "Function 'get_learning_statistics' is too long (188 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.625063",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_learning.py",
      "line": 448,
      "severity": "MEDIUM",
      "message": "Function 'start_continuous_learning' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.632732",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 44,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "return hashlib.md5(key_str.encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633223",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 44,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "return hashlib.md5(key_str.encode()).hexdigest()"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633657",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, default_ttl=30, max_cache_size=1000):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633677",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 50,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _evict_expired_items(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633687",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 65,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _evict_lru_items(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633725",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 143,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 169,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cached_query(ttl=30, key_prefix=\"\", invalidate_on_change=True):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 171,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def decorator(func):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 173,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633766",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 206,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_device_list():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633800",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 270,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _get_monitoring_summary():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633817",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 301,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def invalidate_device_cache():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 307,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_cache_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633828",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 312,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_query_cache(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.633834",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 319,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def app_context_func():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.634157",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.634161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.634164",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.634167",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.634171",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from functools import wraps"
    },
    {
      "timestamp": "2025-09-21T07:59:52.634174",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from threading import RLock"
    },
    {
      "timestamp": "2025-09-21T07:59:52.634297",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 272,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy import func"
    },
    {
      "timestamp": "2025-09-21T07:59:52.635747",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 169,
      "severity": "MEDIUM",
      "message": "Function 'cached_query' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.635882",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 202,
      "severity": "MEDIUM",
      "message": "Function 'get_cached_device_list' is too long (189 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.635965",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 266,
      "severity": "MEDIUM",
      "message": "Function 'get_cached_monitoring_summary' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636127",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 50,
      "severity": "MEDIUM",
      "message": "Function '_evict_expired_items' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636178",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 65,
      "severity": "MEDIUM",
      "message": "Function '_evict_lru_items' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636235",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 85,
      "severity": "MEDIUM",
      "message": "Function 'get' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636302",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 108,
      "severity": "MEDIUM",
      "message": "Function 'set' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636405",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 150,
      "severity": "MEDIUM",
      "message": "Function 'get_stats' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636470",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 171,
      "severity": "MEDIUM",
      "message": "Function 'decorator' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636581",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 206,
      "severity": "MEDIUM",
      "message": "Function '_get_device_list' is too long (175 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636656",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 270,
      "severity": "MEDIUM",
      "message": "Function '_get_monitoring_summary' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.636755",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/query_cache.py",
      "line": 173,
      "severity": "MEDIUM",
      "message": "Function 'wrapper' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.664920",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 574,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "stats.average_execution_time = (stats.average_execution_time + execution.execution_time_seconds) / 2"
    },
    {
      "timestamp": "2025-09-21T07:59:52.664946",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 954,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "async def _handle_chain_workflow_action(self, action: WorkflowAction, execution: WorkflowExecution) -> Dict[str, Any]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.664959",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1289,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"success_rate\": (stats.successful_executions / stats.total_executions * 100) if stats.total_executions > 0 else 0,"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665080",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 242,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665107",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 291,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_workflow_engine(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665120",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 309,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_workflow_engine(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665206",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 486,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _execution_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665219",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 507,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _trigger_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665230",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 525,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _process_execution_queue(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665324",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 716,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _register_builtin_action_handlers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665530",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1137,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _check_scheduled_triggers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665535",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1143,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _check_condition_triggers(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665541",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1149,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _cleanup_old_executions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665568",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1198,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _load_builtin_workflows(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.665597",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1253,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _update_engine_stats(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.666161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1044,
      "severity": "MEDIUM",
      "message": "Code quality: complex conditionals",
      "details": "",
      "code_snippet": "if isinstance(field_value, str) and isinstance(value, str) and not condition.case_sensitive:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.666713",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 820,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.666992",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:52.666996",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667000",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667003",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667015",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667018",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import copy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667021",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from concurrent.futures import ThreadPoolExecutor"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667023",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import traceback"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667027",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.integration_manager import integration_manager"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667030",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.notification import notification_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667393",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 786,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import aiohttp"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667462",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 924,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.667536",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1073,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.674147",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 242,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (136 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674202",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 291,
      "severity": "MEDIUM",
      "message": "Function 'start_workflow_engine' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674247",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 309,
      "severity": "MEDIUM",
      "message": "Function 'stop_workflow_engine' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674311",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 329,
      "severity": "MEDIUM",
      "message": "Function 'register_workflow' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674394",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 355,
      "severity": "MEDIUM",
      "message": "Function 'unregister_workflow' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674477",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 392,
      "severity": "MEDIUM",
      "message": "Function 'trigger_workflow' is too long (131 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674537",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 428,
      "severity": "MEDIUM",
      "message": "Function 'cancel_execution' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674602",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 456,
      "severity": "MEDIUM",
      "message": "Function 'approve_action' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674718",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 525,
      "severity": "MEDIUM",
      "message": "Function '_process_execution_queue' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674801",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 546,
      "severity": "MEDIUM",
      "message": "Function '_execution_completed' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674859",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 716,
      "severity": "MEDIUM",
      "message": "Function '_register_builtin_action_handlers' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674911",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 981,
      "severity": "MEDIUM",
      "message": "Function '_resolve_template' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.674979",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 999,
      "severity": "MEDIUM",
      "message": "Function '_resolve_dict_templates' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675023",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1020,
      "severity": "MEDIUM",
      "message": "Function '_evaluate_conditions' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675163",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1038,
      "severity": "MEDIUM",
      "message": "Function '_evaluate_single_condition' is too long (211 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675223",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1082,
      "severity": "MEDIUM",
      "message": "Function '_calculate_action_execution_order' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675287",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1149,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_old_executions' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675350",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1166,
      "severity": "MEDIUM",
      "message": "Function '_validate_workflow' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675408",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1198,
      "severity": "MEDIUM",
      "message": "Function '_load_builtin_workflows' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675471",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1253,
      "severity": "MEDIUM",
      "message": "Function '_update_engine_stats' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675547",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1272,
      "severity": "MEDIUM",
      "message": "Function 'get_workflows_summary' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.675611",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/workflow_automation.py",
      "line": 1303,
      "severity": "MEDIUM",
      "message": "Function 'get_workflow_details' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.684501",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 110,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "etag = hashlib.md5(response.data).hexdigest()[:16]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.684786",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 110,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "etag = hashlib.md5(response.data).hexdigest()[:16]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.684978",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 91,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "response.headers['Link'] = '<https://cdn.jsdelivr.net>; rel=dns-prefetch, <https://cdn.socket.io>; rel=dns-prefetch'"
    },
    {
      "timestamp": "2025-09-21T07:59:52.684982",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 102,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "response.headers['Expires'] = (datetime.utcnow() + timedelta(days=365)).strftime('%a, %d %b %Y %H:%M:%S GMT')"
    },
    {
      "timestamp": "2025-09-21T07:59:52.684999",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685005",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685013",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def configure_http2_settings(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685023",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 46,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def before_request(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685042",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 53,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def after_request(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685055",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 71,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_security_headers(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685064",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 82,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_performance_headers(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685072",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 93,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_caching_headers(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685092",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_server_push_hints(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685102",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 146,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def should_compress(self, response):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685114",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 164,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_performance_response(data, mimetype=None, status=200):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685123",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 177,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def enable_http2_push(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685127",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 180,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def inject_http2_push():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685317",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685321",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685325",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import mimetypes"
    },
    {
      "timestamp": "2025-09-21T07:59:52.685328",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.686330",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 53,
      "severity": "MEDIUM",
      "message": "Function 'after_request' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.686472",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/http_optimizer.py",
      "line": 93,
      "severity": "MEDIUM",
      "message": "Function 'add_caching_headers' is too long (133 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.695917",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.695964",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 106,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def callback(ref):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.695995",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 161,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696091",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 361,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def register_cache_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696097",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 366,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cache_cleanup(severity):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696115",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 396,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def register_websocket_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696120",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 401,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def websocket_cleanup(severity):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696130",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 415,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_memory_monitoring():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696137",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 424,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_memory_stats():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696438",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 184,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696488",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 278,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696495",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 287,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696572",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gc"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696578",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696581",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696584",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696586",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import weakref"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696593",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696673",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 181,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_cache import performance_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696719",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_cache import performance_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696764",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 364,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_cache import performance_cache"
    },
    {
      "timestamp": "2025-09-21T07:59:52.696783",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 399,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.websocket_optimizer import websocket_optimizer"
    },
    {
      "timestamp": "2025-09-21T07:59:52.699048",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 57,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_pool' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699126",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Function 'run_cleanup_callbacks' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699243",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 126,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699282",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 144,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699377",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function 'get_memory_stats' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699413",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 208,
      "severity": "MEDIUM",
      "message": "Function '_monitor_loop' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699478",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 224,
      "severity": "MEDIUM",
      "message": "Function '_check_memory_thresholds' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699597",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 247,
      "severity": "MEDIUM",
      "message": "Function '_perform_cleanup' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699698",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 313,
      "severity": "MEDIUM",
      "message": "Function 'get_memory_trend' is too long (131 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.699804",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 361,
      "severity": "MEDIUM",
      "message": "Function 'register_cache_cleanup' is too long (106 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.700160",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/memory_monitor.py",
      "line": 366,
      "severity": "MEDIUM",
      "message": "Function 'cache_cleanup' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.709409",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709419",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def send_wake_on_lan(self, mac_address):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709449",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 75,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def ping_device(self, ip_address, count=4):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709478",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 133,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def scan_device_ports(self, ip_address, ports=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709506",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 188,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def discover_device_info(self, ip_address):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def traceroute_to_device(self, ip_address):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709577",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 331,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_device_capabilities(self, device):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709868",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 200,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709877",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 211,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709885",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 222,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 286,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709962",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709968",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import struct"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709974",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709977",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from datetime import datetime"
    },
    {
      "timestamp": "2025-09-21T07:59:52.709980",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:52.711881",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 17,
      "severity": "MEDIUM",
      "message": "Function 'send_wake_on_lan' is too long (178 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.712016",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 75,
      "severity": "MEDIUM",
      "message": "Function 'ping_device' is too long (203 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.712130",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 133,
      "severity": "MEDIUM",
      "message": "Function 'scan_device_ports' is too long (187 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.712254",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function 'discover_device_info' is too long (195 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.712450",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'traceroute_to_device' is too long (316 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.712517",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_control.py",
      "line": 331,
      "severity": "MEDIUM",
      "message": "Function 'get_device_capabilities' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.723738",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 122,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def _should_suppress_by_rule(self, alert_type: str, device_id: int, message: str, rule: AlertCorrelationRule) -> bool:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.723748",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 236,
      "severity": "LOW",
      "message": "Line too long (167 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message=f\"Multiple {'/'.join(rule.alert_types)} alerts detected for {device.display_name} ({alert_count} alerts in {rule.time_window_minutes} minutes)\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.723753",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 318,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "for alert_type in ['anomaly_connectivity_pattern', 'anomaly_uptime_pattern', 'device_down', 'high_latency']:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.723758",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 366,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'message': f'Potential network outage: {down_devices}/{total_monitored} devices down ({down_percentage:.1f}%)'"
    },
    {
      "timestamp": "2025-09-21T07:59:52.723761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 381,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'message': f'Network performance degradation: {high_latency_devices} devices experiencing high latency'"
    },
    {
      "timestamp": "2025-09-21T07:59:52.723782",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.723860",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 174,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def correlate_and_escalate_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.723898",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 248,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_duplicate_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.724499",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.724504",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:52.724507",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from collections import defaultdict"
    },
    {
      "timestamp": "2025-09-21T07:59:52.726821",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 27,
      "severity": "MEDIUM",
      "message": "Function '_get_default_rules' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.726893",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 97,
      "severity": "MEDIUM",
      "message": "Function 'should_suppress_alert' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.726988",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 122,
      "severity": "MEDIUM",
      "message": "Function '_should_suppress_by_rule' is too long (143 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727099",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 188,
      "severity": "MEDIUM",
      "message": "Function '_check_escalation_by_rule' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727180",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 214,
      "severity": "MEDIUM",
      "message": "Function '_create_escalation_alert' is too long (128 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727220",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 248,
      "severity": "MEDIUM",
      "message": "Function 'cleanup_duplicate_alerts' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727290",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 267,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_alerts_by_type' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727384",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 301,
      "severity": "MEDIUM",
      "message": "Function 'get_correlation_stats' is too long (143 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727491",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 338,
      "severity": "MEDIUM",
      "message": "Function 'detect_network_wide_issues' is too long (169 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727603",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 390,
      "severity": "MEDIUM",
      "message": "Function 'get_alert_trends' is too long (171 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.727686",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_correlation.py",
      "line": 437,
      "severity": "MEDIUM",
      "message": "Function 'optimize_thresholds_based_on_history' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.735712",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 33,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "self.checksum = hashlib.md5(data.encode()).hexdigest()[:8]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.736251",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 33,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "self.checksum = hashlib.md5(data.encode()).hexdigest()[:8]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.736737",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __post_init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.736745",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 38,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, db, socketio, max_cache_size=1000, batch_size=50):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.736829",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 211,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.736845",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _refresh_device_cache(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.736901",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 342,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def cleanup_thread():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.737256",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.737259",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.737262",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import asyncio"
    },
    {
      "timestamp": "2025-09-21T07:59:52.737265",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.737272",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.737428",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 341,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.739012",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 336,
      "severity": "MEDIUM",
      "message": "Function 'create_websocket_optimizer' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739127",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 38,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739175",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 67,
      "severity": "MEDIUM",
      "message": "Function 'get_optimized_device_data' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739231",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Function 'get_device_delta_update' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739276",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 110,
      "severity": "MEDIUM",
      "message": "Function 'update_device_state' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739340",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 133,
      "severity": "MEDIUM",
      "message": "Function 'batch_update_devices' is too long (95 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739430",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 176,
      "severity": "MEDIUM",
      "message": "Function 'emit_optimized_update' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739478",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 193,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_stats' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739536",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 211,
      "severity": "MEDIUM",
      "message": "Function 'cleanup' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739625",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function '_refresh_device_cache' is too long (138 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.739707",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/websocket_performance_optimizer.py",
      "line": 307,
      "severity": "MEDIUM",
      "message": "Function '_emit_paginated_device_update' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.747769",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 163,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Cleaned up {deleted_count} unresolved {severity} severity alerts older than {retention_days} days\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.747796",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.747831",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 81,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_retention_cleanup(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.747949",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 314,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def enable(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.747955",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 319,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def disable(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.748276",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.749788",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 17,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.749843",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 60,
      "severity": "MEDIUM",
      "message": "Function '_load_retention_policies' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.749923",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 81,
      "severity": "MEDIUM",
      "message": "Function 'run_retention_cleanup' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.749989",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_resolved_alerts' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.750081",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 143,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_old_alerts_by_severity' is too long (124 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.750162",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 174,
      "severity": "MEDIUM",
      "message": "Function '_cleanup_auto_resolved_alerts' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.750310",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 201,
      "severity": "MEDIUM",
      "message": "Function 'get_retention_summary' is too long (230 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.750359",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 264,
      "severity": "MEDIUM",
      "message": "Function 'update_retention_policy' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.750415",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/alert_retention_policy.py",
      "line": 281,
      "severity": "MEDIUM",
      "message": "Function 'force_cleanup_by_age' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.755799",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 320,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: @app\\.route\\([^)]*POST[^)]*\\)",
      "code_snippet": "@app.route('/cdn/invalidate', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:52.756031",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 320,
      "severity": "MEDIUM",
      "message": "Potential csrf missing",
      "details": "Pattern: methods\\s*=\\s*\\[[^]]*[\\\"']POST[\\\"'][^]]*\\]",
      "code_snippet": "@app.route('/cdn/invalidate', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:52.757672",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 97,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: md5\\(",
      "code_snippet": "file_hash = hashlib.md5(f.read()).hexdigest()[:8]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758174",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 97,
      "severity": "HIGH",
      "message": "Potential weak crypto",
      "details": "Pattern: hashlib\\.md5\\(",
      "code_snippet": "file_hash = hashlib.md5(f.read()).hexdigest()[:8]"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758598",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758612",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 58,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def configure_cdn_services(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758625",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 81,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def calculate_asset_versions(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758738",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 317,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def setup_cdn_routes(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758757",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def invalidate_cdn_cache():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.758767",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 336,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_cdn_status():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.759105",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.759108",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.759113",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urljoin"
    },
    {
      "timestamp": "2025-09-21T07:59:52.759116",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.759119",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.759214",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 216,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urlparse"
    },
    {
      "timestamp": "2025-09-21T07:59:52.759273",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 338,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import jsonify"
    },
    {
      "timestamp": "2025-09-21T07:59:52.760591",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 317,
      "severity": "MEDIUM",
      "message": "Function 'setup_cdn_routes' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.760696",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 34,
      "severity": "MEDIUM",
      "message": "Function 'init_app' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.760791",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 81,
      "severity": "MEDIUM",
      "message": "Function 'calculate_asset_versions' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.760858",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 103,
      "severity": "MEDIUM",
      "message": "Function 'get_cdn_url' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.760921",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 156,
      "severity": "MEDIUM",
      "message": "Function '_get_custom_cdn_url' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.761002",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 204,
      "severity": "MEDIUM",
      "message": "Function 'get_dns_prefetch_hints' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.761071",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 251,
      "severity": "MEDIUM",
      "message": "Function 'get_cache_headers' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.761123",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 281,
      "severity": "MEDIUM",
      "message": "Function 'optimize_delivery' is too long (78 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.762383",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/cdn_manager.py",
      "line": 320,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route('/cdn/invalidate', methods=['POST'])"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 301,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "scan_thread = threading.Thread(target=run_security_scan, daemon=True, name='RuleEngine-SecurityScan')"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774175",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __post_init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774232",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 125,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774303",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 272,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_scan():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774317",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 294,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def run_security_scan():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774384",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 425,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774390",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 432,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774396",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 441,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitoring_loop():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.774406",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 457,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775049",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775053",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775056",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775059",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775063",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775151",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 192,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775191",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 271,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775205",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 293,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775242",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 364,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.775333",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 553,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import AutomationRule"
    },
    {
      "timestamp": "2025-09-21T07:59:52.778190",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 31,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778292",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 46,
      "severity": "MEDIUM",
      "message": "Function 'evaluate' is too long (132 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778376",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 84,
      "severity": "MEDIUM",
      "message": "Function '_get_field_value' is too long (127 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778471",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 128,
      "severity": "MEDIUM",
      "message": "Function 'execute' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778531",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 168,
      "severity": "MEDIUM",
      "message": "Function '_execute_single_action' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778590",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 189,
      "severity": "MEDIUM",
      "message": "Function '_send_notification' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778658",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 219,
      "severity": "MEDIUM",
      "message": "Function '_create_alert' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778790",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 254,
      "severity": "MEDIUM",
      "message": "Function '_trigger_scan' is too long (215 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778868",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 313,
      "severity": "MEDIUM",
      "message": "Function '_update_device' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778916",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 344,
      "severity": "MEDIUM",
      "message": "Function '_log_event' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.778989",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 361,
      "severity": "MEDIUM",
      "message": "Function '_send_webhook' is too long (116 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.779043",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 401,
      "severity": "MEDIUM",
      "message": "Function '_substitute_template' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.779111",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 432,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.779287",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 463,
      "severity": "MEDIUM",
      "message": "Function 'evaluate_rules' is too long (255 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.779375",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/rule_engine.py",
      "line": 546,
      "severity": "MEDIUM",
      "message": "Function 'test_rule' is too long (127 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.801155",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 365,
      "severity": "LOW",
      "message": "Line too long (139 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Bandwidth test completed: {download_speed:.2f} Mbps down, {upload_speed:.2f} Mbps up, {ping_result:.2f} ms ping\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 470,
      "severity": "LOW",
      "message": "Line too long (155 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"{device_name} {snapshot.metric_type.value} is {snapshot.value:.2f} {snapshot.unit} (threshold: {threshold:.2f} {snapshot.unit})\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.801180",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 591,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "description=f\"Current average download speed is {avg_download:.1f} Mbps, which may be insufficient for modern usage\","
    },
    {
      "timestamp": "2025-09-21T07:59:52.801190",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 818,
      "severity": "LOW",
      "message": "Line too long (146 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "correlation = (n * sum_xy - sum_x * sum_y) / ((n * sum_x2 - sum_x * sum_x) ** 0.5 * (n * sum(yi * yi for yi in y) - sum_y * sum_y) ** 0.5)"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801262",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 141,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801284",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 182,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_analysis(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801295",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 200,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_analysis(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801303",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 212,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analysis_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801321",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 246,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _bandwidth_monitoring_loop(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 262,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _collect_performance_snapshots(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801365",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 330,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _perform_bandwidth_test(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801385",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 370,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _analyze_network_latency(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801409",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 416,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _check_performance_alerts(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.801470",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 545,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _generate_optimization_recommendations(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802534",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802537",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802540",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802543",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802546",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802549",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import speedtest"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802554",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 27,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from enum import Enum"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802558",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802561",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802563",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import struct"
    },
    {
      "timestamp": "2025-09-21T07:59:52.802568",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.notification import notification_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.807337",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 141,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.807393",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 182,
      "severity": "MEDIUM",
      "message": "Function 'start_analysis' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.807491",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 212,
      "severity": "MEDIUM",
      "message": "Function '_analysis_loop' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.807643",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 262,
      "severity": "MEDIUM",
      "message": "Function '_collect_performance_snapshots' is too long (187 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.807743",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 330,
      "severity": "MEDIUM",
      "message": "Function '_perform_bandwidth_test' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.807827",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 370,
      "severity": "MEDIUM",
      "message": "Function '_analyze_network_latency' is too long (126 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.807934",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 416,
      "severity": "MEDIUM",
      "message": "Function '_check_performance_alerts' is too long (99 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808035",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 452,
      "severity": "MEDIUM",
      "message": "Function '_create_performance_alert' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808079",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 475,
      "severity": "MEDIUM",
      "message": "Function '_get_metric_recommendations' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808161",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 523,
      "severity": "MEDIUM",
      "message": "Function '_send_performance_alert' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808210",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 545,
      "severity": "MEDIUM",
      "message": "Function '_generate_optimization_recommendations' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808275",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 572,
      "severity": "MEDIUM",
      "message": "Function '_analyze_bandwidth_optimization' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808337",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 607,
      "severity": "MEDIUM",
      "message": "Function '_analyze_latency_optimization' is too long (97 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808369",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 644,
      "severity": "MEDIUM",
      "message": "Function '_analyze_network_configuration' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808507",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 674,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_summary' is too long (214 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808673",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 732,
      "severity": "MEDIUM",
      "message": "Function 'get_device_performance_analysis' is too long (258 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808753",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 802,
      "severity": "MEDIUM",
      "message": "Function '_calculate_trend' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808875",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 827,
      "severity": "MEDIUM",
      "message": "Function '_calculate_device_performance_level' is too long (180 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.808956",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 887,
      "severity": "MEDIUM",
      "message": "Function 'get_optimization_recommendations' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.809009",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/performance_analyzer.py",
      "line": 908,
      "severity": "MEDIUM",
      "message": "Function 'get_performance_alerts' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.818728",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, db_session=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.818826",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 207,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, db_session=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.819169",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.819173",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import math"
    },
    {
      "timestamp": "2025-09-21T07:59:52.819177",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from sqlalchemy.orm import Query"
    },
    {
      "timestamp": "2025-09-21T07:59:52.819180",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import request"
    },
    {
      "timestamp": "2025-09-21T07:59:52.820556",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 262,
      "severity": "MEDIUM",
      "message": "Function 'create_pagination_response' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.820708",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 24,
      "severity": "MEDIUM",
      "message": "Function 'paginate_query' is too long (191 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.820781",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function '_iter_pages' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.820876",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 133,
      "severity": "MEDIUM",
      "message": "Function 'paginate_raw_sql' is too long (136 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.820915",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 183,
      "severity": "MEDIUM",
      "message": "Function 'get_request_pagination' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.821026",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/pagination.py",
      "line": 210,
      "severity": "MEDIUM",
      "message": "Function 'cursor_paginate' is too long (161 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.851127",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 235,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "'avg_cluster_size': round(statistics.mean([len(cluster) for cluster in failure_clusters]), 2) if failure_clusters else 0"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851142",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 240,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recent_failures = len([f for f in failures if (datetime.utcnow() - f).total_seconds() < 86400 * 7])  # Last 7 days"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851146",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 241,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "older_failures = len([f for f in failures if 86400 * 14 > (datetime.utcnow() - f).total_seconds() >= 86400 * 7])  # 7-14 days ago"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851156",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 506,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def _generate_failure_reasoning(self, indicators: Dict, trends: Dict, warnings: Dict, risk_score: float) -> List[str]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 578,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "dashboard_url = f\"http://{Configuration.get_value('host', 'localhost')}:{Configuration.get_value('port', '5000')}\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.851178",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1118,
      "severity": "LOW",
      "message": "Line too long (141 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.info(f\"Early warning scan: {len(high_risk_devices)} high-risk devices, {warnings_sent} warnings sent\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851182",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1175,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "dashboard_url = f\"http://{Configuration.get_value('host', 'localhost')}:{Configuration.get_value('port', '5000')}\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.851190",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1358,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def _generate_network_recommendations(self, analysis: Dict, high_risk_count: int, infrastructure_at_risk: int) -> List[str]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851194",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1379,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "recommendations.append(f\"\ud83c\udfd7\ufe0f {infrastructure_at_risk} critical infrastructure device(s) at risk - prioritize immediately\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851218",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851695",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1077,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_early_warning_system(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.851700",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1079,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def early_warning_loop():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.852894",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 837,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.852907",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 853,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.853176",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.853180",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.853183",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.853186",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.853192",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.device_analytics import DeviceBehaviorAnalytics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.853196",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.push_notifications import push_service"
    },
    {
      "timestamp": "2025-09-21T07:59:52.860650",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 31,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.860848",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 72,
      "severity": "MEDIUM",
      "message": "Function 'analyze_failure_risk' is too long (281 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.860980",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 162,
      "severity": "MEDIUM",
      "message": "Function '_analyze_failure_indicators' is too long (190 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.861103",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 207,
      "severity": "MEDIUM",
      "message": "Function '_analyze_failure_clusters' is too long (187 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.861237",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 253,
      "severity": "MEDIUM",
      "message": "Function '_analyze_performance_trends' is too long (208 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.861317",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 311,
      "severity": "MEDIUM",
      "message": "Function '_calculate_trend_direction' is too long (119 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.861607",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 340,
      "severity": "MEDIUM",
      "message": "Function '_detect_early_warnings' is too long (468 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.861716",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 438,
      "severity": "MEDIUM",
      "message": "Function '_calculate_failure_risk_score' is too long (172 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.861895",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 506,
      "severity": "MEDIUM",
      "message": "Function '_generate_failure_reasoning' is too long (214 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862018",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 554,
      "severity": "MEDIUM",
      "message": "Function '_trigger_failure_alert' is too long (182 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862191",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 595,
      "severity": "MEDIUM",
      "message": "Function 'analyze_failure_patterns' is too long (271 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862346",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 679,
      "severity": "MEDIUM",
      "message": "Function '_analyze_temporal_failure_patterns' is too long (246 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862428",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 740,
      "severity": "MEDIUM",
      "message": "Function '_detect_failure_cascades' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862533",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 782,
      "severity": "MEDIUM",
      "message": "Function '_analyze_cascade' is too long (160 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862644",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 824,
      "severity": "MEDIUM",
      "message": "Function '_analyze_ip_pattern' is too long (166 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862753",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 862,
      "severity": "MEDIUM",
      "message": "Function '_analyze_failure_sequences' is too long (164 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.862916",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 907,
      "severity": "MEDIUM",
      "message": "Function '_analyze_network_impact' is too long (221 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.863119",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 973,
      "severity": "MEDIUM",
      "message": "Function 'predict_device_mtbf' is too long (324 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.863250",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1077,
      "severity": "MEDIUM",
      "message": "Function 'start_early_warning_system' is too long (174 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.863382",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1134,
      "severity": "MEDIUM",
      "message": "Function '_send_early_warning' is too long (223 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.863442",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1196,
      "severity": "MEDIUM",
      "message": "Function '_update_early_warning_status' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.863484",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1224,
      "severity": "MEDIUM",
      "message": "Function 'get_early_warning_status' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.863678",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1248,
      "severity": "MEDIUM",
      "message": "Function 'analyze_network_failure_risk' is too long (318 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.863774",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1358,
      "severity": "MEDIUM",
      "message": "Function '_generate_network_recommendations' is too long (127 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.864027",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/predictive_failure.py",
      "line": 1079,
      "severity": "MEDIUM",
      "message": "Function 'early_warning_loop' is too long (150 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.877226",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.877243",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask_sqlalchemy import SQLAlchemy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.877248",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import statistics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.877274",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 58,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:52.877288",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 82,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:52.877338",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 181,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:52.877393",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 290,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import MonitoringData"
    },
    {
      "timestamp": "2025-09-21T07:59:52.878881",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 20,
      "severity": "MEDIUM",
      "message": "Function 'calculate_device_status' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.878948",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 53,
      "severity": "MEDIUM",
      "message": "Function 'calculate_uptime_percentage' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.879026",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 78,
      "severity": "MEDIUM",
      "message": "Function 'get_response_time_stats' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.879073",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 115,
      "severity": "MEDIUM",
      "message": "Function '_percentile' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.879169",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 129,
      "severity": "MEDIUM",
      "message": "Function 'get_availability_report' is too long (147 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.879264",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 177,
      "severity": "MEDIUM",
      "message": "Function '_calculate_downtime_periods' is too long (145 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.879364",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 224,
      "severity": "MEDIUM",
      "message": "Function 'get_network_health_summary' is too long (157 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.879403",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 263,
      "severity": "MEDIUM",
      "message": "Function '_calculate_health_score' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.879504",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/device_metrics_service.py",
      "line": 285,
      "severity": "MEDIUM",
      "message": "Function 'get_trending_metrics' is too long (152 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.888203",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 25,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.debug(f\"Updated push service config: enabled={self.enabled}, topic={self.topic}, server={self.server}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888216",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 139,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "headers[\"Tags\"] = tags.encode('utf-8').decode('latin-1') if any(ord(c) > 127 for c in tags) else tags"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888220",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 180,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "self._log_notification(title, message, priority, tags, 'failed', f\"Network unreachable (attempt {attempt + 1})\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888223",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 192,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "logger.error(f\"Unexpected error sending push notification after {retry_count} attempts: {error_msg}\")"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888227",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 231,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def send_new_device_alert(self, device_name: str, ip_address: str, device_type: str = None, dashboard_url: str = None) -> bool:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888230",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 264,
      "severity": "LOW",
      "message": "Line too long (128 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def send_high_latency_alert(self, device_name: str, ip_address: str, avg_latency: float, dashboard_url: str = None) -> bool:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888233",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 277,
      "severity": "LOW",
      "message": "Line too long (162 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def send_anomaly_alert(self, device_name: str, ip_address: str, anomaly_type: str, message: str, severity: str = \"medium\", dashboard_url: str = None) -> bool:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888237",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 300,
      "severity": "LOW",
      "message": "Line too long (143 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def send_security_alert(self, device_name: str, ip_address: str, vulnerability: str, risk_score: float, dashboard_url: str = None) -> bool:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888239",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 305,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message = f\"Security issue detected on {device_name} ({ip_address}): {vulnerability} (Risk: {risk_score:.1f}/10)\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.888242",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 321,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message = \"This is a test notification from your HomeNetMon system. If you received this, push notifications are working correctly!\""
    },
    {
      "timestamp": "2025-09-21T07:59:52.888256",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888263",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def update_config_from_database(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888815",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888822",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from config import Config"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888833",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Configuration"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888846",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888849",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 41,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urlparse"
    },
    {
      "timestamp": "2025-09-21T07:59:52.888928",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 200,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.889001",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 335,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import NotificationHistory"
    },
    {
      "timestamp": "2025-09-21T07:59:52.890831",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 18,
      "severity": "MEDIUM",
      "message": "Function 'update_config_from_database' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.890959",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 37,
      "severity": "MEDIUM",
      "message": "Function 'test_connectivity' is too long (160 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.891211",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 94,
      "severity": "MEDIUM",
      "message": "Function 'send_notification' is too long (402 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.891302",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function 'send_new_device_alert' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.891342",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 245,
      "severity": "MEDIUM",
      "message": "Function 'send_network_scan_complete' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.891426",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 277,
      "severity": "MEDIUM",
      "message": "Function 'send_anomaly_alert' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.891495",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 300,
      "severity": "MEDIUM",
      "message": "Function 'send_security_alert' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.891586",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/push_notifications.py",
      "line": 330,
      "severity": "MEDIUM",
      "message": "Function '_log_notification' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.904661",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 221,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "def set_configuration(self, key: str, value: Any, description: str = None, user: str = 'system', validate: bool = True) -> tuple[bool, str]:"
    },
    {
      "timestamp": "2025-09-21T07:59:52.904704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 35,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self, app=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.904720",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 60,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _setup_validation_rules(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.904958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 548,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def start_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.904965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 556,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def monitoring_loop():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.904975",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 572,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def stop_monitoring(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905539",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 1,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905543",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 2,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905546",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 3,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905548",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 4,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import ipaddress"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905551",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import smtplib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905554",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import requests"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905774",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 462,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import socket"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905785",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 479,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urlparse"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905797",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 498,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from urllib.parse import urlparse"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905806",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 511,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.905819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 534,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.908289",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 35,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.908451",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 60,
      "severity": "MEDIUM",
      "message": "Function '_setup_validation_rules' is too long (255 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.908560",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 182,
      "severity": "MEDIUM",
      "message": "Function 'validate_configuration' is too long (100 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.908695",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 221,
      "severity": "MEDIUM",
      "message": "Function 'set_configuration' is too long (175 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.908859",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 292,
      "severity": "MEDIUM",
      "message": "Function 'rollback_configuration' is too long (210 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.908942",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 347,
      "severity": "MEDIUM",
      "message": "Function 'get_configuration_history' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.909042",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 406,
      "severity": "MEDIUM",
      "message": "Function '_emit_config_change_event' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.909146",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 447,
      "severity": "MEDIUM",
      "message": "Function '_validate_smtp_config' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.909329",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/configuration_service.py",
      "line": 548,
      "severity": "MEDIUM",
      "message": "Function 'start_monitoring' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.919459",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 85,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def shutdown(self, wait=True):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.919494",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wrapper(*args, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.919500",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 134,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _monitor_and_adjust(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.919570",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 270,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def __init__(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.919605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def optimize_pools_for_workload(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.919616",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 355,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def shutdown_all(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920021",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920025",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920028",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920031",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920034",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import psutil"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920038",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from dataclasses import dataclass"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920042",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import weakref"
    },
    {
      "timestamp": "2025-09-21T07:59:52.920165",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 282,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import atexit"
    },
    {
      "timestamp": "2025-09-21T07:59:52.922185",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 36,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (143 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922346",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 93,
      "severity": "MEDIUM",
      "message": "Function '_monitored_task' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922423",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 134,
      "severity": "MEDIUM",
      "message": "Function '_monitor_and_adjust' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922500",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 160,
      "severity": "MEDIUM",
      "message": "Function '_calculate_adjustment' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922560",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 197,
      "severity": "MEDIUM",
      "message": "Function '_adjust_pool_size' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922639",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 228,
      "severity": "MEDIUM",
      "message": "Function 'get_stats' is too long (122 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922682",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 270,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922726",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 285,
      "severity": "MEDIUM",
      "message": "Function 'get_pool' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922813",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 308,
      "severity": "MEDIUM",
      "message": "Function 'get_system_resource_summary' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922868",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 337,
      "severity": "MEDIUM",
      "message": "Function 'optimize_pools_for_workload' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.922915",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/thread_pool_manager.py",
      "line": 355,
      "severity": "MEDIUM",
      "message": "Function 'shutdown_all' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.933712",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 509,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Opened cache');"
    },
    {
      "timestamp": "2025-09-21T07:59:52.933735",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 523,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Deleting old cache:', cacheName);"
    },
    {
      "timestamp": "2025-09-21T07:59:52.933772",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 577,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Background sync triggered');"
    },
    {
      "timestamp": "2025-09-21T07:59:52.938148",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 278,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def preload_bundles(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.938232",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 437,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def init_resource_optimization(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.938251",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 470,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_resource_bundle_info():"
    },
    {
      "timestamp": "2025-09-21T07:59:52.938314",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 600,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def add_static_compression_middleware(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.938328",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 622,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def compressed_static(filename):"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939015",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 5,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939022",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 6,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import hashlib"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939025",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 7,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939028",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import gzip"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939030",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import brotli"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939033",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939036",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import logging"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939041",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from pathlib import Path"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939043",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import mimetypes"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939046",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from flask import current_app"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939135",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939147",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 222,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import re"
    },
    {
      "timestamp": "2025-09-21T07:59:52.939349",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 603,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from werkzeug.exceptions import NotFound"
    },
    {
      "timestamp": "2025-09-21T07:59:52.942109",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 437,
      "severity": "MEDIUM",
      "message": "Function 'init_resource_optimization' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942257",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 600,
      "severity": "MEDIUM",
      "message": "Function 'add_static_compression_middleware' is too long (191 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942357",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 23,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942467",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 89,
      "severity": "MEDIUM",
      "message": "Function '_get_bundle_url' is too long (135 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942533",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 120,
      "severity": "MEDIUM",
      "message": "Function '_should_regenerate_bundle' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942637",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 148,
      "severity": "MEDIUM",
      "message": "Function '_create_bundle' is too long (173 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942724",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 220,
      "severity": "MEDIUM",
      "message": "Function '_minify_js' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942819",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function '_create_compressed_versions' is too long (150 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942952",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 292,
      "severity": "MEDIUM",
      "message": "Function 'get_bundle_info' is too long (123 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.942989",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 329,
      "severity": "MEDIUM",
      "message": "Function '__init__' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.943061",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 362,
      "severity": "MEDIUM",
      "message": "Function 'get_optimized_headers' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.943132",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 386,
      "severity": "MEDIUM",
      "message": "Function 'get_best_encoding' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.943198",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 408,
      "severity": "MEDIUM",
      "message": "Function 'create_precompressed_files' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.943366",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 622,
      "severity": "MEDIUM",
      "message": "Function 'compressed_static' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:52.945884",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/services/resource_optimizer.py",
      "line": 621,
      "severity": "MEDIUM",
      "message": "Route missing authentication",
      "details": "Consider adding authentication decorator",
      "code_snippet": "@app.route(static_route, endpoint='static')"
    },
    {
      "timestamp": "2025-09-21T07:59:52.993540",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/topology.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.NetworkTopology = {svg: null, simulation: null, nodes: [], links: [], width: 800, height: 600, initialized: false };function initializeNetworkTopology() {const container = document.getElementBy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.993559",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/topology.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.NetworkTopology = {svg: null, simulation: null, nodes: [], links: [], width: 800, height: 600, initialized: false };function initializeNetworkTopology() {const container = document.getElementBy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.993755",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/topology.js",
      "line": 1,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "window.NetworkTopology = {svg: null, simulation: null, nodes: [], links: [], width: 800, height: 600, initialized: false };function initializeNetworkTopology() {const container = document.getElementBy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.993759",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/topology.js",
      "line": 1,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "window.NetworkTopology = {svg: null, simulation: null, nodes: [], links: [], width: 800, height: 600, initialized: false };function initializeNetworkTopology() {const container = document.getElementBy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.993939",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/topology.js",
      "line": 1,
      "severity": "LOW",
      "message": "Line too long (7166 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "window.NetworkTopology = {svg: null, simulation: null, nodes: [], links: [], width: 800, height: 600, initialized: false };function initializeNetworkTopology() {const container = document.getElementBy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.994237",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/topology.js",
      "line": 1,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "window.NetworkTopology = {svg: null, simulation: null, nodes: [], links: [], width: 800, height: 600, initialized: false };function initializeNetworkTopology() {const container = document.getElementBy"
    },
    {
      "timestamp": "2025-09-21T07:59:52.997072",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/dashboard.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.Dashboard = {charts: {}, refreshInterval: null, initialized: false };class UserPreferences {constructor() {this.storageKey = 'homenetmon-dashboard-prefs';this.defaults = {showPerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.997080",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/dashboard.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.Dashboard = {charts: {}, refreshInterval: null, initialized: false };class UserPreferences {constructor() {this.storageKey = 'homenetmon-dashboard-prefs';this.defaults = {showPerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.997106",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/dashboard.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.Dashboard = {charts: {}, refreshInterval: null, initialized: false };class UserPreferences {constructor() {this.storageKey = 'homenetmon-dashboard-prefs';this.defaults = {showPerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.997110",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/dashboard.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.Dashboard = {charts: {}, refreshInterval: null, initialized: false };class UserPreferences {constructor() {this.storageKey = 'homenetmon-dashboard-prefs';this.defaults = {showPerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.997230",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/dashboard.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.Dashboard = {charts: {}, refreshInterval: null, initialized: false };class UserPreferences {constructor() {this.storageKey = 'homenetmon-dashboard-prefs';this.defaults = {showPerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:52.998693",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/dashboard.js",
      "line": 1,
      "severity": "LOW",
      "message": "Line too long (30657 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "window.Dashboard = {charts: {}, refreshInterval: null, initialized: false };class UserPreferences {constructor() {this.storageKey = 'homenetmon-dashboard-prefs';this.defaults = {showPerformanceMetrics"
    },
    {
      "timestamp": "2025-09-21T07:59:53.001040",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002230",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002236",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002240",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002249",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002268",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002275",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002281",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002285",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002307",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002311",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002319",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002332",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002338",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002343",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002347",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002353",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002356",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002360",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002375",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.002387",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.003480",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.js",
      "line": 1,
      "severity": "LOW",
      "message": "Line too long (22671 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "window.HomeNetMon = {config: {apiBase: '/api', socketConnected: false, autoRefresh: true, refreshInterval: 30000 }, data: {devices: [], alerts: [], lastUpdate: null }, socket: null };document.addEvent"
    },
    {
      "timestamp": "2025-09-21T07:59:53.005239",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/dashboard.css",
      "line": 1,
      "severity": "LOW",
      "message": "Line too long (5019 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": ".dashboard-container {padding:20px 0}.device-grid {display:grid;grid-template-columns:repeat(auto-fill, minmax(300px, 1fr));gap:1rem;margin-bottom:2rem}.device-card {transition:transform 0.2s ease-in-"
    },
    {
      "timestamp": "2025-09-21T07:59:53.006006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/bundles/core.css",
      "line": 1,
      "severity": "LOW",
      "message": "Line too long (5019 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": ".dashboard-container {padding:20px 0}.device-grid {display:grid;grid-template-columns:repeat(auto-fill, minmax(300px, 1fr));gap:1rem;margin-bottom:2rem}.device-card {transition:transform 0.2s ease-in-"
    },
    {
      "timestamp": "2025-09-21T07:59:53.007861",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/lazy-loader.js",
      "line": 33,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[LazyLoader] Loaded: ${name}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.011221",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/html-sanitizer.js",
      "line": 205,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "if (url.startsWith('/') || url.startsWith('./') || url.startsWith('../') ||"
    },
    {
      "timestamp": "2025-09-21T07:59:53.013169",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/html-sanitizer.js",
      "line": 50,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udee1\ufe0f HTML Sanitizer initialized');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.015052",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/html-sanitizer.js",
      "line": 242,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "`<button type=\"${this.escapeHtml(type)}\" class=\"${this.escapeHtml(className)}\">${this.sanitize(content)}</button>`,"
    },
    {
      "timestamp": "2025-09-21T07:59:53.015056",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/html-sanitizer.js",
      "line": 246,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "return `<a href=\"${this.escapeHtml(safeHref)}\" class=\"${this.escapeHtml(className)}\">${this.escapeHtml(text)}</a>`;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.022245",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/read-receipt-tracker.js",
      "line": 380,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[ReadReceiptTracker] ${message}`, data);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.024891",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/read-receipt-tracker.js",
      "line": 63,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "this.log('Generated tracking token', { notificationId, token: data.tracking_token.substring(0, 8) + '...' });"
    },
    {
      "timestamp": "2025-09-21T07:59:53.024900",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/read-receipt-tracker.js",
      "line": 297,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "async requestConsent(message = 'This notification includes read receipt tracking. Do you consent to engagement analytics?') {"
    },
    {
      "timestamp": "2025-09-21T07:59:53.030994",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 22,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd12 CSRF Handler initialized with token:', this.token ? 'PRESENT' : 'MISSING');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.031019",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 49,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd12 Refreshing CSRF token from API...');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.031036",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 68,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd12 CSRF token refreshed successfully');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.031054",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 87,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd0d CSRF Handler - Alerts request:', {"
    },
    {
      "timestamp": "2025-09-21T07:59:53.031073",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 105,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd12 CSRF Handler - Added token to alerts request');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.031084",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 112,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\ude80 Making alerts request with options:', {"
    },
    {
      "timestamp": "2025-09-21T07:59:53.031105",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 121,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udea8 Failed request details:', { url, options });"
    },
    {
      "timestamp": "2025-09-21T07:59:53.031213",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/csrf-handler.js",
      "line": 249,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('\ud83d\udd12 CSRF error detected, attempting automatic token refresh...');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.051540",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 71,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Initializing dashboard...');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.051578",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 113,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Dashboard initialized');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.051727",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 340,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Ping result:', response);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.051742",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 357,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Monitoring toggled:', response);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.060366",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 434,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "toast.className = `alert alert-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'info'} toast-notification`;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.060379",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 722,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "`<button type=\"button\" class=\"btn btn-sm btn-outline-${color} me-2\" onclick=\"${action.onClick}\">${action.text}</button>`"
    },
    {
      "timestamp": "2025-09-21T07:59:53.060382",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 730,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<small class=\"text-white-50\">${new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</small>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.060385",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 731,
      "severity": "LOW",
      "message": "Line too long (157 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button type=\"button\" class=\"btn-close btn-close-white\" onclick=\"window.toastManager.dismissToast('${toastId}')\" aria-label=\"Close\"></button>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.060399",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 1108,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "deviceCountSummary.textContent = `${totalDevices} devices total \u2022 ${onlineDevices} online \u2022 ${offlineDevices} offline`;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.060406",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/dashboard.js",
      "line": 1268,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "noDevicesState.querySelector('p').textContent = 'No devices match your search criteria. Try adjusting your filters.';"
    },
    {
      "timestamp": "2025-09-21T07:59:53.072313",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/real-time-updates.js",
      "line": 20,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Initializing real-time updates...');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.072346",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/real-time-updates.js",
      "line": 56,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Real-time updates connected');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.072360",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/real-time-updates.js",
      "line": 71,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Real-time updates disconnected:', reason);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.072492",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/real-time-updates.js",
      "line": 281,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Subscribing to updates:', room);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.072504",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/real-time-updates.js",
      "line": 294,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Unsubscribing from updates:', room);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.072533",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/real-time-updates.js",
      "line": 333,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`Scheduling reconnect attempt ${RealTimeUpdates.reconnectAttempts} in ${delay}ms`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.081540",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/network-topology.js",
      "line": 24,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Initializing network topology...');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.081555",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/network-topology.js",
      "line": 36,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Network topology initialized');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.082771",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/network-topology.js",
      "line": 141,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "x: Math.random() * NetworkTopology.width,"
    },
    {
      "timestamp": "2025-09-21T07:59:53.082776",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/network-topology.js",
      "line": 142,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "y: Math.random() * NetworkTopology.height"
    },
    {
      "timestamp": "2025-09-21T07:59:53.085644",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/network-topology.js",
      "line": 141,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "x: Math.random() * NetworkTopology.width,"
    },
    {
      "timestamp": "2025-09-21T07:59:53.085650",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/network-topology.js",
      "line": 142,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "y: Math.random() * NetworkTopology.height"
    },
    {
      "timestamp": "2025-09-21T07:59:53.088683",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/app.js",
      "line": 24,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('HomeNetMon application initializing...');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.088697",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/app.js",
      "line": 37,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('HomeNetMon application initialized');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.088709",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/app.js",
      "line": 51,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Socket.IO connected');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.088717",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/app.js",
      "line": 57,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Socket.IO disconnected');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.088814",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/app.js",
      "line": 212,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Refreshing data...');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103375",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 36,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Initializing PWA functionality');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103396",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 56,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] PWA initialization complete');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103410",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 71,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Service Worker registered successfully');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103417",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 75,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] New service worker version available');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103438",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 102,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] IndexedDB initialized');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103481",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 159,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Browser online event');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103487",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 164,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Browser offline event');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103501",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 181,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] PWA installed successfully');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103518",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 202,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Page navigation detected, suppressing offline events');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103534",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 220,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Ignoring connection event during page navigation');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103560",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 253,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Ignoring rapid offline event during transition');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103568",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 260,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Confirmed offline status after grace period');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103586",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 281,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[PWAManager] Connection verification: ${isActuallyOnline ? 'online' : 'offline'}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103599",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 295,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Connection verification failed, going offline');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103639",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 348,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Message from Service Worker:', data);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103660",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 376,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Push notifications enabled');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103669",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 384,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Push notifications denied');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103683",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 400,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Push subscription created');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103716",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 447,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Push subscription registered with server');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103734",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 470,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[PWAManager] Data stored offline in ${storeName}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103761",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 507,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Starting offline data sync');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103774",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 522,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Offline data sync complete');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103878",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 670,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[PWAManager] Suppressing duplicate notification: ${title}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103976",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 807,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] User accepted install prompt');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.103981",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 810,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] User dismissed install prompt');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.104019",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 863,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[PWAManager] Cache updated for: ${url}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.104025",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 867,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[PWAManager] Background sync complete: ${syncTag}`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.104033",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 875,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('[PWAManager] Checked for updates');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.104042",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 884,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`[PWAManager] Event tracked: ${eventName}`, properties);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.109830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/static/js/pwa-manager.js",
      "line": 322,
      "severity": "LOW",
      "message": "Line too long (133 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "(this.connectionState.lastOfflineTime && (now - this.connectionState.lastOfflineTime) > this.config.minOfflineDuration) :"
    },
    {
      "timestamp": "2025-09-21T07:59:53.131293",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/helm/homenetmon/templates/configmap.yaml",
      "line": 97,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "add_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';\";"
    },
    {
      "timestamp": "2025-09-21T07:59:53.133576",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/helm/homenetmon/templates/secret.yaml",
      "line": 69,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "cert-manager.io/cluster-issuer: {{ .Values.ingress.annotations.\"cert-manager.io/cluster-issuer\" | default \"letsencrypt-prod\" }}"
    },
    {
      "timestamp": "2025-09-21T07:59:53.149278",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/widgets/performance_widget.html",
      "line": 261,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log(`\ud83d\udd27 Initializing performance widget: ${widgetId} (${widgetSize})`);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.150761",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/widgets/performance_widget.html",
      "line": 358,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "healthData.push(88 + Math.random() * 8);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.152005",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/widgets/performance_widget.html",
      "line": 2,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<!-- Usage: {% include 'widgets/performance_widget.html' with widget_id='unique-id', widget_size='small|medium|large' %} -->"
    },
    {
      "timestamp": "2025-09-21T07:59:53.152010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/widgets/performance_widget.html",
      "line": 52,
      "severity": "LOW",
      "message": "Line too long (129 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"progress-bar bg-success\" id=\"{{ widget_id }}-uptime-bar\" style=\"width: 0%\"></div>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.154190",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/widgets/performance_widget.html",
      "line": 358,
      "severity": "MEDIUM",
      "message": "JavaScript weak random",
      "details": "Pattern: Math\\.random\\(\\)",
      "code_snippet": "healthData.push(88 + Math.random() * 8);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159672",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 5,
      "severity": "LOW",
      "message": "Line too long (152 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<img src=\"{{ url_for('static', filename='images/shaky8-navbar.jpg') }}?v=20250830\" alt=\"SHAKY8\" height=\"32\" width=\"32\" class=\"me-2 rounded\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159678",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 16,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'dashboard' %} active{% endif %}\" href=\"{{ url_for('dashboard') }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159681",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 21,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'alerts' %} active{% endif %}\" href=\"{{ url_for('alerts') }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159684",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 27,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'analytics' %} active{% endif %}\" href=\"{{ url_for('analytics') }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159687",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 32,
      "severity": "LOW",
      "message": "Line too long (136 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'network_map' %} active{% endif %}\" href=\"{{ url_for('network_map') }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159689",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 37,
      "severity": "LOW",
      "message": "Line too long (138 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'ai_dashboard' %} active{% endif %}\" href=\"{{ url_for('ai_dashboard') }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159706",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 42,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'security' %} active{% endif %}\" href=\"{{ url_for('security') }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159709",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 47,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'settings' %} active{% endif %}\" href=\"{{ url_for('settings') }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.159712",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/components/navbar.html",
      "line": 52,
      "severity": "LOW",
      "message": "Line too long (148 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<a class=\"nav-link{% if request.endpoint == 'full_view' %} active{% endif %}\" href=\"{{ url_for('full_view') }}\" target=\"_blank\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.171187",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics/quota_management.html",
      "line": 718,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Quota request:', formData);"
    },
    {
      "timestamp": "2025-09-21T07:59:53.175740",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics/quota_management.html",
      "line": 124,
      "severity": "LOW",
      "message": "Line too long (145 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<h4 class=\"mb-2\">Current Subscription: {{ tenant.subscription.plan.name if tenant.subscription else 'No Plan' }}</h4>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.175747",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics/quota_management.html",
      "line": 214,
      "severity": "LOW",
      "message": "Line too long (151 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "{{ tenant.subscription.current_period_end.strftime('%B %d, %Y') if tenant.subscription.current_period_end else 'N/A' }}</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.175750",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics/quota_management.html",
      "line": 217,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "{{ tenant.subscription.days_until_renewal if tenant.subscription.days_until_renewal else 'N/A' }} days</p>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.175762",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics/quota_management.html",
      "line": 538,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "message: `${formatMetricName(metric)} approaching quota limit (${data.percentage_used.toFixed(1)}%)`"
    },
    {
      "timestamp": "2025-09-21T07:59:53.177774",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics/quota_management.html",
      "line": 434,
      "severity": "HIGH",
      "message": "JavaScript dom xss",
      "details": "Pattern: innerHTML\\s*=\\s*[^;]*\\+",
      "code_snippet": "document.getElementById('overallQuotaUsage').innerHTML = overallUsage + '%';"
    },
    {
      "timestamp": "2025-09-21T07:59:53.194613",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/analytics/usage_dashboard.html",
      "line": 744,
      "severity": "LOW",
      "message": "Line too long (175 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "csv += `${formatMetricName(metric)},${info.current_usage},${info.quota},${info.percentage_used}%,${getStatusText(info.percentage_used, info.is_over_quota)}\\n`;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210844",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 114,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210856",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 118,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"updateTimeRange(15)\">Last 15 minutes</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210859",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 120,
      "severity": "LOW",
      "message": "Line too long (122 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"updateTimeRange(360)\">Last 6 hours</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 121,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<li><a class=\"dropdown-item\" href=\"#\" onclick=\"updateTimeRange(1440)\">Last 24 hours</a></li>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210872",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 398,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status: data.system.cpu_percent > 80 ? 'critical' : data.system.cpu_percent > 60 ? 'warning' : 'healthy',"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210875",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 405,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status: data.system.memory_percent > 80 ? 'critical' : data.system.memory_percent > 60 ? 'warning' : 'healthy',"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210878",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 426,
      "severity": "LOW",
      "message": "Line too long (131 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "status: data.application.error_rate > 5 ? 'critical' : data.application.error_rate > 1 ? 'warning' : 'healthy',"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210882",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 449,
      "severity": "LOW",
      "message": "Line too long (177 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<i class=\"fas fa-arrow-${card.trend === 'up' ? 'up text-success' : card.trend === 'down' ? 'down text-danger' : 'right text-secondary'}\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.210886",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/performance/dashboard.html",
      "line": 521,
      "severity": "LOW",
      "message": "Line too long (144 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"badge ${endpoint.error_rate > 5 ? 'bg-danger' : endpoint.error_rate > 1 ? 'bg-warning' : 'bg-success'}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.224762",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/remote/dashboard.html",
      "line": 429,
      "severity": "LOW",
      "message": "Potential debug code",
      "details": "Pattern: console\\.log\\s*\\(",
      "code_snippet": "console.log('Remote Access Dashboard initialized');"
    },
    {
      "timestamp": "2025-09-21T07:59:53.229917",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/remote/dashboard.html",
      "line": 169,
      "severity": "LOW",
      "message": "Line too long (140 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<i class=\"bi bi-{{ 'diagram-3' if tunnel.type == 'wireguard' else 'shield-lock' }}\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.229922",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/remote/dashboard.html",
      "line": 175,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<span class=\"status-indicator status-{{ 'up' if tunnel.active else 'down' }}\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.229926",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/remote/dashboard.html",
      "line": 222,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<button class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#createTunnelModal\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.229931",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/remote/dashboard.html",
      "line": 318,
      "severity": "LOW",
      "message": "Line too long (121 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<div class=\"modal fade\" id=\"createTunnelModal\" tabindex=\"-1\" aria-labelledby=\"createTunnelModalLabel\" aria-hidden=\"true\">"
    },
    {
      "timestamp": "2025-09-21T07:59:53.229947",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/templates/remote/dashboard.html",
      "line": 756,
      "severity": "LOW",
      "message": "Line too long (156 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "<i class=\"bi bi-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} text-${type === 'success' ? 'success' : 'danger'} me-2\"></i>"
    },
    {
      "timestamp": "2025-09-21T07:59:53.247331",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/istio/traffic-management.yaml",
      "line": 156,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "const config = JSON.parse(this.getBufferBytes(WasmBufferType.PluginConfiguration, 0, size).toString());"
    },
    {
      "timestamp": "2025-09-21T07:59:53.254798",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/base/ingress.yaml",
      "line": 26,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "add_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';\";"
    },
    {
      "timestamp": "2025-09-21T07:59:53.254806",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/base/ingress.yaml",
      "line": 34,
      "severity": "LOW",
      "message": "Line too long (130 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "nginx.ingress.kubernetes.io/gzip-types: \"text/plain,text/css,text/xml,text/javascript,application/javascript,application/json\""
    },
    {
      "timestamp": "2025-09-21T07:59:53.262120",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/base/monitoring.yaml",
      "line": 125,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "expr: kubelet_volume_stats_available_bytes{persistentvolumeclaim=~\"homenetmon-.*\"} / kubelet_volume_stats_capacity_bytes < 0.1"
    },
    {
      "timestamp": "2025-09-21T07:59:53.262127",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/base/monitoring.yaml",
      "line": 194,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"expr\": \"histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=\\\"homenetmon-app\\\"}[5m]))\","
    },
    {
      "timestamp": "2025-09-21T07:59:53.262130",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/base/monitoring.yaml",
      "line": 198,
      "severity": "LOW",
      "message": "Line too long (123 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "\"expr\": \"histogram_quantile(0.50, rate(http_request_duration_seconds_bucket{job=\\\"homenetmon-app\\\"}[5m]))\","
    },
    {
      "timestamp": "2025-09-21T07:59:53.265082",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/base/configmap.yaml",
      "line": 80,
      "severity": "LOW",
      "message": "Line too long (134 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "add_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';\";"
    },
    {
      "timestamp": "2025-09-21T07:59:53.303150",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/traffic/nginx-load-balancer.yaml",
      "line": 88,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "server homenetmon-app-0.homenetmon-service.homenetmon.svc.cluster.local:5000 max_fails=3 fail_timeout=30s weight=3;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.303161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/traffic/nginx-load-balancer.yaml",
      "line": 89,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "server homenetmon-app-1.homenetmon-service.homenetmon.svc.cluster.local:5000 max_fails=3 fail_timeout=30s weight=3;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.303164",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/traffic/nginx-load-balancer.yaml",
      "line": 90,
      "severity": "LOW",
      "message": "Line too long (127 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "server homenetmon-app-2.homenetmon-service.homenetmon.svc.cluster.local:5000 max_fails=3 fail_timeout=30s weight=2;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.303168",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/traffic/nginx-load-balancer.yaml",
      "line": 121,
      "severity": "LOW",
      "message": "Line too long (367 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "add_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://"
    },
    {
      "timestamp": "2025-09-21T07:59:53.303172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/traffic/nginx-load-balancer.yaml",
      "line": 142,
      "severity": "LOW",
      "message": "Line too long (132 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;"
    },
    {
      "timestamp": "2025-09-21T07:59:53.303177",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/traffic/nginx-load-balancer.yaml",
      "line": 254,
      "severity": "LOW",
      "message": "Line too long (126 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "return 200 \"Contact: security@homenetmon.local\\nExpires: 2025-12-31T23:59:59.000Z\\nPreferred-Languages: en\\n\";"
    },
    {
      "timestamp": "2025-09-21T07:59:53.306113",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/overlays/development/kustomization.yaml",
      "line": 10,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "- ../../base"
    },
    {
      "timestamp": "2025-09-21T07:59:53.306121",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/overlays/development/kustomization.yaml",
      "line": 10,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "- ../../base"
    },
    {
      "timestamp": "2025-09-21T07:59:53.311574",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/overlays/production/kustomization.yaml",
      "line": 10,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "- ../../base"
    },
    {
      "timestamp": "2025-09-21T07:59:53.311581",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/k8s/overlays/production/kustomization.yaml",
      "line": 10,
      "severity": "CRITICAL",
      "message": "Potential path traversal",
      "details": "Pattern: \\.\\.\\/",
      "code_snippet": "- ../../base"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426475",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 35,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_trigger_network_scan_success(self, mock_get_scanner, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426499",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_trigger_network_scan_already_running(self, mock_get_scanner, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426511",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 65,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_reload_scanner_config(self, mock_get_scanner, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426523",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_data_basic(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426533",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 98,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_data_filter_by_device(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426545",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 117,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_data_time_range(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 140,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_data_pagination(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426570",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 158,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_data_empty(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 170,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_statistics(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426592",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 193,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_statistics_by_device(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426603",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 212,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_quick_stats(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426618",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 238,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_statistics_time_range(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426635",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 269,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_chart_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426648",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 289,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_timeline(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426662",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 313,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_timeline_filtered(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426674",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 332,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_timeline_aggregation_options(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426688",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 356,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alerts_basic(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426697",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 370,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alerts_filter_by_severity(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426706",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 383,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alerts_filter_by_status(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426715",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 396,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_acknowledge_alert_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426725",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 412,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_acknowledge_alert_not_found(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426731",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 418,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_acknowledge_all_alerts(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426743",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 439,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_resolve_alert_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426754",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 455,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_delete_alert_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426764",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 471,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_delete_all_alerts(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426776",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 490,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_cleanup_duplicate_alerts(self, mock_get_correlation, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426787",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 508,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_acknowledge_alerts(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426802",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 535,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_resolve_alerts(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426813",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 552,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_delete_alerts(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426843",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 577,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_operations_invalid_ids(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426861",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 599,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_monitoring_status(self, mock_get_monitor, mock_get_scanner, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426875",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 623,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_background_activity(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426886",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 639,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_network_topology(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426904",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 672,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_topology_test(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426914",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 688,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_export_monitoring_data_csv(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426926",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 707,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_export_monitoring_data_filtered(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426937",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 724,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_export_monitoring_data_json(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426947",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 740,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_bandwidth_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426955",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 750,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_bandwidth_timeline(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426961",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 758,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_bandwidth_summary(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426968",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 766,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_bandwidth_rankings(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426976",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 778,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alert_priority_summary(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.426989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 799,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_recalculate_alert_priorities(self, mock_scorer_class, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427000",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 815,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alerts_by_priority(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 835,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alert_priority_details(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427023",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 854,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_device_id_parameter(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427029",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 860,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_time_range_parameters(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427035",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 866,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_pagination_out_of_range(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427041",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 874,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_service_unavailable_handling(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427900",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427904",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427909",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from io import StringIO"
    },
    {
      "timestamp": "2025-09-21T07:59:53.427917",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tests.fixtures.utils import APITestHelper"
    },
    {
      "timestamp": "2025-09-21T07:59:53.432365",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 35,
      "severity": "MEDIUM",
      "message": "Function 'test_trigger_network_scan_success' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432451",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 65,
      "severity": "MEDIUM",
      "message": "Function 'test_reload_scanner_config' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432494",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 83,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_data_basic' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432543",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 98,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_data_filter_by_device' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432603",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 117,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_data_time_range' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432648",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 140,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_data_pagination' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432728",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 170,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_statistics' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432776",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 193,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_statistics_by_device' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432837",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 212,
      "severity": "MEDIUM",
      "message": "Function 'test_get_quick_stats' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432896",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 238,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_statistics_time_range' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.432948",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 269,
      "severity": "MEDIUM",
      "message": "Function 'test_get_chart_data' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433006",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 289,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_timeline' is too long (85 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433053",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 313,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_timeline_filtered' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433093",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 332,
      "severity": "MEDIUM",
      "message": "Function 'test_get_timeline_aggregation_options' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433136",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 356,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alerts_basic' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433178",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 370,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alerts_filter_by_severity' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433219",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 383,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alerts_filter_by_status' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433267",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 396,
      "severity": "MEDIUM",
      "message": "Function 'test_acknowledge_alert_success' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433339",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 418,
      "severity": "MEDIUM",
      "message": "Function 'test_acknowledge_all_alerts' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433387",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 439,
      "severity": "MEDIUM",
      "message": "Function 'test_resolve_alert_success' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433431",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 455,
      "severity": "MEDIUM",
      "message": "Function 'test_delete_alert_success' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433474",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 471,
      "severity": "MEDIUM",
      "message": "Function 'test_delete_all_alerts' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433512",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 490,
      "severity": "MEDIUM",
      "message": "Function 'test_cleanup_duplicate_alerts' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433586",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 508,
      "severity": "MEDIUM",
      "message": "Function 'test_bulk_acknowledge_alerts' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433630",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 535,
      "severity": "MEDIUM",
      "message": "Function 'test_bulk_resolve_alerts' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433691",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 552,
      "severity": "MEDIUM",
      "message": "Function 'test_bulk_delete_alerts' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433731",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 577,
      "severity": "MEDIUM",
      "message": "Function 'test_bulk_operations_invalid_ids' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433792",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 599,
      "severity": "MEDIUM",
      "message": "Function 'test_get_monitoring_status' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433886",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 639,
      "severity": "MEDIUM",
      "message": "Function 'test_get_network_topology' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.433957",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 688,
      "severity": "MEDIUM",
      "message": "Function 'test_export_monitoring_data_csv' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.434001",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 707,
      "severity": "MEDIUM",
      "message": "Function 'test_export_monitoring_data_filtered' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.434163",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 778,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alert_priority_summary' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.434207",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 799,
      "severity": "MEDIUM",
      "message": "Function 'test_recalculate_alert_priorities' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.434265",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 815,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alerts_by_priority' is too long (92 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.434303",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_monitoring_api.py",
      "line": 835,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alert_priority_details' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.453494",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_empty(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453513",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 40,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_basic(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453527",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 62,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_with_monitoring_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453539",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 80,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_filter_by_group(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453549",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 95,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_filter_by_type(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453558",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 110,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_filter_by_status(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453570",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_monitored_only(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 141,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_multiple_filters(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453595",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 172,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_not_found(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453611",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 193,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_with_monitoring_history(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453621",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 210,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_with_alerts(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453632",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 228,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 251,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_minimal_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453654",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 264,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_duplicate_ip(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453664",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 278,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_invalid_ip(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453672",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 289,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_missing_ip(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453682",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 303,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_update_device_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453696",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 328,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_update_device_not_found(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 338,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_update_device_monitoring_status(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453715",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 355,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_update_device_ip_change_validation(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453726",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 373,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_delete_device_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453736",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 388,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_delete_device_not_found(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453741",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 394,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_delete_device_cascade_monitoring_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453752",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 410,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_delete_device_cascade_alerts(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453765",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 431,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_ping_device_success(self, mock_current_app, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453777",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 450,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_ping_device_not_found(self, mock_monitor, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453782",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 456,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_ping_all_devices(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453794",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 474,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_test_ping_ip(self, mock_ping, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 490,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_test_ping_ip_timeout(self, mock_ping, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453812",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 502,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_test_ping_invalid_ip(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 512,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_groups(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453832",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 533,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_types(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453846",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 558,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_summary(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453867",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 589,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_summary_empty(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453878",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 606,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_update_devices(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453896",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 640,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_ping_devices(self, mock_current_app, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453913",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 668,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_update_invalid_device_ids(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453924",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 686,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_bulk_update_missing_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453934",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 701,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_ip_history(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453943",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 714,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_ip_history_not_found(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453950",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 724,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_json_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 734,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_missing_content_type(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453967",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 749,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_database_error_handling(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.453977",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 763,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_concurrent_modification_handling(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.454722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.454726",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:53.454735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 25,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tests.fixtures.utils import APITestHelper"
    },
    {
      "timestamp": "2025-09-21T07:59:53.458554",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 40,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_basic' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458606",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 62,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_with_monitoring_data' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458650",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 80,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_filter_by_group' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458697",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 95,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_filter_by_type' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458742",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 110,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_filter_by_status' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458781",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 130,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_monitored_only' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458830",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 141,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_multiple_filters' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458895",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 172,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_success' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458955",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 193,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_with_monitoring_history' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.458995",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 210,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_with_alerts' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459048",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 228,
      "severity": "MEDIUM",
      "message": "Function 'test_create_device_success' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459195",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 303,
      "severity": "MEDIUM",
      "message": "Function 'test_update_device_success' is too long (86 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459255",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 338,
      "severity": "MEDIUM",
      "message": "Function 'test_update_device_monitoring_status' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459323",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 373,
      "severity": "MEDIUM",
      "message": "Function 'test_delete_device_success' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459374",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 394,
      "severity": "MEDIUM",
      "message": "Function 'test_delete_device_cascade_monitoring_data' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459411",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 410,
      "severity": "MEDIUM",
      "message": "Function 'test_delete_device_cascade_alerts' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459457",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 431,
      "severity": "MEDIUM",
      "message": "Function 'test_ping_device_success' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459526",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 456,
      "severity": "MEDIUM",
      "message": "Function 'test_ping_all_devices' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459566",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 474,
      "severity": "MEDIUM",
      "message": "Function 'test_test_ping_ip' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459662",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 512,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_groups' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459715",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 533,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_types' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459786",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 558,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_summary' is too long (109 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459823",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 589,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_summary_empty' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459905",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 606,
      "severity": "MEDIUM",
      "message": "Function 'test_bulk_update_devices' is too long (118 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.459979",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_devices_api.py",
      "line": 640,
      "severity": "MEDIUM",
      "message": "Function 'test_bulk_ping_devices' is too long (111 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.476911",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 31,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_history_basic(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.476948",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 57,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_history_filtered_by_alert(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.476958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 68,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_history_filtered_by_type(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.476965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 76,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_history_filtered_by_status(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.476972",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 84,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_history_time_range(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.476980",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 95,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_history_pagination(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.476989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_stats_basic(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477000",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 126,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_stats_time_period(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477007",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 135,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_stats_by_alert_type(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477015",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 146,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_types(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477030",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 169,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_clear_notification_history(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477039",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 181,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_clear_notification_history_with_cutoff_date(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477046",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 191,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_clear_notification_history_by_type(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477055",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_retry_notification_success(self, mock_service, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477068",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 228,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_retry_notification_not_found(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477075",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 237,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_retry_notification_already_successful(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477087",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 256,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notifications_for_alert(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477103",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 285,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notifications_for_nonexistent_alert(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477112",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 296,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_test_notification_email(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477124",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 315,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_test_notification_webhook(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477134",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 331,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_test_notification_failure(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 345,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_test_notification_invalid_type(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477152",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 357,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_test_notification_missing_data(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477162",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 373,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_failure_analysis(self, mock_history, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477172",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 386,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_failure_analysis_by_type(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477178",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 393,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_failure_analysis_time_range(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477186",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 406,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_trends(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477195",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 419,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_performance(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477205",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 432,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_predictions(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477216",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 449,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_generate_read_receipt_token(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477229",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 471,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_track_read_receipt(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477241",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 491,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_read_receipt_pixel(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477249",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 502,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_read_receipt_pixel_invalid_token(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477257",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 511,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_read_receipt_analytics(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477268",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 531,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_receipts(self, mock_service, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477279",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 548,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_notification_receipts_not_found(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477287",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 558,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_digest_summary(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477295",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 570,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_escalation_tracking(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477305",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 585,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_template_management(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477315",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 600,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_channel_health(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477327",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 622,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_notification_id(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477333",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 628,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_alert_id(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477339",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 634,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_time_parameters(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477344",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 640,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_service_unavailable(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477353",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 653,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_database_error_handling(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.477359",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 660,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_rate_limiting_simulation(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.478036",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.478039",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:53.478048",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tests.fixtures.utils import APITestHelper"
    },
    {
      "timestamp": "2025-09-21T07:59:53.481020",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 31,
      "severity": "MEDIUM",
      "message": "Function 'test_get_notification_history_basic' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481138",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 84,
      "severity": "MEDIUM",
      "message": "Function 'test_get_notification_history_time_range' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481205",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function 'test_get_notification_stats_basic' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481300",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 146,
      "severity": "MEDIUM",
      "message": "Function 'test_get_notification_types' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481427",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 204,
      "severity": "MEDIUM",
      "message": "Function 'test_retry_notification_success' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481532",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 256,
      "severity": "MEDIUM",
      "message": "Function 'test_get_notifications_for_alert' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481587",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 296,
      "severity": "MEDIUM",
      "message": "Function 'test_send_test_notification_email' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481899",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 449,
      "severity": "MEDIUM",
      "message": "Function 'test_generate_read_receipt_token' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.481941",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 471,
      "severity": "MEDIUM",
      "message": "Function 'test_track_read_receipt' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.482026",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 511,
      "severity": "MEDIUM",
      "message": "Function 'test_get_read_receipt_analytics' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.482067",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 531,
      "severity": "MEDIUM",
      "message": "Function 'test_get_notification_receipts' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.482159",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 570,
      "severity": "MEDIUM",
      "message": "Function 'test_notification_escalation_tracking' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.482228",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_alerts_notifications_api.py",
      "line": 600,
      "severity": "MEDIUM",
      "message": "Function 'test_notification_channel_health' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.500473",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_summary_basic(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500500",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_summary_empty(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500510",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 72,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_summary_calculation(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500524",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 97,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_performance_basic(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500538",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 119,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_performance_sorting(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500550",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 139,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_performance_filtering(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500562",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 158,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_devices_performance_pagination(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500575",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 178,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_performance_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500590",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 204,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_performance_not_found(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500596",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 210,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_performance_no_metrics(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 223,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_performance_timeline_success(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500621",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 251,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_device_performance_timeline_filtered(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500639",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 281,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_health_scores_distribution(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500659",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 316,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_health_scores_distribution_empty(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500682",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 330,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_top_performers_basic(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500699",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 360,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_top_performers_limit(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500711",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 378,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_top_performers_minimum_score(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500726",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 404,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_trigger_device_performance_collection(self, mock_get_monitor, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500738",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 422,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_trigger_device_performance_collection_not_found(self, mock_get_monitor, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500744",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 429,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_trigger_all_performance_collection(self, mock_get_monitor, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500757",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 450,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_trigger_performance_collection_service_error(self, mock_get_monitor, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500767",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 465,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_alerts_summary(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500788",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 502,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_alerts_summary_by_subtype(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 530,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_alerts_summary_empty(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500814",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 546,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_comparison_across_time(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500835",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 584,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_trends_analysis(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500849",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 608,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_benchmarking(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500869",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 638,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_devices_performance_grade_filtering(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500881",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 657,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_devices_performance_score_range_filtering(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500893",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 676,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_devices_performance_time_based_filtering(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500912",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 711,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_device_id_parameter(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500918",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 717,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_time_parameters(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500924",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 725,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_score_range_parameters(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500930",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 731,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_invalid_pagination_parameters(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500936",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 737,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_service_unavailable(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500943",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 746,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_database_error_handling(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.500951",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 755,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_large_dataset_handling(self, client, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.501718",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.501722",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:53.501731",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tests.fixtures.utils import APITestHelper"
    },
    {
      "timestamp": "2025-09-21T07:59:53.505403",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 32,
      "severity": "MEDIUM",
      "message": "Function 'test_get_performance_summary_basic' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505493",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 72,
      "severity": "MEDIUM",
      "message": "Function 'test_get_performance_summary_calculation' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505551",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 97,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_performance_basic' is too long (84 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505609",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 119,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_performance_sorting' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505656",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 139,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_performance_filtering' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505701",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 158,
      "severity": "MEDIUM",
      "message": "Function 'test_get_devices_performance_pagination' is too long (67 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505770",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 178,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_performance_success' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505822",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 210,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_performance_no_metrics' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505893",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 223,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_performance_timeline_success' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.505958",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 251,
      "severity": "MEDIUM",
      "message": "Function 'test_get_device_performance_timeline_filtered' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506034",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 281,
      "severity": "MEDIUM",
      "message": "Function 'test_get_health_scores_distribution' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506134",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 330,
      "severity": "MEDIUM",
      "message": "Function 'test_get_top_performers_basic' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506184",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 360,
      "severity": "MEDIUM",
      "message": "Function 'test_get_top_performers_limit' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506232",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 378,
      "severity": "MEDIUM",
      "message": "Function 'test_get_top_performers_minimum_score' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506278",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 404,
      "severity": "MEDIUM",
      "message": "Function 'test_trigger_device_performance_collection' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506345",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 429,
      "severity": "MEDIUM",
      "message": "Function 'test_trigger_all_performance_collection' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506435",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 465,
      "severity": "MEDIUM",
      "message": "Function 'test_get_performance_alerts_summary' is too long (104 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506482",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 502,
      "severity": "MEDIUM",
      "message": "Function 'test_get_performance_alerts_summary_by_subtype' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506574",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 546,
      "severity": "MEDIUM",
      "message": "Function 'test_performance_comparison_across_time' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506636",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 584,
      "severity": "MEDIUM",
      "message": "Function 'test_performance_trends_analysis' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506696",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 608,
      "severity": "MEDIUM",
      "message": "Function 'test_performance_benchmarking' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506746",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 638,
      "severity": "MEDIUM",
      "message": "Function 'test_devices_performance_grade_filtering' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506792",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 657,
      "severity": "MEDIUM",
      "message": "Function 'test_devices_performance_score_range_filtering' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.506856",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/api/test_performance_api.py",
      "line": 676,
      "severity": "MEDIUM",
      "message": "Function 'test_devices_performance_time_based_filtering' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.517909",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def clear_all_tables(session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517930",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 43,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_table_count(session, table_name):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517937",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 49,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_test_schema(app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517945",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 59,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_json_response(response, status_code=200):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517952",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 66,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_success_response(response, message_contains=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 74,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_error_response(response, status_code=400, error_contains=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 83,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def post_json(client, url, data, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 91,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def put_json(client, url, data, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517979",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_mock_nmap_result(hosts_data):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517987",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 113,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def getitem_side_effect(ip):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.517998",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 130,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_mock_ping_responses(ip_responses):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518004",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 137,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_ping(ip, timeout=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518011",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 144,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def mock_external_services():"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518028",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 175,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_time_series(start_time, count, interval_minutes=5):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518036",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 187,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def wait_for_condition(condition_func, timeout_seconds=5, check_interval=0.1):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518047",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 203,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_health_score_test_data():"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518064",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 234,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_health_score_range(score, min_score=0, max_score=100):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518069",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 240,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_performance_grade(grade):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518076",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 250,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_alert_test_scenarios():"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518094",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 282,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_alert_properties(alert, expected_type, expected_severity):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518118",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 295,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_mock_socketio():"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518125",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 302,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_socketio_emit_called(mock_socketio, event_name, data_contains=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518139",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 324,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_device_properties(device, expected_ip=None, expected_type=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518149",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_monitoring_data_properties(monitoring_data, expected_device_id=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518157",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 347,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def assert_performance_metrics_properties(performance_metrics, expected_device_id=None):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518167",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 363,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_sample_network_scan_result():"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518181",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 387,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def get_sample_ping_responses():"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518576",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 9,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518581",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from contextlib import contextmanager"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518585",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518588",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:53.518592",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:53.520526",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 103,
      "severity": "MEDIUM",
      "message": "Function 'create_mock_nmap_result' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.520593",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 144,
      "severity": "MEDIUM",
      "message": "Function 'mock_external_services' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.520849",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 302,
      "severity": "MEDIUM",
      "message": "Function 'assert_socketio_emit_called' is too long (113 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.520942",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/utils.py",
      "line": 113,
      "severity": "MEDIUM",
      "message": "Function 'getitem_side_effect' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.528206",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 38,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: random\\.randint\\(",
      "code_snippet": "'last_seen': datetime.utcnow() - timedelta(minutes=random.randint(1, 60)),"
    },
    {
      "timestamp": "2025-09-21T07:59:53.528339",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 229,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: random\\.randint\\(",
      "code_snippet": "'priority_score': random.randint(1, 100),"
    },
    {
      "timestamp": "2025-09-21T07:59:53.528376",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 280,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: random\\.randint\\(",
      "code_snippet": "created_hours_ago = random.randint(2, 48)  # Created 2-48 hours ago"
    },
    {
      "timestamp": "2025-09-21T07:59:53.528381",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 281,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: random\\.randint\\(",
      "code_snippet": "resolved_hours_ago = random.randint(1, created_hours_ago - 1)  # Resolved 1 hour to (created_hours_ago - 1) hours ago"
    },
    {
      "timestamp": "2025-09-21T07:59:53.528399",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 301,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: random\\.randint\\(",
      "code_snippet": "created_minutes_ago = random.randint(30, 300)  # Created 30-300 minutes ago"
    },
    {
      "timestamp": "2025-09-21T07:59:53.528403",
      "test_type": "security",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 302,
      "severity": "MEDIUM",
      "message": "Potential insecure random",
      "details": "Pattern: random\\.randint\\(",
      "code_snippet": "acknowledged_minutes_ago = random.randint(1, created_minutes_ago - 10)  # Acknowledged after creation"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529767",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 281,
      "severity": "LOW",
      "message": "Line too long (125 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "resolved_hours_ago = random.randint(1, created_hours_ago - 1)  # Resolved 1 hour to (created_hours_ago - 1) hours ago"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529790",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 26,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529811",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 62,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def _generate_mac():"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 74,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529840",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 111,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529849",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 124,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529861",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 137,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529871",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 151,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529888",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 181,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529899",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 198,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529911",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529935",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 264,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529945",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 278,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 299,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529972",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 321,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529982",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 335,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.529993",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 351,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create(cls, **kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530225",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 55,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530249",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 100,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530327",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 253,
      "severity": "MEDIUM",
      "message": "Code quality: bare except",
      "details": "",
      "code_snippet": "except:"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530400",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import random"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530404",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import string"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530408",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530411",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530431",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530440",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 64,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530457",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 96,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:53.530531",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 249,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import db"
    },
    {
      "timestamp": "2025-09-21T07:59:53.532160",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 26,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532258",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 74,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532389",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 151,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (110 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532434",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 181,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532478",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 198,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532556",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 217,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532622",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 278,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532667",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 299,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.532750",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/simple_factories.py",
      "line": 351,
      "severity": "MEDIUM",
      "message": "Function 'create' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.540146",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 198,
      "severity": "LOW",
      "message": "Line too long (124 chars)",
      "details": "Consider breaking long lines for readability",
      "code_snippet": "alert_subtype = factory.fuzzy.FuzzyChoice(['performance_critical', 'performance_warning', 'performance_responsiveness'])"
    },
    {
      "timestamp": "2025-09-21T07:59:53.540264",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 231,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_device_with_monitoring_data(session, monitoring_count=10, **device_kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.540277",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 251,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_device_with_performance_metrics(session, metrics_count=5, **device_kwargs):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.540290",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 271,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def create_network_topology(session, device_count=5):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.540593",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 8,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import factory"
    },
    {
      "timestamp": "2025-09-21T07:59:53.540598",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 11,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from faker import Faker"
    },
    {
      "timestamp": "2025-09-21T07:59:53.540602",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import sys"
    },
    {
      "timestamp": "2025-09-21T07:59:53.540605",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import os"
    },
    {
      "timestamp": "2025-09-21T07:59:53.542245",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 231,
      "severity": "MEDIUM",
      "message": "Function 'create_device_with_monitoring_data' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.542301",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 251,
      "severity": "MEDIUM",
      "message": "Function 'create_device_with_performance_metrics' is too long (68 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.542365",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories_original.py",
      "line": 271,
      "severity": "MEDIUM",
      "message": "Function 'create_network_topology' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.544414",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories.py",
      "line": 10,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import factory"
    },
    {
      "timestamp": "2025-09-21T07:59:53.544422",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from faker import Faker"
    },
    {
      "timestamp": "2025-09-21T07:59:53.544430",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/fixtures/factories.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import warnings"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556622",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_metrics_creation(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556658",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 76,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_metrics_creation_minimal(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556670",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 92,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_metrics_repr(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556680",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 105,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_health_score_excellent_performance(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556714",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 139,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_health_score_poor_performance(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556734",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 173,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_health_score_average_performance(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556752",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 207,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_health_score_missing_data(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556764",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 226,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_a_plus(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556771",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 234,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_a(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556778",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 242,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_b_plus(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556784",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 250,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_b(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556791",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 258,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_c_range(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556799",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 268,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_d_range(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556807",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 278,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_f(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556814",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 286,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_grade_none_health_score(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556823",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 298,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_status_excellent(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556829",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 305,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_status_good(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556835",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 312,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_status_fair(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556842",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 319,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_status_poor(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556848",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 326,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_status_unknown(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556860",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_relationship(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556868",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_cascade_delete_from_device(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556880",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 365,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_to_dict_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556906",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 413,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_anomalous_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556920",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 436,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_trend_direction(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556939",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 471,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_metrics_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556945",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 477,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_excellent_performance_metrics_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556953",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 487,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_poor_performance_metrics_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556962",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 501,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_health_score_bounds(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556971",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 514,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_uptime_percentage_bounds(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556977",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 519,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_response_time_positive(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556986",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 531,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_check_counts_consistency(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.556996",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 547,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_compare_with_previous(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.557012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 575,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_summary(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.557584",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.557589",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from unittest.mock import patch"
    },
    {
      "timestamp": "2025-09-21T07:59:53.560014",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Function 'test_performance_metrics_creation' is too long (126 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.560123",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 105,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_health_score_excellent_performance' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.560165",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 139,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_health_score_poor_performance' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.560204",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 173,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_health_score_average_performance' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.560601",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 365,
      "severity": "MEDIUM",
      "message": "Function 'test_to_dict_method' is too long (143 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.560687",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 436,
      "severity": "MEDIUM",
      "message": "Function 'test_get_trend_direction' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.560892",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_performance_metrics.py",
      "line": 547,
      "severity": "MEDIUM",
      "message": "Function 'test_compare_with_previous' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.574732",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 28,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_creation(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574761",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 59,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_creation_minimal(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574771",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 70,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_unique_ip_constraint(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574785",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 93,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_repr(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574796",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 110,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_display_name_with_custom_name(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574804",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 122,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_display_name_with_hostname_only(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574812",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 133,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_display_name_with_ip_only(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 141,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_display_name_priority(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574832",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 166,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_status_unknown_never_seen(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574839",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 174,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_status_down_not_seen_recently(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574847",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 185,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_status_up_seen_recently(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 206,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_status_warning_high_response_time(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574875",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 227,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_status_warning_packet_loss(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574891",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 257,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_uptime_percentage_no_data(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574898",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 264,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_uptime_percentage_all_successful(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574908",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 278,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_uptime_percentage_mixed_results(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574927",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 313,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_uptime_percentage_time_window(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574947",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 348,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_latest_response_time_no_data(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574953",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 355,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_latest_response_time_with_data(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574965",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 375,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_avg_response_time(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574975",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 391,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_avg_response_time_excludes_timeouts(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574986",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 409,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_monitoring_data_relationship(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.574996",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 424,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alerts_relationship(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 453,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_cascade_delete_monitoring_data(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575031",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 486,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_cascade_delete_alerts(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575050",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 521,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575056",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 528,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_router_device_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575062",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 535,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_computer_device_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575070",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 546,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_online_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575082",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 566,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_status_history(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575095",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 586,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_to_dict_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575686",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 12,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575690",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from unittest.mock import patch"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575697",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tests.fixtures.utils import assert_device_properties"
    },
    {
      "timestamp": "2025-09-21T07:59:53.575704",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import uuid"
    },
    {
      "timestamp": "2025-09-21T07:59:53.578217",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 28,
      "severity": "MEDIUM",
      "message": "Function 'test_device_creation' is too long (115 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578296",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 70,
      "severity": "MEDIUM",
      "message": "Function 'test_device_unique_ip_constraint' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578492",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 185,
      "severity": "MEDIUM",
      "message": "Function 'test_status_up_seen_recently' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578536",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 206,
      "severity": "MEDIUM",
      "message": "Function 'test_status_warning_high_response_time' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578577",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 227,
      "severity": "MEDIUM",
      "message": "Function 'test_status_warning_packet_loss' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578698",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 278,
      "severity": "MEDIUM",
      "message": "Function 'test_uptime_percentage_mixed_results' is too long (89 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578756",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 313,
      "severity": "MEDIUM",
      "message": "Function 'test_uptime_percentage_time_window' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578842",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 375,
      "severity": "MEDIUM",
      "message": "Function 'test_avg_response_time' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578911",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 409,
      "severity": "MEDIUM",
      "message": "Function 'test_monitoring_data_relationship' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.578960",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 424,
      "severity": "MEDIUM",
      "message": "Function 'test_alerts_relationship' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.579014",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 453,
      "severity": "MEDIUM",
      "message": "Function 'test_cascade_delete_monitoring_data' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.579064",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 486,
      "severity": "MEDIUM",
      "message": "Function 'test_cascade_delete_alerts' is too long (77 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.579166",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 546,
      "severity": "MEDIUM",
      "message": "Function 'test_is_online_method' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.579215",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 566,
      "severity": "MEDIUM",
      "message": "Function 'test_get_status_history' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.579263",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_device.py",
      "line": 586,
      "severity": "MEDIUM",
      "message": "Function 'test_to_dict_method' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.594026",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 30,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_monitoring_data_creation(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594053",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 63,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_monitoring_data_creation_minimal(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594065",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 78,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_monitoring_data_timeout(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594075",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 93,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_monitoring_data_repr(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594085",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 106,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_response_time_positive_or_none(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594095",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 121,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_packet_loss_bounds(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594104",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 135,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_timestamp_default(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594112",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 145,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_additional_data_json_validation(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594125",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 166,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_relationship(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594133",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 176,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_cascade_delete_from_device(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 195,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_multiple_monitoring_data_per_device(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594161",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 223,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_to_dict_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594175",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 248,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_to_dict_with_none_additional_data(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 259,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_successful_ping(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594195",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 275,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_quality_score(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594210",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 303,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_performance_category(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594233",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 347,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_query_by_time_range(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594248",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 373,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_query_successful_pings(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594261",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 393,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_query_by_performance_threshold(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594274",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 415,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_query_latest_data(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594289",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 440,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_average_response_time(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594302",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 463,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_uptime_percentage(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594318",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 490,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_packet_loss_statistics(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594332",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 515,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_monitoring_data_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594338",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 524,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_successful_monitoring_data_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594345",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 533,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_failed_monitoring_data_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594352",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 542,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_timeout_monitoring_data_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594361",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 555,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_detect_anomalies(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594377",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 585,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_trend_analysis(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.594391",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 608,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_baseline_calculation(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.595008",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.595012",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:53.595016",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from unittest.mock import patch"
    },
    {
      "timestamp": "2025-09-21T07:59:53.595024",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 24,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tests.fixtures.utils import assert_monitoring_data_properties"
    },
    {
      "timestamp": "2025-09-21T07:59:53.597642",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 30,
      "severity": "MEDIUM",
      "message": "Function 'test_monitoring_data_creation' is too long (96 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.597690",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 63,
      "severity": "MEDIUM",
      "message": "Function 'test_monitoring_data_creation_minimal' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.597921",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 176,
      "severity": "MEDIUM",
      "message": "Function 'test_cascade_delete_from_device' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.597973",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 195,
      "severity": "MEDIUM",
      "message": "Function 'test_multiple_monitoring_data_per_device' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598030",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 223,
      "severity": "MEDIUM",
      "message": "Function 'test_to_dict_method' is too long (88 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598126",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 275,
      "severity": "MEDIUM",
      "message": "Function 'test_get_quality_score' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598185",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 303,
      "severity": "MEDIUM",
      "message": "Function 'test_get_performance_category' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598240",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 347,
      "severity": "MEDIUM",
      "message": "Function 'test_query_by_time_range' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598286",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 373,
      "severity": "MEDIUM",
      "message": "Function 'test_query_successful_pings' is too long (65 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598325",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 393,
      "severity": "MEDIUM",
      "message": "Function 'test_query_by_performance_threshold' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598368",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 415,
      "severity": "MEDIUM",
      "message": "Function 'test_query_latest_data' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598416",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 440,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_average_response_time' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598475",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 463,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_uptime_percentage' is too long (87 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598514",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 490,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_packet_loss_statistics' is too long (53 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598636",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 555,
      "severity": "MEDIUM",
      "message": "Function 'test_detect_anomalies' is too long (69 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598691",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 585,
      "severity": "MEDIUM",
      "message": "Function 'test_trend_analysis' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.598763",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_monitoring_data.py",
      "line": 608,
      "severity": "MEDIUM",
      "message": "Function 'test_performance_baseline_calculation' is too long (105 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.612873",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 29,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_creation(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612915",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 61,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_creation_minimal(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612928",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 82,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_repr(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612939",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 98,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_acknowledge(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612950",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 116,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_acknowledge_default_user(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612958",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 125,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_resolve(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612968",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 141,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_acknowledge_and_resolve(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612979",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 159,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_state_immutability(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.612991",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 178,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_and_update_priority(self, mock_scorer_class, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613006",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 205,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_priority_score_bounds(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613014",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 217,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_priority_level_mapping(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613025",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 236,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_status_default(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613032",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 245,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_tracking_update(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613043",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 263,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_multiple_notifications(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613055",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 282,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_failure_tracking(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613066",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 299,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_device_relationship(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613073",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 309,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_cascade_delete_from_device(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613085",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 328,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_multiple_alerts_per_device(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613096",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 346,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_to_dict_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613113",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 377,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_active_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613123",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 391,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_age_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613132",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 405,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_should_escalate_method(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613144",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 425,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_severity_weight(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613156",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 445,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613163",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 454,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_resolved_alert_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613169",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 462,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_acknowledged_alert_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613176",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 471,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_alert_factory(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613184",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 483,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_active_alerts(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613196",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 503,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alerts_by_severity(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613208",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 522,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_alerts_by_time_range(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613223",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 550,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_required_fields(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613233",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 565,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_severity_values(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 575,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_type_values(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613248",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 585,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_priority_level_values(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613822",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 14,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import json"
    },
    {
      "timestamp": "2025-09-21T07:59:53.613830",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 23,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from tests.fixtures.utils import AlertTestHelper"
    },
    {
      "timestamp": "2025-09-21T07:59:53.616480",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 29,
      "severity": "MEDIUM",
      "message": "Function 'test_alert_creation' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.616540",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 61,
      "severity": "MEDIUM",
      "message": "Function 'test_alert_creation_minimal' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.616603",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 98,
      "severity": "MEDIUM",
      "message": "Function 'test_alert_acknowledge' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.616686",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 141,
      "severity": "MEDIUM",
      "message": "Function 'test_alert_acknowledge_and_resolve' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.616771",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 178,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_and_update_priority' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.616854",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 217,
      "severity": "MEDIUM",
      "message": "Function 'test_priority_level_mapping' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.616915",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 245,
      "severity": "MEDIUM",
      "message": "Function 'test_notification_tracking_update' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.616956",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 263,
      "severity": "MEDIUM",
      "message": "Function 'test_multiple_notifications' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617037",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 309,
      "severity": "MEDIUM",
      "message": "Function 'test_cascade_delete_from_device' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617079",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 328,
      "severity": "MEDIUM",
      "message": "Function 'test_multiple_alerts_per_device' is too long (59 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617151",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 346,
      "severity": "MEDIUM",
      "message": "Function 'test_to_dict_method' is too long (114 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617252",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 405,
      "severity": "MEDIUM",
      "message": "Function 'test_should_escalate_method' is too long (60 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617293",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 425,
      "severity": "MEDIUM",
      "message": "Function 'test_get_severity_weight' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617433",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 483,
      "severity": "MEDIUM",
      "message": "Function 'test_get_active_alerts' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617484",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 503,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alerts_by_severity' is too long (72 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.617540",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/models/test_alert.py",
      "line": 522,
      "severity": "MEDIUM",
      "message": "Function 'test_get_alerts_by_time_range' is too long (79 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.635403",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 34,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_manager_init_default(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635427",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 51,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_manager_init_with_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635435",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 58,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_manager_threshold_configuration(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635448",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 77,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_critical_device_router_ip(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635456",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 87,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_critical_device_server_ip(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635463",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 97,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_critical_device_by_type(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635472",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 109,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_critical_device_by_hostname(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635481",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 121,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_is_critical_device_none_values(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635491",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 136,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_has_consecutive_failures_never_seen(self, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635498",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 144,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_has_consecutive_failures_with_timeouts(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635509",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 162,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_has_consecutive_failures_mixed_results(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635525",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 193,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_has_consecutive_failures_not_enough(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635536",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 210,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_down_alert_critical_device(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635555",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 245,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_down_alert_regular_device(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635573",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 278,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_down_alert_too_recent(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635588",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 301,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_device_down_alert_no_consecutive_failures(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635604",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 330,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_high_latency_alert(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635622",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 363,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_high_latency_alert_below_threshold(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635638",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 390,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_high_latency_alert_timeout(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635655",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 420,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_packet_loss_alert(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635667",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 441,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_packet_loss_alert_below_threshold(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635680",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 462,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_email_notification(self, mock_smtp, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635695",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 490,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_email_notification_failure(self, mock_smtp, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635705",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 506,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_webhook_notification(self, mock_post, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635721",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 533,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_webhook_notification_failure(self, mock_post, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635733",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 553,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_send_push_notification(self, mock_push_service, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635762",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 573,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_should_create_alert_new_alert(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635771",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 583,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_should_create_alert_duplicate(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635782",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 602,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_should_create_alert_resolved_alert(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635794",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 621,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_should_create_alert_old_alert(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635808",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 644,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_start_alert_monitoring(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635818",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 658,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_stop_alert_monitoring(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635827",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 671,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_monitoring_cycle(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635844",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 703,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_custom_alert_thresholds(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635862",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 725,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_notification_configuration(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635874",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 745,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_integration_with_monitoring_data(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.635891",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 775,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_alert_priority_integration(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636645",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 15,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636655",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 18,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636658",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import smtplib"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636661",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 21,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.alerts import AlertManager"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636762",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 233,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636781",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 267,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636796",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 293,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636819",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 318,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636837",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 351,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636858",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 382,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:53.636873",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 408,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Alert"
    },
    {
      "timestamp": "2025-09-21T07:59:53.640050",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 34,
      "severity": "MEDIUM",
      "message": "Function 'test_alert_manager_init_default' is too long (70 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640196",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 97,
      "severity": "MEDIUM",
      "message": "Function 'test_is_critical_device_by_type' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640233",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 109,
      "severity": "MEDIUM",
      "message": "Function 'test_is_critical_device_by_hostname' is too long (51 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640324",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 144,
      "severity": "MEDIUM",
      "message": "Function 'test_has_consecutive_failures_with_timeouts' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640382",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 162,
      "severity": "MEDIUM",
      "message": "Function 'test_has_consecutive_failures_mixed_results' is too long (90 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640477",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 210,
      "severity": "MEDIUM",
      "message": "Function 'test_create_device_down_alert_critical_device' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640540",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 245,
      "severity": "MEDIUM",
      "message": "Function 'test_create_device_down_alert_regular_device' is too long (93 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640579",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 278,
      "severity": "MEDIUM",
      "message": "Function 'test_create_device_down_alert_too_recent' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640621",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 301,
      "severity": "MEDIUM",
      "message": "Function 'test_create_device_down_alert_no_consecutive_failures' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640688",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 330,
      "severity": "MEDIUM",
      "message": "Function 'test_create_high_latency_alert' is too long (101 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640739",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 363,
      "severity": "MEDIUM",
      "message": "Function 'test_create_high_latency_alert_below_threshold' is too long (76 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640788",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 390,
      "severity": "MEDIUM",
      "message": "Function 'test_create_high_latency_alert_timeout' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640832",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 420,
      "severity": "MEDIUM",
      "message": "Function 'test_create_packet_loss_alert' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.640933",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 462,
      "severity": "MEDIUM",
      "message": "Function 'test_send_email_notification' is too long (112 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641029",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 506,
      "severity": "MEDIUM",
      "message": "Function 'test_send_webhook_notification' is too long (94 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641071",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 533,
      "severity": "MEDIUM",
      "message": "Function 'test_send_webhook_notification_failure' is too long (62 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641111",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 553,
      "severity": "MEDIUM",
      "message": "Function 'test_send_push_notification' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641173",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 583,
      "severity": "MEDIUM",
      "message": "Function 'test_should_create_alert_duplicate' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641211",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 602,
      "severity": "MEDIUM",
      "message": "Function 'test_should_create_alert_resolved_alert' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641249",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 621,
      "severity": "MEDIUM",
      "message": "Function 'test_should_create_alert_old_alert' is too long (55 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641354",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 671,
      "severity": "MEDIUM",
      "message": "Function 'test_alert_monitoring_cycle' is too long (91 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641391",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 703,
      "severity": "MEDIUM",
      "message": "Function 'test_custom_alert_thresholds' is too long (54 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641442",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 725,
      "severity": "MEDIUM",
      "message": "Function 'test_notification_configuration' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.641497",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_alert_manager.py",
      "line": 745,
      "severity": "MEDIUM",
      "message": "Function 'test_integration_with_monitoring_data' is too long (81 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.663755",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 33,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_network_scanner_init_default(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663779",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 54,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_network_scanner_init_with_app(self, mock_mac_parser, mock_nmap, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663787",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 63,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_network_scanner_config_cache_initialization(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663798",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 77,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_config_value_with_app(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663808",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 93,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_config_value_default(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663816",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 103,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_config_cache_hot_reload(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663833",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 133,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_config_version_tracking(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663853",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 165,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_scan_network_basic(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663890",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 239,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_scan_network_with_existing_devices(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663932",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 322,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_scan_network_nmap_error(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663953",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 358,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_scan_network_empty_results(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663978",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 404,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_identify_device_type_router(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663989",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 421,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_identify_device_type_apple(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.663999",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 438,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_identify_device_type_computer(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664010",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 455,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_identify_device_type_unknown(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664023",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 477,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_parse_arp_table(self, mock_subprocess, mock_mac_parser, mock_nmap, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664056",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 512,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_parse_arp_table_error(self, mock_subprocess, mock_mac_parser, mock_nmap, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664066",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 526,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_parse_arp_table_empty(self, mock_subprocess, mock_mac_parser, mock_nmap, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664079",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 545,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_lookup_mac_vendor(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664090",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 562,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_lookup_mac_vendor_not_found(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664100",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 578,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_lookup_mac_vendor_exception(self, mock_mac_parser, mock_nmap):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664112",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 598,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_or_update_device_new(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664134",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 638,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_or_update_device_existing(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664158",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 683,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_create_or_update_device_mac_change(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664182",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 729,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_start_scanning_thread(self, mock_mac_parser, mock_nmap, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664196",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 753,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_stop_scanning_thread(self, mock_mac_parser, mock_nmap, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664211",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 779,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_manual_scan_status(self, mock_mac_parser, mock_nmap, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664224",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 800,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_new_device_notification(self, mock_push_service, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664259",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 868,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_no_notification_for_existing_devices(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664277",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 899,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_integration_with_rule_engine(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664294",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 929,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_error_handling_during_scan(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.664305",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 948,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_database_transaction_handling(self, mock_mac_parser, mock_nmap, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665234",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665240",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665243",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 20,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import subprocess"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665247",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 22,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from monitoring.scanner import NetworkScanner"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665340",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 216,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665532",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 625,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665558",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 673,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665581",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 716,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665594",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 738,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665599",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 743,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665610",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 761,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665615",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 766,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:53.665689",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 919,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from models import Device"
    },
    {
      "timestamp": "2025-09-21T07:59:53.669344",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 33,
      "severity": "MEDIUM",
      "message": "Function 'test_network_scanner_init_default' is too long (80 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.669514",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 103,
      "severity": "MEDIUM",
      "message": "Function 'test_config_cache_hot_reload' is too long (83 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.669571",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 133,
      "severity": "MEDIUM",
      "message": "Function 'test_config_version_tracking' is too long (82 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.669723",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 165,
      "severity": "MEDIUM",
      "message": "Function 'test_scan_network_basic' is too long (242 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.669873",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 239,
      "severity": "MEDIUM",
      "message": "Function 'test_scan_network_with_existing_devices' is too long (234 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.669942",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 322,
      "severity": "MEDIUM",
      "message": "Function 'test_scan_network_nmap_error' is too long (102 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670023",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 358,
      "severity": "MEDIUM",
      "message": "Function 'test_scan_network_empty_results' is too long (121 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670186",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 477,
      "severity": "MEDIUM",
      "message": "Function 'test_parse_arp_table' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670412",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 598,
      "severity": "MEDIUM",
      "message": "Function 'test_create_or_update_device_new' is too long (117 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670492",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 638,
      "severity": "MEDIUM",
      "message": "Function 'test_create_or_update_device_existing' is too long (125 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670560",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 683,
      "severity": "MEDIUM",
      "message": "Function 'test_create_or_update_device_mac_change' is too long (103 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670600",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 729,
      "severity": "MEDIUM",
      "message": "Function 'test_start_scanning_thread' is too long (56 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670643",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 753,
      "severity": "MEDIUM",
      "message": "Function 'test_stop_scanning_thread' is too long (66 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670791",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 800,
      "severity": "MEDIUM",
      "message": "Function 'test_new_device_notification' is too long (193 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670834",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 868,
      "severity": "MEDIUM",
      "message": "Function 'test_no_notification_for_existing_devices' is too long (64 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670889",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 899,
      "severity": "MEDIUM",
      "message": "Function 'test_integration_with_rule_engine' is too long (71 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.670964",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_network_scanner.py",
      "line": 948,
      "severity": "MEDIUM",
      "message": "Function 'test_database_transaction_handling' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.685559",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 32,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_monitor_init_default(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685579",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 48,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_monitor_init_with_app(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685588",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 57,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_monitor_alert_thresholds(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685600",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 77,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_config_value_with_app(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685609",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 91,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_config_value_default(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685616",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 99,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_config_value_no_app(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685623",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 108,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_get_config_value_exception_handling(self, mock_get_value, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685633",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 122,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_collect_device_performance_metrics_no_app(self):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685640",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 129,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_collect_device_performance_metrics_basic(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685656",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 158,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_collect_device_performance_metrics_no_data(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685666",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 173,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_collect_device_performance_metrics_mixed_data(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685685",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 208,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_health_score_calculation_integration(self, mock_calculate, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685697",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 228,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_check_performance_alerts_critical_health(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685710",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 250,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_check_performance_alerts_warning_health(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685723",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 270,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_check_performance_alerts_good_health(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685735",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 290,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_check_performance_alerts_consecutive_periods(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685753",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 320,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_start_monitoring_thread(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685764",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 337,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_stop_monitoring_thread(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685775",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 354,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_double_start_prevention(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685786",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 372,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_stop_when_not_running(self, app):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685795",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 386,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_socketio_integration(self, mock_socketio, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685805",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 401,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_database_transaction_handling(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685832",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 416,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_error_handling_during_collection(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685845",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 435,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_custom_collection_interval(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685858",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 449,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_custom_alert_thresholds(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685871",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 470,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_performance_data_retention(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685882",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 487,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_response_time_statistics(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685895",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 510,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_calculate_availability_statistics(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.685907",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 530,
      "severity": "LOW",
      "message": "Code quality: long functions",
      "details": "",
      "code_snippet": "def test_detect_performance_anomalies(self, app, db_session):"
    },
    {
      "timestamp": "2025-09-21T07:59:53.686466",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 13,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import pytest"
    },
    {
      "timestamp": "2025-09-21T07:59:53.686472",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 16,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import threading"
    },
    {
      "timestamp": "2025-09-21T07:59:53.686475",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 17,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "import time"
    },
    {
      "timestamp": "2025-09-21T07:59:53.686478",
      "test_type": "quality",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 19,
      "severity": "LOW",
      "message": "Code quality: unused imports",
      "details": "",
      "code_snippet": "from services.performance_monitor import PerformanceMonitor"
    },
    {
      "timestamp": "2025-09-21T07:59:53.688867",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 32,
      "severity": "MEDIUM",
      "message": "Function 'test_performance_monitor_init_default' is too long (61 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689128",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 129,
      "severity": "MEDIUM",
      "message": "Function 'test_collect_device_performance_metrics_basic' is too long (98 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689228",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 173,
      "severity": "MEDIUM",
      "message": "Function 'test_collect_device_performance_metrics_mixed_data' is too long (107 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689266",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 208,
      "severity": "MEDIUM",
      "message": "Function 'test_health_score_calculation_integration' is too long (52 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689318",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 228,
      "severity": "MEDIUM",
      "message": "Function 'test_check_performance_alerts_critical_health' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689365",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 250,
      "severity": "MEDIUM",
      "message": "Function 'test_check_performance_alerts_warning_health' is too long (63 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689407",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 270,
      "severity": "MEDIUM",
      "message": "Function 'test_check_performance_alerts_good_health' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689459",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 290,
      "severity": "MEDIUM",
      "message": "Function 'test_check_performance_alerts_consecutive_periods' is too long (75 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689604",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 386,
      "severity": "MEDIUM",
      "message": "Function 'test_socketio_integration' is too long (57 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689734",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 449,
      "severity": "MEDIUM",
      "message": "Function 'test_custom_alert_thresholds' is too long (58 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689807",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 487,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_response_time_statistics' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689862",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 510,
      "severity": "MEDIUM",
      "message": "Function 'test_calculate_availability_statistics' is too long (74 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    },
    {
      "timestamp": "2025-09-21T07:59:53.689913",
      "test_type": "complexity",
      "file": "/home/kyle/ClaudeCode/HomeNetMon/tests/unit/services/test_performance_monitor.py",
      "line": 530,
      "severity": "MEDIUM",
      "message": "Function 'test_detect_performance_anomalies' is too long (73 nodes)",
      "details": "Consider breaking into smaller functions",
      "code_snippet": ""
    }
  ]
}